/*
 * Copyright 2024 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'base'
}

subprojects {
  apply plugin: 'base'
}

tasks.register('initializeBuildx') {
  doFirst {
    if (!project.hasProperty('skipDockerBuild')) {
      // Need to do once before everything (not in parallel) see https://github.com/docker/buildx/issues/344
      def builderName = 'gocd-builder'
      logger.lifecycle("Initializing docker buildx builder [$builderName]...")

      project.exec { commandLine = ['docker', 'buildx', 'version'] }
      project.exec {
        commandLine = ['docker', 'buildx', 'rm', '--force', '--keep-state', builderName]
        ignoreExitValue = true
      }
      project.exec { commandLine = ['docker', 'buildx', 'create', '--use', '--name', builderName, '--driver-opt', 'image=moby/buildkit:rootless'] }
      project.exec { commandLine = ['docker', 'buildx', 'inspect', '--bootstrap', builderName] }
    }
  }
}

assemble.dependsOn(subprojects.tasks*.getByName('assemble'))
