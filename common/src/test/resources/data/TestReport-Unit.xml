<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- *
 * Copyright 2022 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * -->

<!--This file represents the results of running a test suite-->
<test-results name="E:\evolve\branches\release2a\src\Test\bin\Release\Macquarie.Evolve.Unit.Test.dll" total="2347" failures="0" not-run="76" date="2008-02-27" time="05:37:47">
  <environment nunit-version="2.2.8.0" clr-version="2.0.50727.1433" os-version="Microsoft Windows NT 5.2.3790 Service Pack 2" platform="Win32NT" cwd="E:\evolve\branches\release2a\src" machine-name="EVOLVE-PAIR-7" user="Administrator" user-domain="EVOLVE-PAIR-7" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="E:\evolve\branches\release2a\src\Test\bin\Release\Macquarie.Evolve.Unit.Test.dll" success="True" time="107.000" asserts="0">
    <results>
      <test-suite name="E:\evolve\branches\release2a\src\Test\bin\Release\Macquarie.Evolve.Unit.Test.dll" success="True" time="106.750" asserts="0">
        <results>
          <test-suite name="Macquarie" success="True" time="106.516" asserts="0">
            <results>
              <test-suite name="Macquarie.Evolve" success="True" time="106.250" asserts="0">
                <results>
                  <test-suite name="Macquarie.Evolve.Shared" success="True" time="0.063" asserts="0">
                    <results>
                      <test-suite name="Macquarie.Evolve.Shared.Data" success="True" time="0.063" asserts="0">
                        <results>
                          <test-suite name="Macquarie.Evolve.Shared.Data.KeywordsTest" success="True" time="0.063" asserts="0">
                            <results>
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.blank_text_should_not_be_keyword" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.continous_text_should_be_keyword" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.empty_text_should_not_be_keyword" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.multiple_whitespace_should_not_introduce_new_keyword" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.should_filter_out_1_redundant_keyword" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.should_filter_out_2_redundant_keywords" executed="True" success="True" time="0.016" asserts="9" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.should_parse_apostrophies_correctly" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.should_parse_backslash_correctly" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.should_parse_hyphens_correctly" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Macquarie.Evolve.Shared.Data.KeywordsTest.single_whitespace_separated_texts_should_be_keywords" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Macquarie.Evolve.Test" success="True" time="105.938" asserts="0">
                    <results>
                      <test-suite name="Macquarie.Evolve.Test.Unit" success="True" time="105.922" asserts="0">
                        <results>
                          <test-suite name="Macquarie.Evolve.Test.Unit.AndLogicTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Macquarie.Evolve.Test.Unit.AndLogicTest.should_run_all_if_single_and" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Macquarie.Evolve.Test.Unit.AndLogicTest.should_run_first_if_double_and" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="Macquarie.Evolve.Test.Unit.C2DConfigurer" success="True" time="0.297" asserts="0">
                            <results>
                              <test-suite name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest" success="True" time="0.297" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_set_configuration_after_save" executed="True" success="True" time="0.234" asserts="8" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_validate_password_length" executed="True" success="True" time="0.063" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_validate_server_address" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_validate_server_port_for_empty" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_validate_server_port_for_numbers" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_validate_serverLoginId_for_empty" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.C2DConfigurer.MainWindowPresenterTest.should_validate_userLoginId_for_empty" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial" success="True" time="1.563" asserts="0">
                            <results>
                              <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDConnectorFactoryTest" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDConnectorFactoryTest.should_create_real_connector_if_ctd_is_configured" executed="True" success="True" time="0.063" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest" success="True" time="0.109" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_become_unavailable_if_exception_during_dial" executed="True" success="True" time="0.063" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_become_unavailable_if_exception_during_request_to_hang_up" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_create_hang_up_request_to_hang_up" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_create_make_call_request_to_dial" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_do_user_login_after_a_successful_application_login" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_logout_from_server_only_if_user_not_logged_in" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_logout_from_user_and_server_if_user_logged_in" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_not_raise_call_connecting_event_if_eventId_not_match" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_not_raise_call_connecting_event_if_participant_status_is_not_connecting" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_raise_call_cleared_event_after_receive_call_cleared_event_from_connector" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_raise_call_cleared_event_on_event_from_myriad" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_raise_call_connected_event_after_receive_connected_event_from_connector" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_raise_call_connecting_event_after_receive_connecting_event_for_default_user_from_connector_with_" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_raise_call_connecting_event_after_receive_connecting_event_from_connector" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_raise_call_failure_event_after_receive_failure_event_and_error_message_from_connector" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_return_false_when_login_is_failure" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_send_user_logon_if_server_logon_fails_as_already_logged_in" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_store_event_id_after_receive_call_initiated_response_from_connector" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDServiceTest.should_throw_return_false_when_login_request_is_timed_out" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDXmlSerializerTest" success="True" time="0.922" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDXmlSerializerTest.should_deserialize_login_request" executed="True" success="True" time="0.641" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDXmlSerializerTest.should_deserialize_login_response" executed="True" success="True" time="0.234" asserts="5" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDXmlSerializerTest.should_serialize_login_request" executed="True" success="True" time="0.047" asserts="70" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.CTDXmlSerializerTest.should_serialize_make_call_request" executed="True" success="True" time="0.000" asserts="87" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial.SHA1Test" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SHA1Test.should_prefix_sha_to_hashed_password" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest" success="True" time="0.359" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_adjust_request_subject_based_on_reply_address" executed="True" success="True" time="0.313" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_handle_JMSException_gracefully_and_report_not_init" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_initialize_connection" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_raise_error_received_event_when_error_is_received" executed="True" success="True" time="0.016" asserts="6" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_raise_event_received_event_when_event_is_received" executed="True" success="True" time="0.000" asserts="21" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_raise_response_received_event_when_response_is_received" executed="True" success="True" time="0.000" asserts="6" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_respond_to_ping_request" executed="True" success="True" time="0.016" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.should_send_request_to_sonic_mq_server" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.SonicMQConnectorTest.TrimNullTerminator_test" executed="True" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.CancelTimer_test" executed="True" success="True" time="0.063" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.Dial_test" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.HandleTimeOut_test" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_do_sha_hash_on_password" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_hang_up" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_logout_from_client_and_server" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_report_cleared_status_using_event_after_receving_cleared_event_from_service" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_report_connected_status_using_event_after_receving_connected_event_from_service" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_report_connecting_status_using_event_after_receiving_connecting_event_from_service" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_report_failure_status_using_event_after_receving_failure_event_from_service" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_return_false_if_login_is_unsuccessful" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.ClickToDial.TelephoneTest.should_return_true_if_login_is_successful" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Macquarie.Evolve.Test.Unit.Client" success="True" time="67.781" asserts="0">
                            <results>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest" success="True" time="0.109" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should__cache_on_repeted_calls" executed="True" success="True" time="0.063" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should__pass_through_to_the_executor_if_not_in_cache" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should__pass_through_to_the_executor_when_command_is_not_cachable" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_cache_internal_response_of_batched_response" executed="True" success="True" time="0.016" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_check_cachability_of_batched_commands" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_not_cache_non_cachable_internal_commands" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_not_clear_cacheable_commands_if_not_updateable" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_not_send_batched_commands_that_are_empty" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_save_to_offline_batch_commands_correctly_in_offline_mode" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.CachingCommandExecutorTest.should_update_cache_after_command_executed_and_response_is_updated" executed="True" success="True" time="0.031" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Config" success="True" time="0.594" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest" success="True" time="0.594" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.alert_check_interval_should_be_120_seconds_if_not_specified_in_config_file" executed="True" success="True" time="0.125" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.alert_check_interval_should_be_got_from_config_file" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.ctd_timeout_setting_should_be_10_seconds_if_not_specified_in_config_file" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.ctd_timeout_setting_should_be_got_from_config_file" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.encrypt_cachefile_should_be_got_from_config_file_if_specified" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.encrypt_cachefile_should_be_true_if_not_specified" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.ResearchReportService_test_when_not_using_mock" executed="True" success="True" time="0.391" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.ResearchReportService_test_when_using_mock" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.should_load_default_context_factory_If_none_specified" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ClientConfigTest.test_should_process_client_config_section_correctly" executed="True" success="True" time="0.031" asserts="21" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Config.ReportServiceConfigTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ReportServiceConfigTest.should_process_report_service_section_correctly" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Config.ReportServiceConfigTest.should_throw_evolve_exception_when_no_config_found" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain" success="True" time="3.500" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest.ActionAlerts_AddAlerts_should_add_only_not_replied_action_alerts" executed="True" success="True" time="0.047" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest.ActionAlerts_AddAlerts_should_not_add_duplicated_alert" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest.should_not_add_duplicate_meeting_note" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest.should_not_get_thread_if_its_meeting_alert" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest.should_not_update_non_meeting_alert_with_older_one" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertListTest.should_report_correct_unread_count" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest" success="True" time="0.125" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.call_Alerts_property_should_get_all_alerts_which_are_catched_in_client_side" executed="True" success="True" time="0.047" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.connection_status_changed_to_offline_should_reset_myAlertsInitialized" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.connection_status_changed_to_online_should_InitMyAlerts" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.GetAlert_should_return_alert_from_the_ActionAlerts_if_not_exists_in_Alert_List" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.GetAlert_should_return_alert_from_the_AlertList_if_exists_in_Alert_List" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.GetAlert_should_return_null_if_cannot_find_alert_in_ActionAlerts_or_AlertList" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.InitMyAlerts_AlertList_should_contain_only_the_last_alerts_within_thread" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.InitMyAlerts_should_get_alerts_within_a_certain_period_from_proxy" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.InitMyAlerts_should_not_init_twice" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.MarkSendOutAlertRead_should_do_nothing_if_doesnot_find_the_alert_in_alert_list" executed="True" success="True" time="0.031" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.MarkSendOutAlertRead_should_mark_the_alert_has_been_read_if_find_the_alert_in_alert_list" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.should_close_alert" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.should_close_expired_alerts" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.should_mark_action_alert_replied_by_contact_note_thread_id" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.should_mark_alert_read" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertModelTest.should_remove_duplicate_alerts_with_same_contactNote" executed="True" success="True" time="0.016" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.alert_should_be_comparable" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.replied_by_is_blank_when_there_are_no_replies" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_concat_all_not_replied_users" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_concat_all_replied_users" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_get_first_line_of_striped_note_if_the_first_line_of_the_note_is_no_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_get_first_line_of_striped_note_with_no_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_get_striped_note_with_no_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_properly_format_sender" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_properly_format_tag_to" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_remove_duplicate_tag_recipients_name_in_tag_to_text" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_return_unmodified_note_if_length_less_than_25" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_use_stripped_subject_if_its_email_contact_note_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.should_use_subject_plus_note_if_its_email_contact_note" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.StripedNote_should_return_empty_string_if_contactnote_doesnot_contain_note_or_subject" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.AlertTest.tag_alert_should_get_TagGroupClients_info" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.BaseAuditHelperTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.BaseAuditHelperTest.CompareValue_should_return_null_when_oldValue_and_newValue_is_empty" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientFileTransferHelperTest" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientFileTransferHelperTest.GetFileNames_test" executed="True" success="True" time="0.031" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.findCoveringInterest_method_should_return_correct_interetes_which_is_covered_by_the_specified_interest" executed="True" success="True" time="0.031" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.findCoveringInterest_method_should_return_empty_interetes_if_find_nothing" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.isCovered_method_should_return_false_if_clientInterests_doesnot_conver_specified_interest" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.isCovered_method_should_return_true_if_clientInterests_contains_specified_interest" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.isCovered_method_should_return_true_if_clientInterests_convers_specified_interest" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.match_method_should_return_correct_region_result" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.match_method_should_return_correct_secotr_result" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.match_method_should_return_null_if_no_match_result_found" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestsTest.should_create_an_instance_by_inject_an_Interests_instance_and_interestsModel" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestTest.isCovered_should_return_correct_value" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ClientInterestTest.should_create_an_instance_by_inject_interestDTO_and_region_and_sector" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelCacheTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelCacheTest.should_call_server_with_not_found_contacts" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelCacheTest.should_find_contacts_on_server_if_nothing_is_found_in_cache" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelCacheTest.should_note_call_server_at_all_if_no_contact_is_found" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchEmailTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchEmailTest.should_load_from_myContacts_if_found" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchEmailTest.should_load_from_server_if_not_found_in_my_contacts" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchEmailTest.should_load_from_server_only_emails_not_found_in_my_contacts" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.more_keywords_should_not_reopen_filtered_contact" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_by_email_address_should_search_all_contacts" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_should_ignore_case" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_should_match_all_contacts_which_contains_keyword" executed="True" success="True" time="0.016" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_should_refine_by_following_keywords" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_should_search_family_name" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_should_search_given_name" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.search_should_search_organisation" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.should_filter_on_a_hyphen" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.should_filter_on_an_apostrophe" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.should_filter_on_backslash" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactModelSearchTest.should_filter_on_special_charactors_of_regex" executed="True" success="True" time="0.000" asserts="10" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest" success="True" time="0.203" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.should_not_validate_normal_recipients_when_normal_recipients_option_is_off" executed="True" success="True" time="0.109" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.should_not_warn_empty_note_if_note_is_empty_when_content_note_type_is_email" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.should_not_warn_empty_note_if_tag_panel_is_hidden_when_content_note_type_is_voice_mail" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.should_warn_empty_note_if_note_is_empty_when_content_note_type_is_meeting" executed="True" success="True" time="0.078" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.should_warn_empty_note_if_note_is_empty_when_content_note_type_is_phone" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.telephone_note_should_fail_in_validate_if_note_content_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.telephone_note_should_pass_all_the_validate_and_give_error_message" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.validating_telephone_contact_note_should_not_validate_tag_group_if_tag_panel_is_invisible" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.voice_note_should_fail_validate_when_tag_panel_is_visible" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ContactNoteValidatorTest.voice_note_should_pass_validate_directly_when_tag_panel_is_invisible" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.DispatcherWorkCallbackTest" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.DispatcherWorkCallbackTest.OnCompleted_should_use_dispatcher_to_callback" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.DispatcherWorkCallbackTest.OnError_should_use_dispatcher_to_callback" executed="True" success="True" time="0.016" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.GroupedTelphoneNumberTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.GroupedTelphoneNumberTest.every_type_should_have_its_own_description" executed="True" success="True" time="0.000" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.MonthlyCallCalculatorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MonthlyCallCalculatorTest.delta_should_be_NA_for_zero_target" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MonthlyCallCalculatorTest.delta_should_return_negative_difference_between_actual_and_target_within_braces" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MonthlyCallCalculatorTest.delta_should_return_positive_difference_between_actual_and_target" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MonthlyCallCalculatorTest.hitRate_should_be_NA_for_zero_target" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MonthlyCallCalculatorTest.hitRate_should_return_quotient_of_actual_divided_by_target_in_percent_with_one_bit_fraction" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest.should_display_correct_alert_lapsed_time" executed="True" success="True" time="0.000" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest.should_get_alert_by_alertId" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest.should_remove_alert_in_same_thread_first_on_alerts_arrived" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest.should_return_null_when_alert_with_the_thread_id_not_in_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest.should_return_the_alert_when_alert_with_the_thread_id_in_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.MyAlertListTest.should_reverse_items_in_alert_list" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest.found_names_should_contain_all_candidates_found" executed="True" success="True" time="0.047" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest.found_names_should_have_full_match_when_found_recipients_contain_search_key" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest.found_names_should_not_contain_candidate_when_no_recipient_found" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest.found_names_should_not_have_full_match_when_found_recipients_do_not_contain_search_key" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest.should_find_name_by_id" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.NameSearcherTest.should_find_with_group_name" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.search_by_id_should_return_corresponding_recipient" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.search_by_keywords_should_not_search_in_group_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.search_by_keywords_should_not_search_in_location" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.search_by_keywords_should_search_in_family_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.search_by_keywords_should_search_in_given_name_and_match_result_which_contains_keywords" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.search_by_multiple_keywords_should_refine_search_result" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.should_be_able_to_find_recipients_by_ids" executed="True" success="True" time="0.016" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.should_not_match_if_missing_brankets" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientModelTest.should_search_with_brackets_in_keywords" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientsTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientsTest.should_add_recipient_without_duplication" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientsTest.should_not_add_duplicated_recipients" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientsTest.should_remove_duplicate_normal_recipients" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.RecipientsTest.should_return_recipient_names" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_return_false_if_author_doesnot_match_primary_and_additional_authors_is_null" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_return_true" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_return_true_if_author_matches_found_in_additional_authors" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_when_author_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_when_region_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_when_sector_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_when_Security_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_when_Security_Tickers_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportDataTest.Match_when_title_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest" success="True" time="1.500" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetReports_should_save_files_and_return_file_paths" executed="True" success="True" time="0.125" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetReportsMetadata_should_call_reportService_with_valid_parameters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetResearchReportsHandler_should_handle_expection_which_is_not_WebException_or_FileNotFoundException_thrown_by_WebService" executed="True" success="True" time="0.031" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetResearchReportsHandler_should_handle_WebException_thrown_by_WebService" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetResearchReportWebServiceStatus_test_when_not_using_mock_service" executed="True" success="True" time="0.859" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetResearchReportWebServiceStatus_test_when_using_mock_service" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.GetStaticData_should_get_staticData_to_share_with_all_ResearchReportModel_instances" executed="True" success="True" time="0.250" asserts="12" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.ResearchReportData_should_store_reports_per_instance" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.SearchResearchReportsResultsHandler_should_handle_non_WebException_thrown_by_WebService" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.SearchResearchReportsResultsHandler_should_handle_WebException_thrown_by_WebService" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.should_construct_search_criteria_correctly" executed="True" success="True" time="0.016" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.should_correctly_map_sector_name" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.should_load_static_data_from_cache_and_update_loaded_state" executed="True" success="True" time="0.188" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.should_return_stocks_from_securities" executed="True" success="True" time="0.031" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.should_save_files_with_no_title" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.should_save_static_data_locally_after_success_fetching" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.StaticDataHandler_should_handle_non_WebException_thrown_by_WebService" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportModelTest.StaticDataHandler_should_handle_WebException_thrown_by_WebService" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.shoudl_create_display_objects_correctly" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_also_filter_by_securities" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_copy_contents_correctly" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_filter_reports_by_anding_multiple_fields" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_filter_reports_by_contents" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_filter_reports_by_part_names" executed="True" success="True" time="0.016" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_match_securities" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.ResearchReportsTest.should_match_securities_when_tickers_is_null" executed="True" success="True" time="0.000" asserts="8" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.SearchCriteriaTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SearchCriteriaTest.criteria_is_not_valid_if_none_provided" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SearchCriteriaTest.criteria_is_valid_if_atleast_one_is_provided" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SearchCriteriaTest.IsValid_is_false_if_startDate_is_after_endDate" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SearchCriteriaTest.IsValid_is_true_if_startDate_is_before_endDate" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.match_keywors_should_get_all_completed_match_result" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.search_result_sectors_should_contains_father_which_doesnot_contain_keyword_but_leaf_children_name_contains_keywords" executed="True" success="True" time="0.016" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.search_result_sectors_should_contains_leaf_children_which_name_contains_keywords" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_create_sectors_with_All_Sectors_as_parent" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_create_sectors_with_All_Sectors_as_parent_and_others_as_childern" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_create_sectors_with_All_Sectors_as_parent_and_others_as_childern_recursively" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_create_sectors_with_All_Sectors_as_parent_and_others_as_childern_recursively_when_in_random_order" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_match_sectors" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_match_sectors_when_available" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.SectorsTest.should_match_sectors_which_contains_keyword_when_available" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service" success="True" time="1.109" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AddContactNoteResponseHandlerTest" success="True" time="0.063" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AddContactNoteResponseHandlerTest.should_not_notify_add_contact_note_if_there_is_an_error" executed="True" success="True" time="0.063" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest.should_clear_different_commands_of_same_Type" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest.should_execute_different_commands_of_sameType" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest.should_invoke_different_commands_executor_asynchronously" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest.should_invoke_executor_asynchronously" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest.should_not_execute_more_requests_of_same_type" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.AsynchFetchingExpiryStrategyTest.should_reexecute_on_clear" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactHistoryCommandResponseHandlerTest" success="True" time="0.063" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactHistoryCommandResponseHandlerTest.should_ask_receiver_to_handle_error_when_exception_happen" executed="True" success="True" time="0.063" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactHistoryCommandResponseHandlerTest.should_ask_receiver_to_update_result_if_no_exception_happen" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest" success="True" time="0.297" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.AddCallDetails_should_convert_timespan_to_seconds_and_add_call_details" executed="True" success="True" time="0.031" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.Contains_should_return_false_for_non_existing_contacts_in_specified_list" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.Contains_should_return_true_for_existing_contacts_in_specified_list" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.CreateContact_test" executed="True" success="True" time="0.031" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.get_contact_list_should_set_contacted_today_flag_SHOULD_BE_REMOVE_WHEN_THIS_FUNCTIONALITY_IS_MOVED" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.GetContactsByContactNoteId_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.GetContactsNotInMyList_should_return_empty_for_existing_contacts_in_specified_mylist" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.GetContactsNotInMyList_should_return_list_of_contacts_that_are_not_in_specified_mylist" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.GetNonEvolveContacts_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.reload_contact_lists_should_execute_getmycontacts_and_getmyservicehistory_commands" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.SaveContactListOrder_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.SearchContactsInOrganisation_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_add_contact_from_global_to_mylist" executed="True" success="True" time="0.094" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_add_multiple_contacts_from_global_to_mylist" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_be_able_to_copy_contact_lists_to_users" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_be_able_to_delete_interests_for_contact" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_be_able_to_get_user_contact_lists" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_be_able_to_rename_my_contact_list" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_check_for_contact_list_duplication" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_find_global_region_sector_interests_for_contact" executed="True" success="True" time="0.016" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_find_region_sector_interests_for_contact" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_get_contact_list_by_id" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_get_contact_list_by_id_in_a_list" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_get_last_contact_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_load_contact_details_from_proxy" executed="False">
                                            <reason>
                                              <message><![CDATA[This test needs to change, so does the contactmodel.getContact() code]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_move_contacts_from_source_list_to_target_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_not_go_server_when_searching_on_global_contact_list_with_empty_keyword" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_not_move_contacts_if_already_exist_in_target_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_refresh_contact_list_when_new_contact_note_added" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_remove_active_contact_list_on_server_asynchronously" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_remove_contact_from_specified_list" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_search_on_global_contact_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_throw_System_exception_when_contactList_is_not_found" executed="True" success="True" time="0.063" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.should_upload_email_attachment" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.ContactModelTest.test_should_load_user_contact_lists_from_proxy" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest" success="True" time="0.063" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.IsIntersected_should_return_false_if_two_interests_are_not_intersected" executed="True" success="True" time="0.047" asserts="7" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.IsIntersected_should_return_true_if_both_interests_are_intersected" executed="True" success="True" time="0.000" asserts="8" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.IsIntersected_should_return_ture_when_two_interests_has_part_interesect" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_assemble_correct_LinearRelativeRegionDictionary" executed="True" success="True" time="0.000" asserts="16" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_assemble_correct_LinearRelativeSectorDictionary" executed="True" success="True" time="0.016" asserts="12" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_get_no_sectors_if_no_match_exists" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_get_sectors_matching_the_keyword" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_return_matches_region_based_on_type" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_return_NoMatch_instance_directly_if_keyword_is_empty_string" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.InterestModelTest.should_return_NoMatch_instance_when_no_sector_in_database" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest" success="True" time="0.047" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest.CreateOrgainsation_test" executed="True" success="True" time="0.031" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest.GetOrgainsationDetail_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest.should_get_organisation_dto_by_full_name_when_found" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest.should_return_null_search_by_full_name_when_not_found" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest.should_search_organisation_dtos_by_name" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OrganisationGatewayTest.UpdateOrganisation_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OutlookMeetingModelTest" success="True" time="0.188" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OutlookMeetingModelTest.SaveToOutlook_should_add_ExternalAttendeeEmailAddresses_into_recipients_when_InviteExternalAttendee_is_true" executed="True" success="True" time="0.172" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OutlookMeetingModelTest.SaveToOutlook_should_not_add_ExternalAttendeeEmailAddresses_into_recipients_when_InviteExternalAttendee_is_false" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OutlookMeetingModelTest.should_get_contact_attendee_string" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OutlookMeetingModelTest.UpdateMeeting_should_add_ExternalAttendee_to_Recipients_when_InviteExternalAttendee_is_true" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.OutlookMeetingModelTest.UpdateMeeting_should_not_add_ExternalAttendee_to_Recipients_when_InviteExternalAttendee_is_false" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.PanelReviewGatewayTest" success="True" time="0.141" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.PanelReviewGatewayTest.GetPanelReviewDetail_test" executed="True" success="True" time="0.141" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.PanelReviewGatewayTest.GetPanelReviews_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.PanelReviewGatewayTest.SavePanelReview_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.PanelReviewGatewayTest.UpdatePanelReview_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListHandlerTest" success="True" time="0.188" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListHandlerTest.HandleResult_should_not_refresh_contact_list_if_there_is_an_error" executed="True" success="True" time="0.188" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListTaskTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListTaskTest.should_execute_RefreshContactList" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListWhenDayComesTaskTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListWhenDayComesTaskTest.should_not_refresh_contact_list_when_last_run_time_in_same_day" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RefreshContactListWhenDayComesTaskTest.should_refresh_contact_list_when_last_run_time_was_happen_on_yesterday" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RemoveContactListResponseHandlerTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.RemoveContactListResponseHandlerTest.HandlerResult_should_notify_error_when_there_is_an_exception" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.StaticDataHolderCacherTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.StaticDataHolderCacherTest.should_create_empty_data_if_no_file_cache" executed="True" success="True" time="0.016" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.TagGatewayTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.TagGatewayTest.GetTagDetailsById_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.TagGatewayTest.SaveTagGroup_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.UserContactHistoryCommandResponseHandlerTest" success="True" time="0.047" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.UserContactHistoryCommandResponseHandlerTest.should_ask_receiver_to_handle_error_when_exception_happen" executed="True" success="True" time="0.047" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.Service.UserContactHistoryCommandResponseHandlerTest.should_ask_receiver_to_update_result_if_no_exception_happen" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.StocksTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.StocksTest.SearchByKey_should_return_empty_array_when_keyword_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.StocksTest.SearchByKey_when_keyword_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.StocksTest.Sort_test" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Domain.WorkExecutorTest" success="True" time="0.203" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.WorkExecutorTest.should_OnCompleted_when_no_exception" executed="True" success="True" time="0.109" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Domain.WorkExecutorTest.should_OnError_when_has_exception" executed="True" success="True" time="0.094" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.InterestListViewTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.InterestListViewTest.interest_list_view_should_shown_in_user_details_window" executed="False">
                                    <reason>
                                      <message><![CDATA[Show modal blocked the following test]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.InterestListViewTest.should_show_interestList_view" executed="False">
                                    <reason>
                                      <message><![CDATA[Show modal blocked the following test]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Logging" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Logging.EvolveCommandLogMessageTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Logging.EvolveCommandLogMessageTest.command_name_should_be_type_name_of_command" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Logging.EvolveCommandLogMessageTest.command_name_should_contain_internal_command_names_for_batched_command" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Model" success="True" time="0.094" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelPersonaliseEmailTest" success="True" time="0.078" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelPersonaliseEmailTest.should_send_personalised_email" executed="True" success="True" time="0.063" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelPersonaliseEmailTest.should_send_personalised_email_with_contact_note" executed="True" success="True" time="0.016" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.CheckForwardable_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_execute_add_client_note_command_for_personal_note" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_execute_add_client_note_command_for_shared_note" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_execute_get_client_notes_for_contact" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_get_contact_by_full_name" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_get_contact_interests" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_increment_serially" description="Evo-1229" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_increment_serially_after_10" description="Evo-1229" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_retrive_contact_interests_when_retriving_Contacts" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_save_monthly_call_target" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.should_send_invalid_contact_list_cache_command" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Model.ContactModelTest.UpdateServiceHistory_should_not_fire_RefreshMyContactsEvent" description="EVO-2391" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook" success="True" time="3.219" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest" success="True" time="1.422" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_cancel_and_leave_email_open_when_personalisation_validation_fails" executed="True" success="True" time="0.391" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_close_email_when_succeed" executed="True" success="True" time="0.031" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_leave_email_open_when_contact_note_validation_fails" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_report_general_exception_and_leave_email_open_when_uploading" executed="True" success="True" time="0.500" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_report_offline_error_and_leave_email_open_during_contact_note_validation" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_report_offline_error_and_leave_email_open_during_personalisation_validation" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteAndPersonaliseScenarioTest.should_report_offline_exception_and_leave_email_open_when_uploading" executed="True" success="True" time="0.500" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteOnlyScenarioTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteOnlyScenarioTest.should_add_contact_note_when_validation_pass" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteOnlyScenarioTest.should_leave_email_open_when_adding_contact_note_failed" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AddContactNoteOnlyScenarioTest.should_stop_adding_contact_note_and_leave_email_open_when_validation_failed" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.AttachmentTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AttachmentTest.FileName_should_combine_contentId_and_file_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AttachmentTest.FilePath_should_be_in_temp_folder" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.AttachmentUploaderTest" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.AttachmentUploaderTest.should_upload_attachments" executed="True" success="True" time="0.047" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.ClientSidePlainTextMailBodyTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.ClientSidePlainTextMailBodyTest.InsertTemplate_should_update_email_body" executed="True" success="True" time="0.016" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.EmailScenarioFactoryTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.EmailScenarioFactoryTest.should_create_add_contact_note_and_personalise_scenario" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.EmailScenarioFactoryTest.should_create_add_contact_note_scenario" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.EmailScenarioFactoryTest.should_create_personalisation_only_scenario" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.EmailScenarioFactoryTest.should_create_simple_MailSender" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsHandlerTest" success="True" time="0.359" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsHandlerTest.OpenMeetingItem_test" executed="True" success="True" time="0.359" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsHandlerTest.should_show_meeting_window_when_it_is_our_meeting" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest" success="True" time="0.109" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest.BindingEventsToItem_should_do_not_bind_event_when_empty_entryId" executed="True" success="True" time="0.063" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest.BindingEventsToItem_should_do_not_bind_event_when_found_meetItem" executed="True" success="True" time="0.047" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest.BindingEventsToItem_should_do_not_bind_event_when_no_entryId" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest.RemoveEventsToItem_test" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest.should_bind_events_to_all_meetings_for_the_current_user" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.MeetingItemEventsManagerTest.should_not_bind_event_when_meetItem_not_found" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest" success="True" time="0.203" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_be_able_to_create_new_contact_note_email_for_single_contact" executed="True" success="True" time="0.172" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_be_able_to_create_replied_email_contact_note_for_single_contact" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_create_reply_email_contact_note_composer_when_multiple_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_return_unique_primary_email_addresses" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_send_email_for_multiple_contacts_with_colon_seperated_emails" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_show_offline_message_when_in_offline" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_throw_evolve_exception_if_error_happened_during_creating_email_item_for_multiple_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_throw_evolve_exception_if_error_happened_during_creating_email_item_for_single_contact" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.OutlookServiceTest.should_throw_evolve_exception_if_error_happened_during_creating_reply_email_item_for_multiple_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonalisedEmailConverterTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonalisedEmailConverterTest.ToAddresses_test" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonalisedEmailConverterTest.ToDTO_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest" success="True" time="1.047" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest.should_leave_email_open_when_validation_fails" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest.should_report_general_exception_and_leave_email_open_when_exception_happens" executed="True" success="True" time="0.500" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest.should_report_general_exception_and_leave_email_open_when_exception_happens_during_validation" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest.should_report_offline_exception_and_leave_email_open_when_offline_happens" executed="True" success="True" time="0.516" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest.should_report_offline_exception_and_leave_email_open_when_offline_happens_during_validation" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.PersonaliseOnlyScenarioTest.should_send_personalised_email" executed="True" success="True" time="0.031" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.RecipientContactsValidatorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.RecipientContactsValidatorTest.should_return_false_when_emails_are_non_personalisable_and_user_confirms_to_cancel" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.RecipientContactsValidatorTest.should_return_true_if_emails_are_personalisable" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.RecipientContactsValidatorTest.should_return_true_when_emails_are_non_personalisable_and_user_confirms_to_send" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Outlook.SimpleEmailScenarioTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Outlook.SimpleEmailScenarioTest.should_send_email" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation" success="True" time="50.422" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AboutWindowPresenterTest" success="True" time="0.188" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AboutWindowPresenterTest.should_create_email_when_requestHelp" executed="True" success="True" time="0.188" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement" success="True" time="6.609" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountDashboardWindowPresenterTest" success="True" time="0.063" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountDashboardWindowPresenterTest.ShowOrganisationDetail_test" executed="True" success="True" time="0.063" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountDirectoryDisplayDataTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountDirectoryDisplayDataTest.should_get_correct_AccountDirectoryDisplayData_instance_by_AccountDirectoryDTO" executed="True" success="True" time="0.016" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountLeadsEditorPresenterTest" success="True" time="0.078" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountLeadsEditorPresenterTest.should_release_locks_when_cancel_is_clicked" executed="True" success="True" time="0.078" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountLeadTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountLeadTest.should_compare_based_on_account_directory_path" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest" success="True" time="2.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.HasAnyItem_should_return_false_when_item_count_is_zero" executed="True" success="True" time="0.344" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.HasAnyItem_should_return_true_when_item_count_bigger_then_zero" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.IsItemHitten_should_return_false_when_drag_from_an_item_and_item_not_selected" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.IsItemHitten_should_return_false_when_drag_not_from_an_item_and_item_selected" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.IsItemHitten_should_return_true_when_drag_from_an_item_and_item_selected" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.OnDrop_should_not_change_accounts_order_for_destination_below_middle_of_above_item" executed="True" success="True" time="1.828" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.OnDrop_should_not_change_accounts_order_for_identical_drop_data" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.OnDrop_should_not_change_accounts_order_for_invalid_destination_location" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.OnDrop_should_not_change_accounts_order_for_nonexist_drop_data" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.OnDrop_should_not_change_accounts_order_for_same_location" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.OnDrop_should_reorder_accounts" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.RankAbove_should_return_DecimalMinValue_when_nextItemIndexOfPlaceToBeInsert_is_zero" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.RankAbove_should_return_rank_of_previousAccountPriorityDTO_when_nextItemIndexOfPlaceToBeInsert_is_not_zero" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.RankBelow_should_return_DecimalMaxValue_when_nextItemIndexOfPlaceToBeInsert_bigger_then_LastIndex" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.RankBelow_should_return_rank_of_nextAccountPriority_when_nextItemIndexOfPlaceToBeInsert_less_then_LastIndex" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.ReorderListView_should_invoke_the_accountModel" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.ReorderListView_should_notify_error_if_directory_not_exist_when_do_reorder" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.ReorderListView_should_notify_error_if_directory_not_exist_when_showing_list" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.ReorderListView_should_notify_error_if_directory_version_is_not_match_when_do_reorder" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityListViewPresenterTest.Show_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest" success="True" time="0.078" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.ClickOk_should_delegate_to_view_after_empty_checking" executed="True" success="True" time="0.078" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.ClickOk_should_show_error_if_empty_checking_fails" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.duplication_check_should_ignore_case" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.should_add_node_with_given_name" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.should_close_view_if_edit_doesnt_change_original_name" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.should_not_add_duplicated_node" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.should_not_rename_to_duplicated_name" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityTreeNodeEditDialogPresenterTest.should_rename_node_if_new_name_and_old_name_are_just_case_sensitive_different" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest" success="True" time="0.328" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AccountDirectorySelectionChanged_should_get_account_priority_list_of_selected_directory_if_the_directory_is_a_region" executed="True" success="True" time="0.219" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AccountDirectorySelectionChanged_should_hide_right_grid_if_no_selected_node" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AccountDirectorySelectionChanged_should_hide_right_grid_if_selected_node_is_not_a_region" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AddAccountToPriorityList_test_in_happy_path" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AddValidAccountToPriorityList_test_in_happy_path" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AddValidAccountToPriorityList_test_when_account_is_duplicated" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.AddValidAccountToPriorityList_test_when_adding_is_failed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.NotifyDirectoryNotExistAndReloadAccountTree_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.RefreshPriorityList_test" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_add_account_directory" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_load_account_directory" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_not_remove_account_directory_if_user_doesnt_confirm" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_notify_error_and_reload_whole_account_directory_if_trying_to_add_to_unexist_directory" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_notify_error_and_reload_whole_tree_if_remove_account_against_unexist_node" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_notify_error_and_reload_whole_tree_if_renaming_against_unexist_node" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_notify_user_when_remove_directory_and_account_directory_doesnot_exist" executed="True" success="True" time="0.031" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_notify_user_when_remove_directory_and_account_directory_is_obsolete" executed="True" success="True" time="0.031" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_remove_account_directory_if_user_confirms" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_remove_selected_accounts_and_refresh_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_rename_account_directory" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_send_message_when_directory_not_found" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.should_show_dialog_for_editing_account_leads_when_account_is_locked" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.ShowAccountPriorityList_test_in_happy_path" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountPriorityWindowPresenterTest.ShowAccountPriorityList_test_when_selected_account_directory_has_been_removed" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountServicingPanelPresenterTest" success="True" time="1.328" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountServicingPanelPresenterTest.SaveMonthlyCallTarget_test" executed="True" success="True" time="1.328" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountServicingPanelPresenterTest.ShowClientDetail_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountServicingPanelPresenterTest.ShowUserDetail_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountServicingPanelTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountServicingPanelTest.should_display_managers_on_account_servicing_panel" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountSummaryModelTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountSummaryModelTest.should_give_report_url_for_a_supported_report" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountSummaryPanelPresenterTest" success="True" time="0.922" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountSummaryPanelPresenterTest.should_be_able_to_close_report_pane_by_click_close_button_in_report_pane" executed="True" success="True" time="0.922" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountSummaryPanelPresenterTest.should_not_show_report_if_user_cancels_on_dialog" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountSummaryPanelPresenterTest.should_show_report_if_parameters_are_valide" executed="False">
                                            <reason>
                                              <message><![CDATA[Working on this - chris and Li Bei]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.AccountTest.should_build_from_array_of_organisation_dto" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.MonthAndYearPanelPresenterTest" success="True" time="0.094" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.MonthAndYearPanelPresenterTest.Validate_test_in_happy_path" executed="True" success="True" time="0.094" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.MonthAndYearPanelPresenterTest.Validate_test_when_both_year_and_month_are_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.MonthAndYearPanelPresenterTest.Validate_test_when_month_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.MonthAndYearPanelPresenterTest.Validate_test_when_set_time_is_later_than_current_time" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.MonthAndYearPanelPresenterTest.Validate_test_when_year_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.NewPanelReviewWindowPresenterTest" success="True" time="0.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.NewPanelReviewWindowPresenterTest.should_close_when_user_decide_discard_and_not_transfering" executed="True" success="True" time="0.188" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.NewPanelReviewWindowPresenterTest.should_not_close_when_file_is_transfering" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.NewPanelReviewWindowPresenterTest.should_not_close_when_user_decide_not_discard_before_save_and_transfering" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.NewPanelReviewWindowPresenterTest.should_not_close_window_if_save_failed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.NewPanelReviewWindowPresenterTest.should_upload_files_when_save_completed" executed="True" success="True" time="0.016" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview" success="True" time="0.609" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.EditPanelReviewWindowPresenterTest" success="True" time="0.125" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.EditPanelReviewWindowPresenterTest.GetPanelReviewDetail_test" executed="True" success="True" time="0.109" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.EditPanelReviewWindowPresenterTest.UpdatePanelReview_should_do_nothing_when_invalidate" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.EditPanelReviewWindowPresenterTest.UpdatePanelReview_should_execute_when_validated" executed="True" success="True" time="0.016" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NotNullOrEmptyValidatorTest" success="True" time="0.078" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NotNullOrEmptyValidatorTest.Validate_should_return_false_when_text_is_blank" executed="True" success="True" time="0.078" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NotNullOrEmptyValidatorTest.Validate_should_return_true_when_text_is_valid" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NumberValidatorTest" success="True" time="0.000" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NumberValidatorTest.Validate_should_return_false_if_data_is_not_number" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NumberValidatorTest.Validate_should_return_false_if_data_larger_than_max" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NumberValidatorTest.Validate_should_return_false_if_data_less_than_min" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.NumberValidatorTest.Validate_should_return_true_if_data_in_range" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.PanelReviewControlPresenterTest" success="True" time="0.188" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.PanelReviewControlPresenterTest.InitialiseByRetrievedPanelReview_test" executed="True" success="True" time="0.188" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.VotingResultRowPresenterTest" success="True" time="0.219" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.VotingResultRowPresenterTest.IsAllEmpty_should_return_true_if_all_fields_are_empty" executed="True" success="True" time="0.219" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.VotingResultRowPresenterTest.Validate_should_return_false_when_one_field_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.VotingResultRowPresenterTest.Validate_should_return_true_when_all_fields_are_valid" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReview.VotingResultRowPresenterTest.Validate_should_return_true_when_IsAllEmpty" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReviewControlValidatorTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReviewControlValidatorTest.should_show_error_messages_if_data_is_invalid" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.PanelReviewControlValidatorTest.Validate_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.RegionAccountDisplayDataTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.RegionAccountDisplayDataTest.should_get_manager_names_from_dto" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.RegionAccountDisplayDataTest.should_have_default_ordering_of_rankNo" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.RegionAccountDisplayDataTest.should_sperate_multi_names_by_comma" executed="False">
                                            <reason>
                                              <message><![CDATA[Method should_sperate_multi_names_by_comma's signature is not correct: it must not have parameters.]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportComparisonTypeGroupPresenterTest" success="True" time="0.109" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportComparisonTypeGroupPresenterTest.SetSelectedComparisonType_test_for_half_year" executed="True" success="True" time="0.094" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportComparisonTypeGroupPresenterTest.SetSelectedComparisonType_test_for_month" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportComparisonTypeGroupPresenterTest.SetSelectedComparisonType_test_for_quarter" executed="True" success="True" time="0.016" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportParamDialogOfCallsForOrgPresenterTest" success="True" time="0.156" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportParamDialogOfCallsForOrgPresenterTest.ShowReportOfMonthlyCalls_should_close_view_when_passing_validating" executed="True" success="True" time="0.156" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportParamDialogOfCallsForOrgPresenterTest.ShowReportOfMonthlyCalls_should_do_nothing_when_validating_period_failed" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest" success="True" time="0.109" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest.ValidatePeriodTime_test_in_happy_path" executed="True" success="True" time="0.109" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest.ValidatePeriodTime_test_when_both_from_time_and_to_time_are_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest.ValidatePeriodTime_test_when_from_time_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest.ValidatePeriodTime_test_when_from_time_is_later_than_to_time" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest.ValidatePeriodTime_test_when_from_time_is_same_as_to_time" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ReportPeriodControlPresenterTest.ValidatePeriodTime_test_when_to_time_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.SelectAccountWindowPresenterTest" success="True" time="0.234" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.SelectAccountWindowPresenterTest.should_add_link_for_all_accounts_of_current_user_if_exist" executed="True" success="True" time="0.234" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.SelectAccountWindowPresenterTest.should_add_message_indicating_no_account_if_current_user_has_no_account" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.SelectAccountWindowPresenterTest.should_show_account_dashborad_for_account_with_given_name" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.SelectAccountWindowPresenterTest.should_show_empty_org_error_message_if_org_name_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.SelectAccountWindowPresenterTest.should_show_invalid_account_error_message_if_org_cannot_be_found" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_build_display_items_from_dtos" executed="True" success="True" time="0.000" asserts="10" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_build_display_items_from_dtos_with_not_serviced_by_items_grouped_and_merge_by_contact_name" executed="True" success="True" time="0.000" asserts="10" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_get_resource_name_for_client_name_template" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_get_resource_name_for_client_role_template" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_get_resource_name_for_service_arrow_template" executed="True" success="True" time="0.016" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_get_resource_name_for_user_full_name_template" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_group_by_contact_name" executed="True" success="True" time="0.000" asserts="7" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageItemDisplayDataTest.should_sort_by_client_and_user_fullname" executed="True" success="True" time="0.000" asserts="10" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageListViewItemBorderConverterTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageListViewItemBorderConverterTest.Convert_test_when_display_data_is_not__last_item_of_client" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageListViewItemBorderConverterTest.Convert_test_when_display_data_is_the_last_item_of_client" executed="True" success="True" time="0.000" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageListViewItemColorConverterTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageListViewItemColorConverterTest.Convert_test_when_display_data_is_NoLongerServiced" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AccountManagement.ServiceCoverageListViewItemColorConverterTest.Convert_test_when_display_data_is_not_NoLongerServiced" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertDurationUpdaterTest" success="True" time="0.328" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertDurationUpdaterTest.should_refresh_alerts_when_alert_list_window_open" executed="True" success="True" time="0.328" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList" success="True" time="1.484" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutDisplayItemTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutDisplayItemTest.should_compose_contacts_and_clients_with_proper_format" executed="True" success="True" time="0.000" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutDisplayItemTest.should_create_display_item_list_from_dto" executed="True" success="True" time="0.000" asserts="11" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutPresenterTest" success="True" time="0.453" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutPresenterTest.should_fetch_and_update_user_unactioned_contact_notes" executed="True" success="True" time="0.344" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutPresenterTest.should_not_show_unactioned_contactNotes_if_view_is_invisible" executed="True" success="True" time="0.094" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutPresenterTest.should_show_contact_note_window" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ActionSentOutPresenterTest.should_show_unactioned_contactNotes_if_view_is_visible" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlContainerPresenterTest" success="True" time="0.141" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlContainerPresenterTest.closeImage_mouseLeftButtonUp_should_FireAlertClosed_event" executed="True" success="True" time="0.141" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlContainerPresenterTest.should_set_alert_display_control_to_read_if_alert_is_read" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlContainerPresenterTest.should_set_alert_display_control_to_unread_if_alert_is_unread" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlTest" success="True" time="0.547" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlTest.should_display_correct_information" executed="True" success="True" time="0.516" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertControlTest.should_display_correct_information_if_the_note_is_for_multiple_contacts" executed="True" success="True" time="0.016" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertPopupPresenterTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.AlertPopupPresenterTest.should_only_popup_alerts_after_online" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ContactNoteAlertControlPresenterTest" success="True" time="0.125" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ContactNoteAlertControlPresenterTest.assemble_display_content_should_assemble_correct_clients_info_when_multiple_contacts_belong_to_the_same_organization" executed="True" success="True" time="0.125" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ContactNoteAlertControlPresenterTest.assemble_display_content_should_assemble_correct_content_for_UI" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ContactNoteAlertControlPresenterTest.should_call_helper_to_show_contact_note_window" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ContactNoteAlertControlPresenterTest.should_not_show_system_alert_info" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.ContactNoteAlertControlPresenterTest.should_show_system_alert_info" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.MeetingAlertControlPresenterTest" success="True" time="0.094" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.MeetingAlertControlPresenterTest.ShowMeeting_should_open_edit_meeting_window_and_mark_alert_read_when_alert_not_read" executed="True" success="True" time="0.094" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.MeetingAlertControlPresenterTest.ShowMeeting_should_open_edit_meeting_window_when_alert_is_read" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.TagAlertControlPresenterTest" success="True" time="0.125" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.TagAlertControlPresenterTest.InitializeUI_test_if_alert_contains_full_info" executed="True" success="True" time="0.125" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.TagAlertControlPresenterTest.InitializeUI_test_if_alert_doesnot_contain_ccy_and_amount_info" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertList.TagAlertControlPresenterTest.InitializeUI_test_if_alert_doesnot_contain_stock_info" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest" success="True" time="0.125" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest.should_display_action_alert_when_action_requried" executed="True" success="True" time="0.109" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest.should_display_all_alerts_by_create_time_desc" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest.should_display_system_alerts" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest.should_not_display_expired_alert" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest.should_reload_alert_list_when_alerts_arrived" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AlertListWindowPresenterTest.should_remove_alert_when_AlertClosed_triggerd" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest" success="True" time="0.500" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.AttachReports_test" executed="True" success="True" time="0.469" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.AttachReports_test_when_WebService_is_unavailable" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.fetch_selected_reports" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.FetchReportMetadata_should_not_fetch_reportsmetadata_if_search_criteria_is_invalid" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.FetchReportMetaData_should_showReportsMetadata_when_criteria_isValid" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.FetchReportMetadata_when_not_metadata_returned" executed="False">
                                        <reason>
                                          <message><![CDATA[Vikram, figure out how to raise the OnLoad Event and handle the not returned path]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.FetchReportsInmemory_should_do_nothing_if_reports_is_null" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.FetchReportsInmemory_should_filter_and_update_reports" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.SetupDataOnView_should_intialise_view_when_static_data_is_ready" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.should_display_ws_not_avaliable_if_ws_unavailable" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.should_fetchNo_reports_when_none_selected" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.ShowReports_should_display_no_result_when_no_reports_found" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.ShowReports_should_hide_progressbar_show_search_complete_display_metadata_and_enable_search" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.AttachResearchReportPresenterTest.ShowReports_should_notify_view_when_webservice_is_unavaliable" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest.should_be_collapsed_when_data_context_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest.should_be_collapsed_when_data_context_is_zero_sized_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest.should_be_visible_when_data_context_is_empty_string" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest.should_be_visible_when_data_context_is_list_and_size_greater_than_0" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest.should_be_visible_when_data_context_is_not_string_or_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.CollapsableBorderTest.should_be_visible_when_data_context_is_string" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common" success="True" time="6.688" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ConnectionStatusAwareListViewPresenterTest" success="True" time="0.188" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ConnectionStatusAwareListViewPresenterTest.CheckConnectionStatus_should_GoOffline_when_is_offline" executed="True" success="True" time="0.188" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ConnectionStatusAwareListViewPresenterTest.CheckConnectionStatus_should_GoOnline_when_is_online" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactDataRetrieverTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactDataRetrieverTest.Search_should_not_put_org_id_if_not_available" executed="True" success="True" time="0.016" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactDataRetrieverTest.Search_should_put_org_id_if_available" executed="True" success="True" time="0.000" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactDataRetrieverTest.Search_should_return_empty_list_when_no_match" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactDataRetrieverTest.Search_should_return_result_as_IdNamePair_list_when_input_has_match" executed="True" success="True" time="0.000" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemComparerBaseOnCreatedOnTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemComparerBaseOnCreatedOnTest.compare_should_sort_using_created_on" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest" success="True" time="0.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.const_property_names_should_exist_on_contact_history_item_dto" executed="True" success="True" time="0.094" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.display_group_should_use_ContactNoteDataHelper_for_group_info" executed="True" success="True" time="0.094" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.in_same_week" executed="True" success="True" time="0.000" asserts="7" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.should_be_emtpy_when_subtype_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.should_build_from_contact_history_item_dto" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.should_expose_properties_based_on_contact_history_item_except_note" executed="True" success="True" time="0.016" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.should_expose_properties_based_on_user_contact_history_item_except_note" executed="True" success="True" time="0.000" asserts="7" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactHistoryItemDisplayDataTest.should_only_show_the_first_line_if_note_has_multiple_lines" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInfoImagePresenterTest" success="True" time="0.125" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInfoImagePresenterTest.should_hide_popup_if_mouse_leave_out_of_image_and_not_enter_popup" executed="True" success="True" time="0.109" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInfoImagePresenterTest.should_not_hide_popup_if_mouse_leave_into_popup_from_image" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInfoImagePresenterTest.should_show_popup_when_mouse_enter" executed="True" success="True" time="0.016" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInputValidatorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInputValidatorTest.Validate_should_fail_if_inputting_name_does_not_contain_org_name" executed="True" success="True" time="0.000" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInputValidatorTest.Validate_should_return_empty_strategy_if_input_is_empty_and_empty_is_not_allowed" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInputValidatorTest.Validate_should_return_invalid_strategy_if_any_input_is_invalid" executed="True" success="True" time="0.000" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInputValidatorTest.Validate_should_return_valid_strategy_if_input_is_empty_and_empty_is_allowed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ContactInputValidatorTest.Validate_should_return_valid_strategy_if_input_is_valid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.CreateContactNoteHelperBaseTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.CreateContactNoteHelperBaseTest.TryToCreateContactNote_should_create_note_when_contacts_are_all_valid" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.CreateContactNoteHelperBaseTest.TryToCreateContactNote_should_create_note_when_ignore_invalid_contacts" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.CreateContactNoteHelperBaseTest.TryToCreateContactNote_should_not_create_note_when_no_vaild_contact" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.CreateContactNoteHelperBaseTest.TryToCreateContactNote_should_not_create_note_when_not_ignore_invalid_contacts" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.Dirtyable" success="True" time="0.109" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.Dirtyable.DirtyableWindowPresenterTest" success="True" time="0.109" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.Dirtyable.DirtyableWindowPresenterTest.ShouldClose_should_return_false_when_IsDirty_and_AreYouSure_return_false" executed="True" success="True" time="0.109" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.Dirtyable.DirtyableWindowPresenterTest.ShouldClose_should_return_true_when_IsDirty_and_AreYouSure_return_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.Dirtyable.DirtyableWindowPresenterTest.ShouldClose_should_return_true_when_no_IsDirty" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.DispatcherWrapperTest" success="True" time="0.125" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.DispatcherWrapperTest.InvokeLater_should_delegate_to_DispatchWapper_when_CheckAccess_is_false" executed="True" success="True" time="0.109" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.DispatcherWrapperTest.InvokeLater_should_execute_directly_when_CheckAccess_is_true" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmailPopupDisplayerTest" success="True" time="0.188" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmailPopupDisplayerTest.should_show_availableemail_addresses_for_single_contact" executed="True" success="True" time="0.188" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmailPopupDisplayerTest.should_show_no_contact_detail_available_msg_if_no_contacts_have_primary_emails" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmailPopupDisplayerTest.should_show_no_contact_detail_available_msg_if_single_contact_does_not_have_primary_emails" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmailPopupDisplayerTest.should_show_send_email_to_contacts_link_for_multiple_contacts_with_primary_email_addresses" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmptyAwareControlWrapperTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmptyAwareControlWrapperTest.should_be_empty_if_array_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmptyAwareControlWrapperTest.should_be_empty_when_value_is_null_or_empty" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmptyAwareControlWrapperTest.should_be_not_empty_if_array_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EmptyAwareControlWrapperTest.should_be_not_empty_when_value_is_not_emtpy" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolevTabHeaderControlPresenterTest" success="True" time="0.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolevTabHeaderControlPresenterTest.should_add_global_contacts_to_target_list" executed="True" success="True" time="0.203" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolevTabHeaderControlPresenterTest.should_delete_dragging_contacts_from_source_list_and_insert_into_target_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolevTabHeaderControlPresenterTest.should_delete_dragging_tab_item_from_tab_control_and_insert_into_new_position" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolevTabHeaderControlPresenterTest.should_do_nothing_if_nothing_chosed_to_drag" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest" success="True" time="1.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.reload_contact_list_should_reload_contacts_in_contact_list_when_it_exists" executed="True" success="True" time="0.734" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.reload_contact_list_should_throw_exception_when_it_does_not_exist" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.selection_changed_should_set_selected_header_allow_drop_false_and_set_others_to_be_true" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_find_user_control_by_id" executed="True" success="True" time="0.344" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_not_change_contact_list_control_columns_width_if_no_width_setting_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_not_change_contact_list_control_columns_width_to_stored_settings_if_setting_is_corrupted" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_return_null_if_control_not_found" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_set_contact_list_control_columns_width_to_stored_settings" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_show_correct_tab" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_show_first_correct_tab" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.should_stay_at_same_tab_if_match_not_found" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabControlPresenterTest.store_all_columns_width" executed="True" success="True" time="0.109" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest" success="True" time="0.297" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.arrange_should_arrange_text_box_with_final_size_when_visible" executed="True" success="True" time="0.281" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.arrange_should_arrange_text_box_with_zero_size_when_invisible" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.enter_key_up_should_try_accept_changes" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.escape_key_up_should_hide_edit_box" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.lost_focus_should_try_accept_change" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.measure_should_return_adorned_element_desired_size_when_visible" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.measure_should_return_zero_size_when_invisible" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.try_accept_change_should_rename_contact_list_if_entered_text_is_not_empty" executed="False">
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.try_accept_changes_should_do_nothing_if_edit_box_is_invisible" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.try_accept_changes_should_not_call_service_if_entered_text_equals_original_contact_list_name" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.try_accept_changes_should_not_change_contact_list_name_and_notify_error_if_entered_text_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.try_accept_changes_should_not_change_contact_list_name_and_notify_error_if_entered_text_just_add_spaces_around_the_existed_name" executed="False">
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.EvolveTabHeaderControlAdornerPresenterTest.try_accept_changes_should_not_change_contact_list_name_and_notify_error_if_new_name_already_exist" executed="False">
                                            <reason>
                                              <message><![CDATA[]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowStrategyTest" success="True" time="0.359" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowStrategyTest.EmptyInputStrategy_test" executed="True" success="True" time="0.359" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowStrategyTest.FullMatchStrategy_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowStrategyTest.MultipleMatchStrategy_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowStrategyTest.NoMatchStrategy_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowStrategyTest.nomathStrategy_should_not_show_error_if_not_require_notify" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowTest" success="True" time="0.125" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowTest.should_return_empty_state_if_input_is_empty" executed="True" success="True" time="0.109" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowTest.should_return_full_match_state_if_input_as_one_full_match" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowTest.should_return_no_match_state_if_input_has_no_match" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InputWorkflowTest.should_return_show_candidates_state_if_input_is_not_empty" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest" success="True" time="0.172" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest.should_add_region_sector_interest" executed="True" success="True" time="0.172" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest.should_add_stock_interest" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest.should_delete_interests" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest.should_flip_sort_direction_after_sorting" executed="True" success="True" time="0.000" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest.should_return_sector_interests_first_when_sort_sector" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.InterestListViewModelTest.should_return_stock_interests_first_when_sort_stock" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledRichTextBoxPresenterTest" success="True" time="0.219" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledRichTextBoxPresenterTest.lost_focus_should_hide_error" executed="True" success="True" time="0.219" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledRichTextBoxPresenterTest.preview_key_down_should_hide_error" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledRichTextBoxPresenterTest.should_not_show_error_message_if_text_more_than_4000_in_ReadOnlyMode" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledRichTextBoxPresenterTest.text_longer_than_max_length_should_notify_error" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledRichTextBoxPresenterTest.text_shorter_than_max_length_should_not_notify_error" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest" success="True" time="0.125" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest.should_create_row_if_ui_control_is_not_empty" executed="True" success="True" time="0.109" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest.should_create_row_if_value_is_empty_when_not_ignoring_empty_value" executed="True" success="True" time="0.016" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest.should_create_row_if_value_is_not_empty" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest.should_not_create_row_if_ui_control_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest.should_not_create_row_if_value_is_empty_by_default" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.LabeledValueInfoRowTest.should_not_create_row_if_value_is_empty_when_ignoring_empty_value" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.MeetingPopupDisplayerTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.MeetingPopupDisplayerTest.should_show_creat_meeting_message" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewInfoPopupPresenterTest" success="True" time="0.391" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewInfoPopupPresenterTest.OnCreateTelephoneNoteLinkClicked_should_create_and_open_new_contact_note_window_with_type_telephone" executed="True" success="True" time="0.141" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewInfoPopupPresenterTest.OnEmailLinkClicked_should_create_and_open_new_contact_note_window_with_type_meeting" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewInfoPopupPresenterTest.OnMeetingLinkClicked_should_create_and_open_new_contact_note_window_with_type_meeting" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewInfoPopupPresenterTest.OnScheduleNewMeetingClicked_should_open_NewMeetingWindow" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewInfoPopupPresenterTest.OnViewScheduledMeetingClicked_should_open_ContactDetailWindow_and_show_SecheduledMeetingPanel" executed="True" success="True" time="0.250" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewTelephoneNumberLinkTest" success="True" time="0.172" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewTelephoneNumberLinkTest.Click_should_not_show_INewContactNoteView_when_phone_IsInUse" executed="True" success="True" time="0.172" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NewTelephoneNumberLinkTest.Click_should_show_INewContactNoteView_when_phone_not_IsInUse" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest" success="True" time="0.609" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.current_number_should_be_0_if_nothing_inputted" executed="True" success="True" time="0.203" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.CurrentNumber_should_not_throw_an_exception_for_large_numbers" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.CurrentNumber_should_not_throw_an_exception_for_very_large_numbers" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.LostFocus_should_not_set_0_to_text_when_nothing_inputted_and_SetDefaultValue_is_false" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.LostFocus_should_set_0_to_text_when_nothing_inputted" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_fire_event_after_a_specifed_time" executed="True" success="True" time="0.188" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_get_current_number" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_not_fire_event_if_second_change_is_same_text" executed="False">
                                            <reason>
                                              <message><![CDATA[Michael is working on this]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_not_fire_event_if_second_comes_too_fast" executed="True" success="True" time="0.188" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_not_set_dirty_when_text_not_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_return_false_if_input_space_inside_the_inputting" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_set_dirty_when_text_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.should_test_for_null_string" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.test_allow_input_when_input_charactors_does_not_satisfy_the_max_length_condition" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.NumberTextBoxPresenterTest.test_allow_input_when_input_charactors_satisfy_the_max_length_condition" executed="True" success="True" time="0.000" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationDataRetrieverTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationDataRetrieverTest.Search_should_return_empty_list_when_no_match" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationDataRetrieverTest.Search_should_return_result_as_IdNamePair_list_when_input_has_match" executed="True" success="True" time="0.016" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationValidatorTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationValidatorTest.Validate_should_return_empty_strategy_if_input_is_empty_and_empty_is_not_allowed" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationValidatorTest.Validate_should_return_invalid_strategy_if_any_input_is_invalid" executed="True" success="True" time="0.016" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationValidatorTest.Validate_should_return_valid_strategy_if_input_is_empty_and_empty_is_allowed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OrganisationValidatorTest.Validate_should_return_valid_strategy_if_input_is_valid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest" success="True" time="0.406" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleActionByRecipientsInfo_should_return_all_actionBy_recipients_name_string" executed="True" success="True" time="0.391" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleActionByRecipientsInfo_should_return_empty_string_if_no_actionBy_recipient" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleContactNoteByType_should_also_set_its_body_to_text_if_type_is_email" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleContactNoteByType_should_return_created_time_and_note_and_creator_name_if_type_is_not_email" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleContactNoteByType_should_return_createdTime_and_note_and_creatorName_if_type_is_email_but_no_other_email_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleStocksInfoText_should_return_all_stocks_info_string" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleTagInfoText_should_work_well_when_tag_contains_complete_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleTagInfoText_should_work_well_when_tag_just_contains_recipient_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleTagsInfoText_should_return_empty_string_if_tagGroup_doesnot_contain_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleTagsInfoText_should_return_tags_info_if_tagGroup_contains_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.AssembleTagsInfoText_should_return_tags_info_if_tagGroup_doesnot_contain_stock_info" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.OriginalContactNoteTextBoxPresenterTest.SetOrginalNote_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest" success="True" time="0.375" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest.SelectCandidate_should_do_nothing_if_candidate_is_null" executed="True" success="True" time="0.188" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest.SelectCandidate_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest.should_close_popup_if_no_matches" executed="True" success="True" time="0.172" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest.should_do_nothing_if_no_elements_in_popup" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest.should_focus_First_element_on_key_down_if_elements_are_not_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PopupManagerTest.should_show_popup_below_Textbox_with_provided_items" executed="True" success="True" time="0.016" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PrimaryEmailAddressValidatorTest" success="True" time="0.250" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PrimaryEmailAddressValidatorTest.should_return_base_validation_strategy_when_its_items_not_all_valid" executed="True" success="True" time="0.250" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PrimaryEmailAddressValidatorTest.should_return_base_validation_strategy_when_its_recipients_email_are_all_valid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.PrimaryEmailAddressValidatorTest.should_return_base_validation_strategy_when_its_recipients_email_are_not_all_valid" executed="True" success="True" time="0.000" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ReplyTelephoneNumberLinkTest" success="True" time="0.313" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.ReplyTelephoneNumberLinkTest.ReplyTelephoneNumberLink_should_open_reply_contact_note_window_with_type_telephone" executed="True" success="True" time="0.297" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest" success="True" time="0.281" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.clipboard_should_be_empty_if_disable_multiple_lines" executed="False">
                                            <reason>
                                              <message><![CDATA[Some times failed, and it change the test machine behaviour(modify the clipboard)]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.FormatCandidateToAdd_should_append_comma_and_space_if_allow_multiple_items" executed="True" success="True" time="0.125" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.FormatCandidateToAdd_should_not_append_comma_and_space_if_not_allow_multiple_items" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.KeyIn_should_process_result_strategy_that_workflow_produces" executed="True" success="True" time="0.141" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.SetAndDisplayDefaultText_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.should_be_invalid_when_validating_invalid_single_item" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.should_be_valid_when_validating_empty_item_for_row_allows_empty" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.should_be_valid_when_validating_valid_single_item" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.should_trim_text_in_clipboard_before_paste" executed="False">
                                            <reason>
                                              <message><![CDATA[Some times failed, and it change the test machine behaviour(modify the clipboard)]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.Validate_should_process_validation_result_that_validator_produces" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SearchableTextBoxPresenterTest.validate_should_update_valid_items_and_invalid_items" executed="True" success="True" time="0.016" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToAlternateEmailAddressHelperTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToAlternateEmailAddressHelperTest.IsContactValid_should_return_false_when_alternate_email_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToAlternateEmailAddressHelperTest.IsContactValid_should_return_true_when_alternate_email_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.IsContactValid_should_return_false_when_primary_email_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.IsContactValid_should_return_true_when_primary_email_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_create_reply_contact_note_by_email_after_get_confirmation_from_user" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_create_reply_contact_note_by_email_if_all_contacts_have_primary_email_address" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_execute_block_to_some_contacts_with_primary_emails_after_get_confirmation_from_user" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_execute_block_with_contacts_with_primary_emails_if_all_contacts_have_primary_email_address" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_not_create_reply_contact_note_by_email_after_get_no_confirmation_from_user" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_not_execute_block_to_some_contacts_with_primary_emails_after_get_no_confirmation_from_user" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_show_error_message_if_no_contact_has_primary_email" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.SendMailToPrimaryEmailAddressesHelperTest.should_show_error_message_if_no_contact_has_primary_email_when_replying_to_multiple_contacts" executed="True" success="True" time="0.016" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.StaticDataRetrieverTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.StaticDataRetrieverTest.search_should_ignore_case" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.StaticDataRetrieverTest.search_should_match_from_beginning" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TagListModelTest" success="True" time="0.141" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TagListModelTest.should_update_tags_when_updating_number_of_days_for_org" executed="True" success="True" time="0.141" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TagListModelTest.should_update_tags_when_updating_number_of_days_for_user" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_add_create_new_telephone_note_link_to_popup" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_create_a_telephone_link_if_telephone_type_is_not_fax" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_just_show_contact_name_and_nondial_link" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_not_show_assistant_when_not_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_notify_exception_when_evolve_exception_thrown" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_show_all_telephone_numbers_separated_with_new_line" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_show_other_phones_assistant_and_assistant_phone_in_order_when_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.TelephonePopupDisplayerTest.should_show_telephone_numbers_in_order" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserDataRetrieverTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserDataRetrieverTest.Search_should_return_empty_list_when_no_match" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserDataRetrieverTest.Search_should_return_result_as_IdNamePair_list_when_input_has_match" executed="True" success="True" time="0.016" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidationStrategyTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidationStrategyTest.EmptyNotAllowedStrategy_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidationStrategyTest.InvalidInputStrategy_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidationStrategyTest.ValidInputStrategy_test" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidatorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidatorTest.Validate_should_return_empty_strategy_if_input_is_empty_and_empty_is_not_allowed" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidatorTest.Validate_should_return_invalid_strategy_if_any_input_is_invalid" executed="True" success="True" time="0.000" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidatorTest.Validate_should_return_valid_strategy_if_input_is_empty_and_empty_is_allowed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Common.UserInputValidatorTest.Validate_should_return_valid_strategy_if_input_is_valid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact" success="True" time="3.000" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactAuditHelperTest" success="True" time="0.031" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactAuditHelperTest.CreateAuditLogDTO_test" executed="True" success="True" time="0.031" asserts="129" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactControlPresenterTest" success="True" time="1.594" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactControlPresenterTest.CopyToResearchAddressCheckBox_test" executed="True" success="True" time="1.094" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactControlPresenterTest.GetContactControlState_test" executed="True" success="True" time="0.031" asserts="23" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactControlPresenterTest.Initialize_should_do_nothing_when_null" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactControlPresenterTest.Initialize_should_SetContactDTO_when_not_null" executed="True" success="True" time="0.141" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactControlPresenterTest.SetContactDTO_test" executed="True" success="True" time="0.328" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest" success="True" time="0.172" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.Validate_Should_return_false_if_ValidateEmail_returns_false" executed="True" success="True" time="0.156" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.Validate_Should_return_false_if_ValidateName_returns_false" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.Validate_Should_return_false_if_ValidateTelephone_returns_false" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.Validate_Should_return_true_if_all_validated" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateEmail_should_return_false_when_alternative_email_address_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateEmail_should_return_false_when_primary_email_address_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateEmail_should_return_true_when_all_valid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateName_should_return_false_and_when_FirstName_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateName_should_return_false_when_LastName_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateName_should_return_false_when_Organisation_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateName_should_return_true_when_all_valid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_false_when_assistant_number_invalid" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_false_when_direct_fax_number_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_false_when_direct_phone_number_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_false_when_general_fax_number_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_false_when_general_phone_number_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_false_when_Mobile_phone_number_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ContactValidatorTest.ValidateTelephone_should_return_true_when_all_number_valid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest" success="True" time="0.828" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.CancelButton_Click_test" executed="True" success="True" time="0.813" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.DoSave_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.Initialize_test" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.NotifyUpdateResult_should_show_error_when_conflicted" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.NotifyUpdateResult_should_show_status_message_when_not_conflicted" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.SaveButton_Click_should_do_nothing_when_invalid" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.SaveButton_Click_should_do_nothing_when_user_do_not_want_to_change_organistaion" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.SaveButton_Click_should_do_save_when_valid" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.EditContactWindowPresenterTest.SaveButton_Click_should_show_nothing_changed_when_not_dirty" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.NewContactWindowPresenterTest" success="True" time="0.375" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.NewContactWindowPresenterTest.should_add_new_contact_successfully_and_close_view_when_validated" executed="True" success="True" time="0.375" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.NewContactWindowPresenterTest.should_do_nothing_when_not_validated" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.NewContactWindowTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.NewContactWindowTest.should_show_window" executed="False">
                                            <reason>
                                              <message><![CDATA[just for show window]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ObjectPropertyAccessorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ObjectPropertyAccessorTest.shoud_return_null_if_nested_accessor_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ObjectPropertyAccessorTest.should_get_string_property_allow_dot_by_property_name" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ObjectPropertyAccessorTest.should_get_string_property_by_property_name" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Contact.ObjectPropertyAccessorTest.should_support_field" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails" success="True" time="1.219" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.ContactInterestsEditingConsumerTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.ContactInterestsEditingConsumerTest.add_interests_should_delegate_to_contact_model" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.ContactInterestsEditingConsumerTest.should_delete_interests_through_contact_model" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.EmailAddressGridPresenterTest" success="True" time="0.156" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.EmailAddressGridPresenterTest.should_display_multiple_emailaddresses_in_view" executed="True" success="True" time="0.156" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.EmailAddressGridPresenterTest.should_display_one_emailaddress_in_view" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestAreaPopupTest" success="True" time="0.063" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestAreaPopupTest.should_clear_on_everytime" executed="True" success="True" time="0.047" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestAreaPopupTest.should_show_All_sector" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestAreaPopupTest.should_show_empty_list_when_no_match_is_found" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestAreaPopupTest.should_show_sectors_with_children_correctly" executed="True" success="True" time="0.016" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest" success="True" time="0.750" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.AddStockInterest_should_showErrors_when_validation_fails" executed="True" success="True" time="0.734" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.AddStockInterest_test_when_validation_pass" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.nothing_should_happen_if_both_region_and_sector_are_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.nothing_should_happen_when_both_region_and_sector_havenot_been_set" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.should_add_interest_for_contact_in_happy_path" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.should_be_able_to_delete_interests" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.should_do_nothing_if_user_choose_cancel_adding_when_showing_warning_new_interest_covers_existing_interests" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.should_show_error_message_if_region_or_sector_is_invalid" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.should_show_warning_message_if_new_interest_covers_existing_interests" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestsEditingPanelPresenterTest.show_interests_should_show_all_interests_of_consumer" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_invalid_when_both_region_and_sector_are_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_invalid_when_both_region_and_sector_are_not_provided" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_invalid_when_no_region_is_provided" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_invalid_when_no_sector_is_provided" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_invalid_when_regionName_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_invalid_when_sectorName_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_be_valid_when_valid_DTO" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.should_not_allow_adding_interest_which_is_covered_by_existing_interests" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.InterestValidatorTest.show_not_allow_adding_stock_interest_if_duplicate" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest" success="True" time="0.250" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest.should_display_regions" executed="True" success="True" time="0.250" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest.should_display_sectors" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest.should_hide_no_match_error_and_candidates_if_text_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest.should_hide_popup_and_set_text_on_the_TextBox_if_complete_match_is_found" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest.should_hide_popup_and_set_text_on_the_TextBox_if_no_match_found" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetails.SearchAsTypeTextBoxPresenterTest.should_show_popup_if_complete_match_is_not_found" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest" success="True" time="0.563" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.ChangeContactDetailButton_Click_test" executed="True" success="True" time="0.344" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.DisplayChangeContactDetailButton_should_do_nothing_when_not_admin" executed="True" success="True" time="0.188" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.DisplayChangeContactDetailButton_should_show_change_contact_detail_button_when_admin" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.DisplayFormerContactDetailLink_should_do_nothing_when_no_old_contact" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.DisplayFormerContactDetailLink_should_ShowFormerContactDetailLink_when_has_former_contact" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.DisplayHasBeenDisabled_should_do_nothing_when_contact_is_not_disabled" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.DisplayHasBeenDisabled_should_ShowHasBeenDisabled_when_contact_is_disabled" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.Initialize_test" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.OpenOldContactDetails_test" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.should_compose_proper_account_priority_summary_string" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.should_display_correct_contact_details" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.should_indicate_not_available_for_additional_contact_info_when_offline" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.should_rethrow_exception_if_server_is_not_available" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.should_show_additional_contact_info_when_online" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactDetailsWindowPresenterTest.should_show_telephone_numbers_of_contact" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory" success="True" time="1.047" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ClientContactHistoryListViewPresenterTest" success="True" time="0.219" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ClientContactHistoryListViewPresenterTest.GetContactHistory_test" executed="True" success="True" time="0.219" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ClientContactHistoryListViewPresenterTest.merge_should_replace_existing_one_in_same_thread" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ClientContactHistoryListViewPresenterTest.MergeWithOriginalHistory_should_insert_new_item_when_it_is_new" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ClientContactHistoryListViewPresenterTest.should_get_updated_contacts_when_run" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest" success="True" time="0.578" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.GoOffline_test" executed="True" success="True" time="0.563" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.HandleError_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.ListItemDoubleClicked_should_OpenReplyContactNoteWindow" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.ListKeyUp_should_do_nothing_when_contactNoteDisplayData_was_null" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.ListKeyUp_should_do_nothing_when_other_key_pressed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.ListKeyUp_should_OpenReplyContactNoteWindow_when_press_Enter_key" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.OpenReplyContactNoteWindow_should_delegate_the_job_to_contact_note_opener" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.udpate_contact_history_when_date_range_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.udpate_view_for_losting_connection_when_date_range_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.UpdateHistory_should_update_view_when_has_delta" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.ContactHistoryListViewPresenterTest.UpdateHistory_should_update_view_when_no_item_after_merged" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.UserContactHistoryListViewPresenterTest" success="True" time="0.234" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactHistory.UserContactHistoryListViewPresenterTest.GetContactHistory_test" executed="True" success="True" time="0.234" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList" success="True" time="3.797" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListDragDropDataTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListDragDropDataTest.GetText_for_GlobalContactList" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListDragDropDataTest.GetText_for_MyContactList" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest" success="True" time="0.906" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.HitListViewItem_should_return_false_when_not_hit_item" executed="True" success="True" time="0.859" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.HitListViewItem_should_return_true_when_hit_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.HitScrollBarOrHeader_should_return_false_if_hitten_item_is_not_scroll_bar_or_column_header" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.HitScrollBarOrHeader_should_return_true_if_hitten_item_is_column_header" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.HitScrollBarOrHeader_should_return_true_if_hitten_item_is_scroll_bar" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnCreateMeetingMenuItemClicked_should_open_new_contact_note_window_with_type_meeting" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnCreateNoteMenuItemClicked_should_open_new_contact_note_window_with_type_telephone" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnCreateTagsMenuItemClicked_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnPreviewMouseLeftButtonDown_should_not_SetMouseDownPosition_when_not_ShouldSetMouseDownPosition" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnPreviewMouseLeftButtonDown_should_SetMouseDownPosition_when_ShouldSetMouseDownPosition" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnPreviewMouseMove_should_DoDragDrop_when_moved_a_certain_distance" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnPreviewMouseMove_should_not_DoDragDrop_when_mouse_down_position_is_null" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnPreviewMouseMove_should_not_DoDragDrop_when_moved_not_long_enough" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnScheduleMeetingMenuItemCLicked_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnSendEmailToAlternateEmailAddressMenuItemClicked_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.OnSendEmailToPrimaryEmailAddressMenuItemClicked_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.right_click_should_disable_context_menu_items_when_none_is_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.right_click_should_enable_context_menu_items_when_some_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.should_return_false_when_user_dragging_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.should_return_false_when_user_not_clicked_on_list_item" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.should_return_false_when_user_press_control_key" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.should_return_false_when_user_press_shift_key" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.should_return_true_when_not_press_control_and_shift_button_and_click_at_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.should_sort_selected_items_based_on_index" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.ShouldSetMouseDownPosition_should_return_false_when_HitScrollBarOrHeader" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.ShouldSetMouseDownPosition_should_return_false_when_not_HitListViewItem" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListViewPresenterTest.ShouldSetMouseDownPosition_should_return_true_when_HitListViewItem_but_not_HitScrollBarOrHeader" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest" success="True" time="0.500" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.AddSelectedContactClicked_should_add_selected_contacts_into_my_contact_list" executed="True" success="True" time="0.484" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.AddSelectedContactClicked_should_do_nothing_if_current_active_tab_is_not_global_contact_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.AddSelectedContactClicked_should_do_nothing_if_no_selected_contact_in_global_contact_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadGlobalContactListVisibility_should_do_nothing_when_not_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadGlobalContactListVisibility_should_HideGlobalContactList_when_changed_to_false" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadGlobalContactListVisibility_should_ShowGlobalContactList_when_changed_to_true" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadWindowSettings_should_LoadWindowSize_and_LoadWindowState" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadWindowSize_should_apply_size_when_size_not_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadWindowSize_should_not_apply_size_when_size_empty" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadWindowState_test_when_state_is_Maximized" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.LoadWindowState_test_when_state_is_not_Maximized" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.StoreWindowSettings_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.ViewContactsForSpecifyOrgnization_should_also_ShowGlobalContactList_when_it_is_invisible" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowPresenterTest.ViewContactsForSpecifyOrgnization_should_SetKeywordForSearchingInGlobalContactList" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.ContactListWindowTest.window_should_not_exceed_max_screen_size" executed="False">
                                            <reason>
                                              <message><![CDATA[won't work on Cruise because the screen size is the real one]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.DragEventArgWrapperTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.DragEventArgWrapperTest.should_return_identity_point_when_target_element_has_not_been_initialised" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest" success="True" time="0.250" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.double_click_on_global_contact_list_view_should_open_contact_details_window" executed="True" success="True" time="0.234" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.enter_key_down_on_global_contact_list_view_should_not_open_contact_details_window_if_multiple_contacts_are_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.enter_key_down_on_global_contact_list_view_should_not_open_contact_details_window_if_no_contact_is_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.enter_key_down_on_global_contact_list_view_should_open_contact_details_window" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.search_by_empty_keywords_should_set_empty_view_and_clear_error" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.search_should_set_empty_to_view_and_show_unavailable_when_offline" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.search_should_set_searched_contacts_to_view_when_online" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_be_able_to_save_columns_widths_settings" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_not_change_contact_list_control_columns_width_if_no_width_setting_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_not_change_contact_list_control_columns_width_to_stored_settings_if_setting_is_corrupted" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_set_contact_list_control_columns_width_to_stored_settings" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_set_next_and_previous_state" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_set_next_and_previous_state_when_in_middle_of_results" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_show_global_contact_list_is_unavailable_when_in_offline_mode" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_show_matches_global_contact_list_and_disable_previous_button" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.GlobalContactListControlPresenterTest.should_show_No_matches_global_contact_list" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest" success="True" time="0.328" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.add_new_contact_list_should_check_with_existing_name_in_case_insensitive_mode" executed="True" success="True" time="0.313" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.add_new_contact_list_shows_newly_added_list" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.Close_should_unregister_contactListView_events" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.should_not_remove_active_contact_list_if_user_canceled" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.should_not_remove_contact_list_if_only_one_left" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.should_remove_active_contact_list_if_not_the_only_one" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactGroupControlPresenterTest.show_should_reload_contact_lists_when_shown" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest" success="True" time="0.328" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.drop_should_add_multiple_contacts_to_my_contact_list_and_reset_column_sorting_status" executed="True" success="True" time="0.313" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.drop_should_add_to_my_contact_list_and_refresh_view_by_search_and_reset_columns_sorting_stauts" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.drop_should_can_handler_drop_in_my_contact_list_and_reset_columns_sorting_stauts" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.should_allow_drop_if_drop_data_from_contact_list_and_is_not_ordered" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.should_allow_drop_if_drop_data_from_global" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.should_disallow_drop_if_drag_drop_data_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.should_disallow_drop_if_drop_data_from_contactlist_and_contact_list_is_ordered" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterDragAndDropTest.should_disallow_drop_if_drop_index_is_invalid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest" success="True" time="0.891" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ChangeDisplayFrequency_should_update_frequency_and_update_view_and_keep_search_criteria" executed="True" success="True" time="0.656" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ChangeDisplayFrequency_should_update_frequency_and_update_view_when_no_keywords_present" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ChangeMenuItemStatus_should_check_menu_item_if_tag_contains_in_menuItem" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ChangeMenuItemStatus_should_uncheck_menu_item_if_tag_contains_in_menuItem" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.CheckIsOffline_should_return_false_when_online" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.CheckIsOffline_should_return_true_when_offline" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ContactDroppedOnRemoveField_should_remove_contact_and_refresh_view" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ContactDroppedOnRemoveField_should_return_null_on_non_my_contact_object" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.delete_key_up_should_remove_selected_my_contacts_and_refresh_view" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.DoSortContactList_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.enter_key_up_should_not_open_contact_details_when_multiple_contacts_are_selected" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.enter_key_up_should_not_open_contact_details_when_no_contact_is_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.enter_key_up_should_open_contact_details_when_selected_contact" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.HasAnyContact_should_return_false_if_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.HasAnyContact_should_return_true_if_exists" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.InitColumns_should_disply_stored_number_of_columns_if_contact_list_has_no_order_setting" executed="True" success="True" time="0.016" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.InitColumns_should_order_contact_list_columns_by_user_setting" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.InitColumns_should_show_default_columns_if_no_stored_columns_tags_found" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ListItemDoubleClick_should_open_contact_details" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.nothing_should_happen_when_viewing_all_contact_for_specify_orgnization_without_selected_contact" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.OnClickEmailAddress_should_open_new_email_window_by_outlook" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.OnClickPhoneNumber_should_not_show_INewContactNoteView_when_phone_is_in_use" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.OnClickPhoneNumber_should_show_INewContactNoteView_when_phone_is_not_in_use" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.press_down_key_on_search_box_should_focus_my_first_contact" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ReloadContactsByKeyworks_should_reload_myContacts" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.RemoveSelectedMyContacts_should_remove_selected_my_contacts_and_refresh_view" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SearchMyContacts_should_show_all_contacts_in_the_list_if_keywords_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SetAlertPreference_should_add_alert_when_offline" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SetAlertPreference_should_add_alert_when_online_and_checked" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SetAlertPreference_should_remove_alert_when_online_and_not_checked" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SetContactAlertPreference_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SetOrganisationAlertPreference_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_add_column_and_check_corresponding_menu_item_if_it_is_not_shown_before" executed="True" success="True" time="0.016" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_add_columns_and_check_corresponding_menu_items_if_they_are_not_shown_before" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_be_able_tostore_column_widths" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_ignore_reapplying_sorting_if_no_sorted_column" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_not_change_contact_list_control_columns_width_if_no_width_setting_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_not_change_contact_list_control_columns_width_to_stored_settings_if_setting_is_corrupted" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_reapply_last_sorting_to_last_sorted_column" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_remove_column_and_uncheck_corresponding_menu_item_if_it_exists" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_remove_columns_and_uncheck_corresponding_menu_items_if_they_exist" executed="True" success="True" time="0.016" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_return_ascending_direction_if_it_is_diffrent_from_last_sorted_column" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_return_ascending_direction_if_it_is_last_sorted_column_and_last_sort_direction_is_notsorted" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_return_descending_direction_if_it_is_last_sorted_column_and_last_sort_direction_is_ascending" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_return_not_sorted_direction_if_it_is_last_sorted_column_and_last_sort_direction_is_descending" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_search_my_contact_list_and_update_view_when_keywords_are_changed" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_set_checked_status_of_context_menu_item_of_manage_columns" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_set_contact_list_control_columns_width_to_stored_settings" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_show_my_profile" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_store_columns_tags_in_user_settings" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_unregister_events_before_be_removed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_update_view_when_contact_model_is_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.should_view_all_contacts_for_specify_orgnization_when_selected_one_contact" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.show_should_set_my_contacts_and_frequency" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SortContactList_should_do_nothing_when_not_IsSortable" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SortContactList_should_sort_when_IsSortable_and_should_not_reset_last_sorted_column_if_is_sorting" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.SortContactList_should_sort_when_IsSortable_and_should_reset_last_sorted_column_if_is_NOT_sorting" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.StoreColumnsOrder_should_store_column_orders_user_settings" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.MyContactListControlPresenterTest.ViewContactsForSameOrgnization_should_popup_error_message_while_multiple_contacts_are_selected" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest" success="True" time="0.172" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.for_the_showcase_should_not_do_drop_if_scrolled_down_and_drop_target_is_off_the_top_of_the_list_view" executed="True" success="True" time="0.156" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.insert_before_index_should_be_after_the_hitten_item_when_dropped_near_bottom_half_of_the_hitten_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.insert_before_index_should_be_at_the_first_when_dropped_before_the_first_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.insert_before_index_should_be_at_the_last_when_dropped_below_the_last_item" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.insert_before_index_should_be_the_hitten_item_when_dropped_near_top_half_of_the_hitten_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.insert_before_index_should_be_zero_when_my_contact_list_object_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.insert_before_index_should_be_zero_when_my_contact_list_view_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.should_do_nothing_when_hitten_index_was_minus_one" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.RelativePositionLocatorTest.should_get_current_selected_contact" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.SortableGridViewColumnTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.SortableGridViewColumnTest.SortBy_should_be_DisplayMemberBinding_path_when_not_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.SortableGridViewColumnTest.SortBy_should_be_SortBy_when_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.SortableGridViewColumnTest.SortBy_should_throw_EvolveSystemException_when_not_IsSortable" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest" success="True" time="0.219" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.enter_keyup_should_not_open_user_detail_window_if_multiple_users_are_selected" executed="True" success="True" time="0.203" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.enter_keyup_should_not_open_user_detail_window_if_no_user_is_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.enter_keyup_should_open_user_detail_window_if_just_one_user_is_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.search_by_empty_keywords_should_set_empty_to_view_and_clear_error" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.search_should_set_empty_to_view_and_show_no_result_when_search_result_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.search_should_set_empty_to_view_and_show_unavailable_when_offline" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.search_should_set_searched_users_to_view_when_online" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.should_not_open_user_detail_window_when_some_keyup_but_it_is_not_enter_key" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserListControlPresenterTest.show_user_should_open_user_details_view" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest" success="True" time="0.188" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.GetContactListWindowSize_should_get_size_from_storage" executed="True" success="True" time="0.172" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.GetContactListWindowSize_should_return_empty_size_if_not_available" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.GetContactListWindowState_should_get_window_state_from_storage" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.GetContactListWindowState_should_return_window_state_Normal_if_not_available" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.GetGlobalContactListVisiblity_should_get_visibility_from_storage" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.GetGlobalContactListVisiblity_should_return_false_if_not_available" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_be_able_to_get_contact_list_window_columns_widths" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_be_able_to_get_global_contact_list_window_columns_widths" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_columns_order_array" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_columns_tag_setting" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_contact_list_window_columns_widths_that_are_greater_than_10" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_empty_array_if_content_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_null_if_no_columns_width_setting_available" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_null_if_no_global_columns_width_setting_available" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_return_null_if_tag_setting_not_found" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_store_comma_separated_string" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.should_store_comma_separated_string_for_columns_tags" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.store_columns_width" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.store_global_columns_width" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.StoreContactListWindowSize_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.StoreContactListWindowState_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactList.UserSettingsTest.StoreGlobalContactListVisibility_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteOpenerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteOpenerTest.should_show_contact_note_window_by_contact_note" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteOpenerTest.should_show_contact_note_window_when_alert_is_marked_already" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteOpenerTest.should_show_contact_note_window_when_alert_is_successfully_marked_if_not_marked_yet" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes" success="True" time="6.531" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.CallDetailsCapturerTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.CallDetailsCapturerTest.clear_should_record_call_details" executed="True" success="True" time="0.266" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactedFlagTemplateSelectorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactedFlagTemplateSelectorTest.test_response_to_contacted_status_correctly" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactedFlagTemplateSelectorTest.test_response_to_not_contacted_status_correctly" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest" success="True" time="0.484" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.DisplayHasBeenDisabled_should_do_nothing_when_contact_is_not_disabled" executed="True" success="True" time="0.469" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.DisplayHasBeenDisabled_should_ShowHasBeenDisabled_when_contact_is_disabled" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.DisplaySingleContact_test" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.GetOrganizationDescription_should_return_empty_when_organisation_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.GetOrganizationDescription_should_trim" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.SetLabelText_should_DisplayMulitpleContacts_when_contacts_are_more_than_ones" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactInfoLabelPresenterTest.SetLabelText_should_DisplaySingleContact_when_only_one_contact" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNameListTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNameListTest.should_compose_name_list_if_does_not_have_all_contacts" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNameListTest.should_compose_name_list_if_has_all_contacts" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerModelTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerModelTest.should_get_additional_recipients_from_additional_and_action_recipients_ignoring_me_without_duplication" executed="True" success="True" time="0.000" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest" success="True" time="0.563" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.add_contact_note_should_call_decorator_to_decorate_contact_note" executed="True" success="True" time="0.516" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.GetContactNoteDTO_test" executed="False">
                                            <reason>
                                              <message><![CDATA[This needs to be separate out into a dedicated converter otherwise it's way too complex to test here.  - Derek]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.LoadSubType_should_set_default_subtype_to_outgoing" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.NotifyError_should_use_message_reporter" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.save_should_add_new_contact_note_to_current_user" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.save_should_add_new_voice_mail_to_current_user" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.SetRecipients_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_create_multiple_new_email_contact_notes" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_create_one_new_meeting_contact_notes" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_create_one_voice_mail_contact_notes_for_contacts" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_focus_on_notes_and_hide_recipient_component" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_not_replace_stock_interests_if_not_including_recipients_after_stock_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_not_save_note_when_validation_fails" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_replace_stock_interests_if_including_recipients_after_stock_changed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.should_show_error_if_connection_lost_when_saving" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.tag_button_click_will_hide_tag_panel_when_tag_panel_is_visible" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.tag_button_click_will_show_tag_panel_when_tag_panel_is_collapsed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.validation_should_return_false_when_not_validated" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerPresenterTest.validation_should_save_state_when_validated" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest.should_assemble_correct_message_when_action_recipient_count_is_not_zero" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest.should_assemble_correct_message_when_action_recipient_is_empty_and_normal_recipient_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest.should_assemble_correct_message_when_all_of_action_recipient_count_and_normal_recipient_count_and_tag_count_are_not_zero" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest.should_assemble_correct_message_when_both_action_recipient_and_normal_recipient_are_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest.should_assemble_correct_message_when_both_of_action_recipient_count_and_normal_recipient_count_are_zero_but_tag_count_is_not_zero" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteComposerTest.should_assemble_correct_message_when_notify_success" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlPresenterTest" success="True" time="0.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlPresenterTest.should_do_nothing_on_selection_changed_initially" executed="True" success="True" time="0.203" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlPresenterTest.should_not_fire_event_on_the_view_if_select_same_item" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlPresenterTest.should_set_last_selected_item_and_fire_event" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlPresenterTest.should_set_selected_item_to_contact_history_item_which_has_same_id_as_current_contact_note_id" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlTest.empty_method_should_indicate_if_have_contact_notes" executed="False">
                                            <reason>
                                              <message><![CDATA[Wierd spurious failures]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlTest.should_not_fire_event_if_selected_not_changed" executed="False">
                                            <reason>
                                              <message><![CDATA[Wierd spurious failures]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlTest.should_set_bindings_for_contact_note_when_constructed" executed="False">
                                            <reason>
                                              <message><![CDATA[Wierd spurious failures]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteThreadControlTest.should_show_contacts_in_descend_order_of_created_on_time" executed="False">
                                            <reason>
                                              <message><![CDATA[Wierd spurious failures]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteValidationResultTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteValidationResultTest.should_be_invalid_if_any_paramter_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ContactNoteValidationResultTest.should_create_invalid_instance" executed="True" success="True" time="0.000" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.IsolatedSettingStorageTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.IsolatedSettingStorageTest.test_should_save_and_load_data" executed="True" success="True" time="0.016" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest" success="True" time="0.359" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.cancel_with_modifications_should_close_view_if_user_confirms" executed="True" success="True" time="0.344" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.cancel_with_modifications_should_not_close_view_if_user_does_not_confirm" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.cancel_without_modify_should_close_view" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.should_add_new_contact_notes_successfully_and_close_view" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.should_fetch_contacts_from_model_and_display_in_view" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.should_hide_voice_mail_button_for_meetings" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.should_not_close_view_if_adding_new_contact_notes_failed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.should_set_view_title_to_contact_name_if_there_is_single_contact" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewContactNotePresenterTest.should_set_view_title_to_evolve_group_if_there_are_multiple_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_clear_ctd_status_if_no_telephone_number_is_specified" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_dial_given_number_when_show_window" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_hang_up_phone" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_hang_up_phone_if_user_is_sure" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_hang_up_phone_if_user_is_sure_when_closing" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_have_different_message_if_discard_change_and_phone_in_use_when_closing" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_not_hang_up_if_user_not_sure_when_closing" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_not_prompt_and_save_contact_note_when_phone_is_not_in_use" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_not_prompt_if_phone_is_not_in_use" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_prompt_if_user_discard_message_and_phone_not_in_use" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.NewTelephoneContactNotePresenterTest.should_prompt_on_adding_contact_note_when_dialing" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteComposerPresenterTest" success="True" time="0.938" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteComposerPresenterTest.GetReplyViewState_should_get_tag_panel_state_if_tat_panel_is_visible" executed="True" success="True" time="0.938" asserts="8" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteComposerPresenterTest.GetReplyViewState_should_not_get_tag_panel_state_if_tat_panel_is_invisible" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteComposerPresenterTest.SetReplyViewState_should_not_set_note_and_actionByText_and_tagPanel_to_view_if_they_are_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteComposerPresenterTest.SetReplyViewState_should_set_every_data_to_view" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest" success="True" time="0.500" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.Dial_should_cancel_when_telephone_is_in_use" executed="True" success="True" time="0.250" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.Dial_should_cancel_when_telephone_not_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.Dial_should_proceed_when_telephone_available" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.email_clicked_should_create_email_composer_and_close_view_when_multiple_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.email_clicked_should_create_email_composer_and_close_view_when_single_contact" executed="True" success="True" time="0.188" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.email_clicked_should_prompt_user_with_hangup_phone_warning_if_is_connected_and_user_selects_NO_to_hangup" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.email_clicked_should_prompt_user_with_hangup_phone_warning_if_is_connected_and_user_selects_Yes_to_hangup" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.EmailClicked_should_get_all_contacts_if_current_contact_note_doesnot_contain_all_contacts" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.SetContactNoteToReply_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_change_contact_note_type_to_meeting_when_MeetingClicked" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_change_contact_note_type_to_meeting_when_TelephoneClicked" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_hang_up_phone" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_not_close_view_if_create_outlook_item_return_false" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_not_hang_up_phone_if_telephone_unavailable" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_result_in_not_showing_recipients_if_contactnote_not_having_any_recipients" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_result_in_showing_recipients_if_contactnote_has_actions_recipients_or_interest_recipients" executed="True" success="True" time="0.016" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.should_show_contact_note_thread" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowOrHideContactNameList_should_HideContactNameList_when_only_one" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowOrHideContactNameList_should_ShowContactNameList_when_more_than_one" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowOrHideCTDStatusMessage_should_do_nothing_when_more_than_one" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowOrHideCTDStatusMessage_should_not_ShowCTDStatusMessage_when_only_one_and_telephone_in_use" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowOrHideCTDStatusMessage_should_ShowCTDStatusMessage_when_only_one_and_telephone_not_in_use" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowWindow_test_after_set_state" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ShowWindow_test_when_not_set_state" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ToggleReplyTelephoneImage_should_DisableReplyTelephoneImage_when_more_than_one" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNotePanelPresenterTest.ToggleReplyTelephoneImage_should_EnableReplyTelephoneImage_when_only_one" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest" success="True" time="0.516" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.CanHangUpPhone_should_not_prompt_user_with_disconnecting_phone_warning_when_phone_in_user" executed="True" success="True" time="0.500" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.CanHangUpPhone_should_prompt_user_with_disconnecting_phone_warning_when_phone_in_user" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.CanHangUpPhone_should_return_false_when_phone_is_connected_and_user_says_NO_to_disconnect" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.should_close_when_dirty_check_is_not_supressed_and_data_is_dirty_and_user_confirmed" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.should_close_without_dirty_checking_when_it_is_supressed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.should_show_recipients_part_if_original_note_has_recipients" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.ReplyContactNoteWindowPresenterTest.should_show_remain_view_when_save_failed" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.RowGroupControlPresenterTest" success="True" time="0.516" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.RowGroupControlPresenterTest.delete_tag_row_should_delete_selected_row_if_there_is_at_least_two_rows_left" executed="True" success="True" time="0.516" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.RowGroupControlPresenterTest.delete_tag_row_should_notify_error_if_there_is_just_one_tag_row_left" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.RowGroupControlPresenterTest.get_group_state_should_return_states_for_all_row" executed="True" success="True" time="0.000" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.SingleStockAllowEmptyInputValidatorTest" success="True" time="0.391" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.SingleStockAllowEmptyInputValidatorTest.should_get_invalid_strategy_if_failed_to_find_stock" executed="True" success="True" time="0.391" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.SingleStockAllowEmptyInputValidatorTest.should_get_invalid_strategy_if_inputted_wrong_format_stock" executed="True" success="True" time="0.000" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.SingleStockAllowEmptyInputValidatorTest.should_get_valid_strategy_if_inputtingItem_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.SingleStockAllowEmptyInputValidatorTest.should_get_valid_strategy_if_item_is_valid" executed="True" success="True" time="0.000" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.SingleStockAllowEmptyInputValidatorTest.should_throw_exception_if_allowEmpty_is_set_to_false" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockDataRetrieverTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockDataRetrieverTest.should_search_through_stock_model" executed="True" success="True" time="0.000" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockHelperTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockHelperTest.Matches_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockHelperTest.should_failed_to_parse_description_if_invalid_format" executed="True" success="True" time="0.016" asserts="7" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockHelperTest.should_parse_description_to_stock_code_and_company_name" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockHelperTest.should_parse_description_under_edge_cases" executed="True" success="True" time="0.000" asserts="12" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockRowGroupControlPresenterTest" success="True" time="0.281" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockRowGroupControlPresenterTest.should_get_distinct_valid_stocks_from_view" executed="True" success="True" time="0.281" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockRowGroupControlPresenterTest.ValidateStockRowGroup_should_return_invalid_result_when_it_has_duplicate_rows" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockRowGroupControlPresenterTest.ValidateStockRowGroup_should_return_valid_result_when_row_is_empty" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockRowGroupControlPresenterTest.ValidateStockRowGroup_test_in_happy_path" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockRowGroupControlPresenterTest.ValidateStockRowGroup_test_when_one_row_is_invalid" executed="True" success="True" time="0.000" asserts="3" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockSearchCandidateTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.StockSearchCandidateTest.should_compose_name_from_stock_dto" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest" success="True" time="0.828" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.Dial_should_remove_listener_handlers_when_disposed_event_raised" executed="True" success="True" time="0.797" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.Dial_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.HandleCallCleared_should_change_IsInUse_to_false" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.HandleCallConnected_should_change_IsInUse_to_true" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.HandleCallConnecting_should_change_IsInUse_to_true" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.HandleFailure_should_change_IsInUse_to_false" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.HandlerCallClearing_should_get_current_time" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.IsInUse_should_be_false_at_the_very_beginning" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.should_get_duration_for_last_call" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.should_hang_up" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.StartListening_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.test_should_report_correct_status_message_when_available" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.TelephoneProxyTest.test_should_report_correct_status_message_when_unavailable" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.UserPickerValidatorTest" success="True" time="0.609" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.UserPickerValidatorTest.should_warn_unknown_action_recipients_if_action_recipients_are_invalid" executed="True" success="True" time="0.609" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.UserPickerValidatorTest.validate_empty_inputting_names_should_return_false_if_not_allow_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNotes.UserPickerValidatorTest.validate_empty_inputting_names_should_return_true_if_allow_empty" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteTypeIconResourcesTest" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteTypeIconResourcesTest.should_do_something" executed="True" success="True" time="0.016" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteTypeIconResourcesTest.should_get_correct_image_for_Threads" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ContactNoteTypeIconResourcesTest.should_have_correct_icon_uri" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest.should_assemble_doc_for_maybeInvalidUser_list" executed="True" success="True" time="0.047" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest.should_insert_all_names_when_pasting" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest.should_insert_all_names_when_searching_from_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest.should_insert_all_names_when_searching_from_list_with_already_existing_users" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest.should_insert_name_when_empty_on_pasting" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveRichtextDocumentTest.should_insert_name_when_empty_searching_from_list" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest" success="True" time="0.547" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_create_contact_list_view" executed="False">
                                        <reason>
                                          <message><![CDATA[Fragile UI test]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_create_new_contact_note_window_with_meeting_type" executed="False">
                                        <reason>
                                          <message><![CDATA[linda will look at this later]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_create_new_contact_note_window_with_telephone_number" executed="False">
                                        <reason>
                                          <message><![CDATA[linda will look at this later]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_create_new_organisation_window" executed="True" success="True" time="0.281" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_create_reply_contact_note_window" executed="False">
                                        <reason>
                                          <message><![CDATA[linda will look at this later]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_create_view_of_correct_type" executed="False">
                                        <reason>
                                          <message><![CDATA[Fragile UI test]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvolveViewFactoryTest.should_createUserDetailsView" executed="True" success="True" time="0.250" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvovleViewOfflineAttributeTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.EvovleViewOfflineAttributeTest.views_should_have_proper_offline_attribute" executed="True" success="True" time="0.000" asserts="12" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter" success="True" time="0.688" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.FilterableColumnBaseTest" success="True" time="0.500" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.FilterableColumnBaseTest.Contains_should_return_fales_when_null" executed="True" success="True" time="0.313" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.FilterableColumnBaseTest.Contains_should_return_true_when_in_list" executed="True" success="True" time="0.188" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.FilterableColumnBaseTest.Update_when_current_criteria_in_new_criterias" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.FilterableColumnBaseTest.Update_when_current_criteriea_not_in_new_criterias" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.PropertyGetterBasedFilterCriteriaTest" success="True" time="0.188" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.PropertyGetterBasedFilterCriteriaTest.IsMatch_should_return_false_when_property_got_is_null" executed="True" success="True" time="0.188" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.PropertyGetterBasedFilterCriteriaTest.IsMatch_should_return_false_when_property_got_not_equal_expected_property" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.PropertyGetterBasedFilterCriteriaTest.IsMatch_should_return_true_when_property_got_equal_expected_property" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Filter.PropertyGetterBasedFilterCriteriaTest.ToString_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.inputting_name_should_not_be_empty_between_commas" executed="True" success="True" time="0.016" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.inputting_should_be_empty_name_when_text_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.inputting_should_be_inputting_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.inputting_should_be_not_empty_name_when_text_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.length_should_be_zero_when_text_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.should_be_able_to_parse_comma_separated_names" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.should_be_aware_of_group_names_with_comma_inside" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.should_be_aware_of_group_names_with_parentheses_inside" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.should_be_aware_of_multiple_names" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.should_be_empty_when_nothing_is_there" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.InputtingItemsTest.should_ignore_brackets_in_fullname" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest.click_on_default_message_should_set_default_message_invisible_and_set_focus" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest.got_focus_should_set_default_message_invisible" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest.lost_focus_should_set_default_message_invisible_when_text_is_not_empty" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest.lost_focus_should_set_default_message_visible_when_text_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest.text_changed_should_disable_cancel_when_text_is_empty" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.KeywordsBoxPresenterTest.text_changed_should_enable_cancel_when_text_is_not_empty" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest" success="True" time="0.438" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest.should_not_show_admin_button_if_current_user_is_not_admin" executed="True" success="True" time="0.438" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest.should_show_admin_button_if_current_user_is_admin" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest.should_show_offline_when_start_in_offline_mode" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest.should_show_offline_when_status_changes_to_offline" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest.should_show_online_when_start_in_online_mode" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.LauncherWindowPresenterTest.should_show_online_when_status_changes_to_online" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting" success="True" time="8.234" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels" success="True" time="3.266" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.AddContactNoteActionsPanelPresenterTest" success="True" time="0.203" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.AddContactNoteActionsPanelPresenterTest.AddContactNoteButton_Click_test" executed="True" success="True" time="0.203" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.AddContactNoteActionsPanelPresenterTest.Initialize_should_DisableAddContactNoteButton_when_not_IsPastMeeting" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.AddContactNoteActionsPanelPresenterTest.Initialize_should_not_DisableAddContactNoteButton_when_IsPastMeeting" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest" success="True" time="0.688" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.AddContactNote_should_close_view_when_add_contact_not_succeed" executed="True" success="True" time="0.672" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.AddContactNote_should_not_close_view_when_add_contact_not_failed" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.CancelButton_Click_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.DiscardContactNoteButton_Click_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.SaveButton_Click_should_AddContactNote_when_not_HasAddedMeetingContactNote" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.SaveButton_Click_should_ShowHasAddedMeetingContactNoteError_when_HasAddedMeetingContactNote" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.DiscardContactNoteActionsPanelPresenterTest.UpdateContacts_test" executed="True" success="True" time="0.016" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest" success="True" time="0.422" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.CurrentUserIsAttendee_should_return_false_when_userId_not_found" executed="True" success="True" time="0.406" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.CurrentUserIsAttendee_should_return_true_when_userId_found" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.HaveRightToAddContactNote_should_return_true_otherwise" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.HaveRightToAddContactNote_should_return_true_when_user_is_attendee" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.HaveRightToAddContactNote_should_return_true_when_user_is_owner" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.Initialize_should_ShowAddContactNoteActionsPanel_when_HaveRightToAddContactNote" executed="True" success="True" time="0.016" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingActionsPanelPresenterTest.Initialize_should_ShowReadonlyActionsPanel_when_not_HaveRightToAddContactNote" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest" success="True" time="0.984" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.CancelButton_Click_should_call_view_close" executed="True" success="True" time="0.734" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetDeleteMeetingMessage_should_add_contact_name_if_InviteContactAttendees_is_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetDeleteMeetingMessage_should_add_external_email_if_InviteExternalAttendee_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetDeleteMeetingMessage_should_add_user_name_if_InviteUserAttendee_is_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetDeleteMeetingMessage_should_not_add_contact_name_if_InviteContactAttendees_is_false" executed="True" success="True" time="0.016" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetDeleteMeetingMessage_should_not_add_user_name_if_InviteUserAttendee_is_false" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetDeleteMeetingMessage_test" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_should_add_contact_name_if_InviteContactAttendees_is_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_should_add_external_email_if_InviteExternalAttendees_is_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_should_add_user_name_if_InviteUserAttendees_is_true" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_should_not_add_contact_name_if_InviteContactAttendees_is_false" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_should_not_add_external_email_if_InviteExternalAttendees_is_false" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_should_not_add_user_name_if_InviteUserAttendees_is_false" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.GetUpdateMeetingMessage_test" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.SaveAndSendButton_Click_should_do_nothing_when_invalid" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.SaveAndSendButton_Click_should_save_to_database_and_outlook_when_valid" executed="True" success="True" time="0.234" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.should_delete_meeting_and_close_window_if_ok_to_proceed" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.should_not_delete_meeting_if_it_already_had_contact_note_added" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.MeetingOwnerActionPresenterTest.should_not_delete_meeting_if_not_sure" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest" success="True" time="0.734" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.CancelButton_Click_should_close_view" executed="True" success="True" time="0.484" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.CreateMeeting_test" executed="True" success="True" time="0.234" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.SaveAndSendButton_Click_should_close_view_when_SaveAndSend_return_true" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.SaveAndSendButton_Click_should_not_close_view_when_SaveAndSend_return_false" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.SaveAndSendButton_Click_should_save_meeting_when_validated" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.SaveToServer_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.should_calcuate_the_prompt_string" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.should_not_send_invitation_prompt_if_no_invitee_entered" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.NewModificationPanelPresenterTest.should_promt_user_when_save_and_send" executed="True" success="True" time="0.016" asserts="1" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.ReadonlyModificationPanelPresenterTest" success="True" time="0.234" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.ReadonlyModificationPanelPresenterTest.CloseButton_Click_test" executed="True" success="True" time="0.234" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.ReadonlyModificationPanelPresenterTest.should_hide_cancel_meeting_button_if_meeting_owner_is_not_self" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ActionsPanels.ReadonlyModificationPanelPresenterTest.should_show_owner_panel_if_meeting_owner_is_himself" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ListViews" success="True" time="0.500" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ListViews.ContactMeetingListViewPresenterTest" success="True" time="0.234" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ListViews.ContactMeetingListViewPresenterTest.DateRangeChanged_test" executed="True" success="True" time="0.234" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ListViews.UserMeetingListViewPresenterTest" success="True" time="0.234" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.ListViews.UserMeetingListViewPresenterTest.DateRangeChanged_test" executed="True" success="True" time="0.234" asserts="0" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls" success="True" time="2.016" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest" success="True" time="0.000" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest.CombineDateAndTime_should_return_next_day_when_IsNextDay" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest.CombineDateAndTime_should_return_the_day_when_IsNextDay" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest.CombineDateAndTime_should_return_the_first_day_of_next_month_when_IsNextDay_and_date_is_last_day_of_that_month" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest.NextHour_test" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest.RoundUp_test" executed="True" success="True" time="0.000" asserts="4" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.HourAndMinuteTest.ToString_test" executed="True" success="True" time="0.000" asserts="3" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest" success="True" time="0.953" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.EndDateTimePicker_ValueChange_should_do_nothing_when_newValue_is_greater_than_startDateTime" executed="True" success="True" time="0.922" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.EndDateTimePicker_ValueChange_should_reset_EndDateTime_to_old_value_when_new_value_is_earlier_than_startDateTime" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.GetMeetingControlState_test" executed="True" success="True" time="0.016" asserts="13" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.HandleStartDateTimeChanged_should_handle_the_case_when_start_time_is_23" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.HandleStartDateTimeChanged_should_not_reset_end_date_time_when_start_date_time__end_date_time" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.HandleStartDateTimeChanged_should_reset_end_date_time_when_start_date_time_later_than_end_date_time" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.InitialiseByContactAttendees_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.InitialiseFromRetrievedMeetingDTO_test" executed="True" success="True" time="0.016" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.InitialiseFromScratch_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.ReminderTextBoxChanged_should_check_reminderCheckBox_when_reminderTextBox_changed" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlPresenterTest.StartDatePicker_ValueChanged_test" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest" success="True" time="0.016" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_return_false_if_contact_attendee_validate_failed" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_return_false_if_external_attendee_validate_failed" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_return_false_if_user_attendee_validate_failed" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_show_confirmation_when_all_invitations_checkboxes_uncheck_and_return_false_if_user_click_cancel" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_show_confirmation_when_all_invitations_checkboxes_uncheck_and_return_true_if_user_want_continue" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_show_confirmation_when_subject_is_blank_and_return_false_if_user_click_cancel" executed="True" success="True" time="0.016" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingControlValidatorTest.should_show_confirmation_when_subject_is_blank_and_return_true_if_user_want_to_continue" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest" success="True" time="0.813" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.DatePicker_ValueChanged_when_cancelled" executed="True" success="True" time="0.781" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.DatePicker_ValueChanged_when_not_cancelled" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.GetDate_should_return_date_value_when_it_has_value" executed="True" success="True" time="0.016" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.GetDate_should_throw_exception_when_it_does_not_have_value" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.GetValue_test" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.Initialise_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.SetValue_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.TimePicker_LostKeyboardFocus_when_cancelled" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.TimePicker_LostKeyboardFocus_when_not_cancelled" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.TimePicker_SelectionChanged_when_cancelled" executed="True" success="True" time="0.016" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.TimePicker_SelectionChanged_when_not_cancelled" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.ValueChanged_should_cancel_and_show_error_when_caught_InvalidDateTimeException" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.ValueChanged_when_cancelled" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.MeetingDateTimePickerPresenterTest.ValueChanged_when_not_cancelled" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.ReminderTextBoxPresenterTest" success="True" time="0.234" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.ReminderTextBoxPresenterTest.GetValue_test" executed="True" success="True" time="0.234" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.ReminderTextBoxPresenterTest.Initialise_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.ReminderTextBoxPresenterTest.LostFocus_should_do_nothing_when_number_input_is_valid" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingControls.ReminderTextBoxPresenterTest.LostFocus_should_reset_to_default_value_when_number_input_is_not_valid" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingOpenerTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingOpenerTest.should_not_open_edit_meeting_window_if_has_contact_note" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingOpenerTest.should_not_open_edit_meeting_window_if_is_deleted" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingOpenerTest.should_open_edit_meeting_window_if_no_contactNote_entered" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls" success="True" time="1.016" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest" success="True" time="1.016" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.GetSchedulingData_should_invoke_GetOneDaySchedule_and_GetOneDaySchedule" executed="True" success="True" time="0.750" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.GetSchedulingData_should_throw_exception_when_failed_to_get_user_one_day_schedule" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.GetUserAttendeesWithOwner_should_add_owner_to_userAttendees_when_owner_is_not_attendees" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.GetUserAttendeesWithOwner_should_not_add_owner_to_userAttendees_when_owner_is_in_attendees" executed="True" success="True" time="0.000" asserts="1" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.OnGetSchedulingDataCompleted_should_not_show_conflict_when_no_conflict" executed="True" success="True" time="0.250" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.OnGetSchedulingDataCompleted_should_show_conflict_when_has_conflict" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.OnGetSchedulingDataError_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.SchedulingDateChanged_should_switch_back_to_meeting_if_date_invalid" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.SchedulingDateChanged_when_error" executed="True" success="True" time="0.016" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.SchedulingDateChanged_when_no_error" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.TabControl_SelectionChanged_should_do_nothing_when_not_IsSchedulingTabSelected" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.TabControl_SelectionChanged_should_invoke_SchedulingDateChanged_when_IsSchedulingTabSelected_and_scheduling_date_changed" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.TabControl_SelectionChanged_should_invoke_SchedulingDateChanged_when_IsSchedulingTabSelected_and_scheduling_date_not_changed" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingTabControls.MeetingTabControlPresenterTest.ValidateBeforeCheckingSchedule_test" executed="True" success="True" time="0.000" asserts="1" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingWindowPresenterTest" success="True" time="0.563" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingWindowPresenterTest.Print_should_not_print_to_word_if_validation_failed" executed="True" success="True" time="0.563" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.MeetingWindowPresenterTest.Print_should_print_to_word" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls" success="True" time="0.844" asserts="0">
                                        <results>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.AttendeeListTest" success="True" time="0.000" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.AttendeeListTest.should_add_a_blank_row_when_add_blank_item" executed="True" success="True" time="0.000" asserts="3" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.AttendeeListTest.should_add_a_new_row_with_attendee_name_when_add_blank_item" executed="True" success="True" time="0.000" asserts="3" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.AttendeeListTest.should_add_a_new_row_with_bold_group_name_when_add_group_item" executed="True" success="True" time="0.000" asserts="3" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.AttendeeListTest.should_add_header_after_initailization" executed="True" success="True" time="0.000" asserts="3" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.PeriodTest" success="True" time="0.000" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.PeriodTest.should_return_duration_from_starttime_to_endtime" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.PeriodTest.should_return_false_when_time_on_the_boundart_of_the_period" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.PeriodTest.should_return_false_when_time_out_of_the_period" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.PeriodTest.should_return_total_hours_from_zero_oclock_of_the_day_of_starttime_to_starttime" executed="True" success="True" time="0.000" asserts="2" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.PeriodTest.should_return_true_when_time_in_the_period" executed="True" success="True" time="0.000" asserts="2" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest" success="True" time="0.531" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.Reload_test" executed="True" success="True" time="0.531" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.should_not_show_group_name_when_empty_attendee_of_the_group_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.should_not_show_group_name_when_null_attendee_of_the_group_test" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.should_show_group_name_and_attendees" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.ShowSchedulingMeeting_should_not_show_meeting_when_end_of_scheduling_date_is_before_start_time" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.ShowSchedulingMeeting_should_not_show_meeting_when_scheduling_date_is_after_end_time" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.ShowSchedulingMeeting_should_show_meeting_when_former_part_of_meeting_period_in_scheduling_date" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.ShowSchedulingMeeting_should_show_meeting_when_latter_part_of_meeting_period_is_in_scheduling_date" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.ShowSchedulingMeeting_should_show_meeting_when_meeting_period_is_longer_than_scheduling_date" executed="True" success="True" time="0.000" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingControlPresenterTest.ShowSchedulingMeeting_should_show_meeting_when_scheduling_date_same_with_meeting_period" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingDatePanelPresenterTest" success="True" time="0.266" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingDatePanelPresenterTest.NextDayButton_Click_test" executed="True" success="True" time="0.266" asserts="0" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingDatePanelPresenterTest.PreviousDayButton_Click_test" executed="True" success="True" time="0.000" asserts="0" />
                                            </results>
                                          </test-suite>
                                          <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingGridTest" success="True" time="0.031" asserts="0">
                                            <results>
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingGridTest.should_create_a_new_blank_row_with_white_background_when_add_new_blank_row" executed="True" success="True" time="0.016" asserts="26" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingGridTest.should_create_a_new_row_and_show_busy_periods_when_add_new_row_with_busy_periods" executed="True" success="True" time="0.000" asserts="36" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingGridTest.should_initialize_width_and_columns_and_header_when_create_a_new_schedulinggird" executed="True" success="True" time="0.000" asserts="27" />
                                              <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Meeting.SchedulingControls.SchedulingGridTest.should_show_meeting_rectangle_in_all_rows_when_showing_scheduling_meeting" executed="True" success="True" time="0.016" asserts="7" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.MessageReporterTest" success="True" time="0.219" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.MessageReporterTest.should_not_be_re_entrant_if_exception_happens_when_reporting" executed="True" success="True" time="0.219" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.MessageReporterTest.should_not_show_dialog_box_if_reported_exception_is_out_of_memory_exception_so_as_to_prevent_infinite_regression_of_out_of_memory_exceptions" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest" success="True" time="0.750" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_close_correct_type_of_view" executed="True" success="True" time="0.734" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_close_correct_view_for_expected_id" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_create_correct_type_of_view" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_create_new_contact_note_window_with_multiple_contact_ids" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_create_new_contact_note_window_with_telephone_number" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_not_open_window_if_the_view_does_not_support_offline_when_offline" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_open_again_if_window_has_closed" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.should_open_details_view_if_none_open" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.NavigatorTest.test_only_create_one_if_already_open" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation" success="True" time="2.313" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.EditOrganisationControlPresenterTest" success="True" time="1.203" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.EditOrganisationControlPresenterTest.Save_test" executed="True" success="True" time="1.188" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.EditOrganisationControlPresenterTest.ShowErrorIfFailed_when_INVALID_PARENT_ORGANISATION" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.EditOrganisationControlPresenterTest.ShowErrorIfFailed_when_VERSION_CONFLICTED" executed="True" success="True" time="0.016" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest" success="True" time="0.484" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.AddNewButton_click_should_ask_for_confirmation_when_manageOrganisationControl_dirty" executed="True" success="True" time="0.484" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.AddNewButton_Click_should_not_ask_confirmation_when_no_change" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.CancelButton_Click_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.EditButton_Click_should_do_nothing_when_inputted_organisation_is_invalid" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.EditButton_Click_should_load_organisation_when_inputted_organisation_is_valid" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.Initialize_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.SaveButton_click_should_collapse_when_save_succeed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.SaveButton_click_should_do_nothing_when_invalid" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.ManageOrganisationWindowPresenterTest.SaveButton_click_should_not_collapse_when_save_failed" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.NewOrganisationControlPresenterTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.NewOrganisationControlPresenterTest.should_not_save_organisation_when_invalid_input" executed="True" success="True" time="0.250" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.NewOrganisationControlPresenterTest.should_save_organisatioin_detail_when_valid" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.OrganisationAuditHelperTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.OrganisationAuditHelperTest.should_detect_changes_for_original_and_updated_organisation" executed="True" success="True" time="0.000" asserts="67" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.OrganisationControlPresenterTest" success="True" time="0.328" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Organisation.OrganisationControlPresenterTest.should_copy_office_address_to_research_address_when_checked" executed="True" success="True" time="0.328" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ResearchReports" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.ResearchReports.AttachResearchReportWindowTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.ResearchReports.AttachResearchReportWindowTest.should_show_window" executed="False">
                                            <reason>
                                              <message><![CDATA[Ui Test]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.RoundCornerWindowPresenterTest" success="True" time="0.266" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.RoundCornerWindowPresenterTest.OnMaximizeButtonClicked_should_set_window_state_to_maximized_when_current_is_normal" executed="True" success="True" time="0.266" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.RoundCornerWindowPresenterTest.OnMaximizeButtonClicked_should_set_window_state_to_normal_when_current_is_maximized" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.RoundCornerWindowPresenterTest.OnWindowStateChanged_should_SetMaximizeButtonMaximizeIcon_when_maximized" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.RoundCornerWindowPresenterTest.OnWindowStateChanged_should_SetMaximizeButtonRestoreIcon_when_maximized" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings" success="True" time="2.031" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest" success="True" time="0.953" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.initialize_should_set_default_value_of_from_and_to" executed="True" success="True" time="0.938" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.SearchAuditLog_should_not_do_search_when_validation_failed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.SearchAuditLog_should_search_by_domain_name" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.validate_date_range_should_return_false_when_From_date_is_later_than_To_date_and_show_error" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.validate_date_range_should_return_true_when_From_date_equals_To_date" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.validate_date_range_should_return_true_when_From_date_is_earlier_than_To_date" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.Validation_should_return_false_when_validate_changedByUserId_failed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.Validation_should_return_false_when_validate_dateRange_failed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.Validation_should_return_false_when_validate_domain_failed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowPresenterTest.Validation_should_return_true_when_all_valid" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.AuditLogWindowTest.show_window" executed="False">
                                            <reason>
                                              <message><![CDATA[Only used for UI test]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest" success="True" time="0.734" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.KeyDownOnFromUserPicker_should_return_false_when_is_not_Enter_key_down" executed="True" success="True" time="0.703" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.KeyDownOnFromUserPicker_should_return_true_when_user_field_validation_fails" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.SearchFinished_should_clear_contactLists_when_search_found_no_from_user" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_add_multiple_contacts_to_multiple_users_with_contact_list_with_same_ids_confimed_overwrite" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_appears_contact_list_when_admin_inputs_valid_username" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_cancel_add_multiple_contact_lists_to_user_when_this_user_has_same_id_contact_list_and_cancel_overwrite" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_check_to_user_if_valid_when_hits_the_enter_in_user_to_box" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_copy_contact_lists_to_users" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_show_contact_list_when_contact_list_was_not_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_show_error_message_and_clean_contact_list_if_from_user_is_invalid" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_show_error_message_if_no_contact_list_selected" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_show_error_message_when_contact_list_was_empty" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_show_error_message_when_multiple_users_entered_in_to_field" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.CopyContactListPanelPresenterTest.should_show_error_message_when_same_user_in_from_and_to" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.SetupWindowPresenterTest" success="True" time="0.313" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.SetupWindowPresenterTest.should_not_show_contact_list_panel_when_user_not_in_adminstrator_role" executed="True" success="True" time="0.313" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.SetupWindowPresenterTest.should_show_contact_list_panel_when_user_role_was_administrator" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.add_interests_should_delegate_to_current_user" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.should_add_stock_interest_alert_preference_when_prefered_is_true" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.should_delete_stock_interest_alert_preference_when_prefered_is_false" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.should_get_all_interests_of_current_user_from_user_model" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.should_get_all_stock_interests_of_current_user_from_user_model" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.should_remove_regin_sector_interest_alert_preference_when_prefered_is_false" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.should_set_regin_sector_interest_alert_preference_when_prefered_is_true" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Settings.UserInterestEditingConsumerTest.shoule_delete_interests_through_user_model" executed="True" success="True" time="0.016" asserts="2" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.SingleUserInputtingNameTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.SingleUserInputtingNameTest.should_return_correct_names" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags" success="True" time="1.719" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.AddTagsWindowPresenterTest" success="True" time="0.344" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.AddTagsWindowPresenterTest.SaveTags_test" executed="True" success="True" time="0.344" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelPresenterTest" success="True" time="0.625" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelPresenterTest.GetState_should_assmble_tagPanelState" executed="True" success="True" time="0.625" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelPresenterTest.SetFromState_should_set_data_to_view" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelValidatorTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelValidatorTest.Validate_should_return_false_if_stock_is_invalid" executed="True" success="True" time="0.016" asserts="5" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelValidatorTest.Validate_should_return_false_if_tags_are_all_valid_but_reason_is_empty" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelValidatorTest.Validate_should_return_false_if_tags_are_not_all_valid" executed="True" success="True" time="0.000" asserts="4" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagGroupPanelValidatorTest.Validate_should_return_true_if_all_data_are_valid" executed="True" success="True" time="0.000" asserts="11" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowGroupControlPresenterTest" success="True" time="0.469" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowGroupControlPresenterTest.ValidateTagRowGroup_test_in_happy_path" executed="True" success="True" time="0.469" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowGroupControlPresenterTest.ValidateTagRowGroup_test_when_one_row_is_invalid" executed="True" success="True" time="0.000" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.AssembleValidationResult_test_when_valid_fail" executed="True" success="True" time="0.250" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.AssembleValidationResult_test_when_valid_success" executed="True" success="True" time="0.000" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.Validate_test_when_tag_recipient_is_invalid" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.Validate_test_when_tag_recipient_is_valid" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.Validate_test_when_validate_CCY_and_amount_failed" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.ValidateCCYAndAmount_test_in_happy_path" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.ValidateCCYAndAmount_test_when_ccy_is_empty_but_amount_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.Tags.TagRowPresenterTest.ValidateCCYAndAmount_test_when_ccy_is_not_empty_and_amount_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails" success="True" time="0.359" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.TagDetailWithNumberTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.TagDetailWithNumberTest.should_get_correct_amount_when_tag_doesnot_contain_currency_info" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.TagDetailWithNumberTest.should_get_correct_info_when_tag_contains_currency_info" executed="True" success="True" time="0.000" asserts="6" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.TagDetailWithNumberTest.should_get_organisation_names_without_duplication" executed="True" success="True" time="0.016" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.UserDetailsPresenterTest" success="True" time="0.344" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.UserDetailsPresenterTest.should_show_not_show_EditableInterestPanel_if_not_currentuser" executed="True" success="True" time="0.328" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.UserDetailsPresenterTest.should_showEditableInterestPanel_if_currentuser" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserDetails.UserDetailsPresenterTest.should_throw_exception_if_can_not_get_user" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest" success="True" time="0.547" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_append_comma_and_space_if_allow_multiple_users" executed="True" success="True" time="0.516" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_clear_content" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_display_correct_name_string_when_given_a_name_list" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_hide_candidates_when_found_names_has_candidate_and_have_full_match" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_hide_candidates_when_input_null" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_not_append_comma_and_space_if_not_allow_multiple_users" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_remove_specified_names_but_remain_contact_note_sender_when_sender_is_not_null" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_remove_specified_names_but_remain_manually_added_recipients" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_remove_specified_names_when_contact_note_sender_is_null" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_show_candidates_when_found_names_has_candidate_but_do_not_have_full_match" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_show_error_when_found_names_has_no_candidate" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.UserPickerPresenterTest.should_trim_text_in_clipboard_before_paste" executed="False">
                                        <reason>
                                          <message><![CDATA[It is too long...]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowKeyTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowKeyTest.should_compare_window_key_regardless_of_guid_order" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowKeyTest.should_equals_when_using_same_guid_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowKeyTest.should_equals_when_using_same_single_guid" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowKeyTest.should_have_same_hash_code_when_have_same_guids" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowKeyTest.should_not_equals_when_using_different_guid_list" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowWithoutControlBoxTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Presentation.WindowWithoutControlBoxTest.should_show_window" executed="False">
                                        <reason>
                                          <message><![CDATA[just for show window]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.PresentationModel" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.PresentationModel.ClientNotesPanelModelTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.PresentationModel.ClientNotesPanelModelTest.should_load_notes_from_server_side" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.PresentationModel.ClientNotesPanelModelTest.should_update_personal_client_notes_after_add_new_one" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.PresentationModel.ClientNotesPanelModelTest.should_update_shared_client_notes_after_add_new_one" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service" success="True" time="6.328" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.AlertPosterTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.AlertPosterTest.should_send_FetchAlertUpdatesCommand_after_check_interval" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.BatchedCommandResponseBuilderTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.BatchedCommandResponseBuilderTest.foo" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.ClientServiceProviderTest" success="True" time="0.891" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ClientServiceProviderTest.should_abort_connection_if_close_throws_an_exception" executed="True" success="True" time="0.891" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.DataContractSerializationTest" success="True" time="0.094" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.DataContractSerializationTest.should_load_CommandResponsePair_with_encryption" executed="True" success="True" time="0.094" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.DataContractSerializationTest.should_load_CommandResponsePair_without_encryption" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.DataContractSerializationTest.should_load_save_with_encryption" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.DataContractSerializationTest.should_load_save_without_encryption" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.EvolveDESCryptoProviderTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.EvolveDESCryptoProviderTest.should_encrypt_and_decrypt_string" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.EvolveDESCryptoProviderTest.should_encrypt_and_decrypt_throught_encrypted_stream" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.EvolveDESCryptoProviderTest.should_remain_unchanged_if_decrypt_given_fixed_string_for_dummy_cases" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.ExpiringCacheProviderTest" success="True" time="0.453" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ExpiringCacheProviderTest.should_expire_after_specified_time" executed="True" success="True" time="0.141" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ExpiringCacheProviderTest.should_expire_the_specified_command_only" executed="True" success="True" time="0.313" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest" success="True" time="0.313" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.CachedResult_should_return_null_if_no_cached_response_found" executed="True" success="True" time="0.266" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.clear_should_delete_cached_files_for_that_type" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_be_able_to_clear_cache" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_create_a_directory_if_not_exisiting" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_delete_bad_files_on_load" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_load_from_file" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_load_from_file_OnStart" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_save_to_a_file" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.should_update_if_same_command_was_send" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.update_should_cache_updated_updateable_response_back_to_file" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.update_should_clear_cached_response_if_response_is_not_updateable" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.update_should_clear_cached_response_if_ResponseCommand_is_IUpdateable_but_Command_NOT_updated" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.FileBasedCacheProviderTest.update_should_update_cached_response_if_response_is_updateable" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways" success="True" time="1.500" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.AddAccountDirectory_test" executed="True" success="True" time="0.250" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.AddAccountPriority_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.GetAccountDirectoryWithAccountPriorityList_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.LoadAccountDirectory_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.RemoveAccountDirectory_test" executed="True" success="True" time="0.016" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.RemoveAccountsFromAccountDirectory_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.RenameAccountDirectory_test" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AccountPriorityGatewayTest.ReorderAccountPriority_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AuditLogGatewayTest" success="True" time="0.234" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.AuditLogGatewayTest.GetAuditLog_test" executed="True" success="True" time="0.234" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_get_contact_history_by_last_updated_time" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_get_contact_note_thread_through_service_call" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_get_contactDTO_by_contact_id" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_get_history_from_remote_server_async" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_get_user_history_by_last_updated_time" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_not_raise_reply_contact_note_event_when_contact_thread_id_was_empty" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_raise_new_contact_note_event_when_contact_note_is_added" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.should_raise_reply_contact_note_event_when_contact_note_is_replied" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.ContactNoteGatewayTest.test_GetUserContactHistory" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.FeatureSetGatewayTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.FeatureSetGatewayTest.GetFeatureSet_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.GatewayTestBase`1" success="True" time="0.000" asserts="0">
                                        <results />
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.LocationGatewayTest" success="True" time="0.219" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.LocationGatewayTest.GetAllCountries_test" executed="True" success="True" time="0.219" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.LocationGatewayTest.GetProvincesByCountryId_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest" success="True" time="0.250" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.CancelMeeting_should_build_command_and_execute" executed="True" success="True" time="0.250" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.CreateMeeting_should_build_command_and_execute" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.GetCurrentUserOutlookMeetingEntryIds_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.GetMeetingByOutlookEntryId_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.GetOneDaySchedule_should_only_pass_the_date_part_of_datetime" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.GetUserMeetings_should_build_command_and_execute" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.IsDeleted_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.MeetingGatewayTest.UpdateMeeting_should_build_command_and_execute" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.StockGatewayTest" success="True" time="0.250" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.StockGatewayTest.GetAllStocks_test" executed="True" success="True" time="0.250" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.AddAlertPreference_test" executed="True" success="True" time="0.250" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.DeleteInterests_byStockDTO_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.DeleteInterests_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.GetCurrentUser_test" executed="True" success="True" time="0.016" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.GetNotRepliedContactNotes_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.GetUserById_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.Gateways.UserGatewayTest.RemoveAlertPreference_test" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest" success="True" time="0.594" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest.should_increase_scheduler_interval_when_system_turns_into_idle" executed="True" success="True" time="0.594" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest.should_not_increase_idle_counter_when_criteria_for_increase_is_not_met" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest.should_not_increase_scheduler_interval_if_it_will_exceed_max_setting" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest.should_not_increase_scheduler_interval_when_system_should_not_turn_into_idle" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest.should_not_reset_scheduler_interval_when_system_is_not_changing_back_to_normal_state" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCommandExecutorTest.should_reset_scheduler_interval_when_idle_criteria_is_not_met" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCriteriaTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCriteriaTest.should__increase_interval_when_max_allowed_is_not_0_and_max_will_not_be_exceeded" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCriteriaTest.should_increase_interval_when_max_allowed_interval_is_0" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCriteriaTest.should_not_increase_interval_when_max_allowed_is_not_0_and_will_be_exceeded" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCriteriaTest.should_only_increase_idle_counter_for_FetchAlertUpdatesCommand" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleCriteriaTest.treat_heartbeat_commands_as_idle_criteria" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.IdleIndicatorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleIndicatorTest.should_go_idle_after_idle_counter_is_increased_to_3" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleIndicatorTest.should_not_go_idle_state_by_default" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleIndicatorTest.should_not_go_normal_again_when_we_are_already_in_normal" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.IdleIndicatorTest.should_only_go_back_to_normal_state_from_idle" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.KnowTypeProviderTest" success="True" time="0.250" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.KnowTypeProviderTest.should_find_all_subclasses_of_Commands_and_Responses" executed="True" success="True" time="0.250" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest" success="True" time="0.266" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_add_mutatee_type_to_mutatee_type_list" executed="True" success="True" time="0.250" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_add_mutatee_types_of_command_to_mutatee_type_list" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_be_able_to_clear_multiple_caches_of_same_type_of_commands" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_cache_for_multiple_commands_with_different_values" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_cache_GetNotRepliedContactNotesCommand" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_cache_responses" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.should_overwrite_previous_responses" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.update_should_clear_cache_for_mutates_of_that_command" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.update_should_clear_cached_response_if_response_is_updateable_but_does_not_update" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.MemoryBasedCacheProviderTest.update_should_update_cached_response_if_response_is_updateable" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest" success="True" time="1.938" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.execute_async_should_throw_exception_if_file_based_cache_provider_return_null_cache_response_in_offline" executed="True" success="True" time="0.844" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.execute_sync_should_throw_exception_if_file_based_cache_provider_return_null_cache_response_in_offline" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.ExecuteOneWay_should_call_the_actual_method" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.ExecuteOneWay_should_handle_CommunicationException_Correctly" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.ExecuteOneWay_should_handle_exception_when_server_is_not_running" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.ExecuteOneWay_should_handle_generic_Exception_Correctly" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_cache_results_of_cacheable_command" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_cache_results_of_cacheable_command_async" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_call_the_actual_method" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_call_the_actual_method_async_and_then_handle_response" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_find_correct_last_call_span" executed="True" success="True" time="1.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_CommunicationException_Correctly" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_CommunicationException_Correctly_async" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_exception_when_server_is_not_running" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_exception_when_server_is_not_running_async" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_generic_Exception_Correctly" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_generic_Exception_Correctly_async" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_security_exception_correctly" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_handle_security_exception_correctly_async" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_on_going_offline" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_on_going_offline_async_at_begin" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_on_going_offline_async_at_end" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_only_when_state_change_occurs" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_only_when_state_change_occurs_async" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_when_connections_is_available_async" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_invoke_event_when_connections_is_available_only_if_FetchMyAlerts" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_not_invoke_event_on_regular_exception_async_at_end" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_not_invoke_event_on_regular_exeception" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_not_invoke_event_on_regular_exeception_async_at_begin" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_not_invoke_event_or_send_command_when_offline_and_command_is_not_FetchAlertUpdate" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_restart_the_scheduler_when_command_executed_successfully" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_return_cached_results_for_cachable_commands" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_return_cached_results_for_cachable_commands_async" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_send_alert_if_response_contains_alert" executed="True" success="True" time="0.031" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_start_scheduler_when_creating_executor" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_stop_scheduler_and_close_service_provider_when_close" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.OfflineSupportingCommandExecutorTest.should_update_Status_before_calling_Listeners" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.ReflectionBasedKnownTypeProviderTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ReflectionBasedKnownTypeProviderTest.should_find_all_implementors_ofInteface" executed="True" success="True" time="0.016" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ReflectionBasedKnownTypeProviderTest.should_return_child_types" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ReflectionBasedKnownTypeProviderTest.should_return_childen_from_all_levels" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.ReflectionBasedKnownTypeProviderTest.should_return_nothing_if_no_children_exist" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Service.TimeContextTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Service.TimeContextTest.should_get_current_server_time" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.TodoTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Client.TodoTest.should_limit_todo_list_less_than_17_items" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls" success="True" time="2.703" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.BlackListFileAddingValidatorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.BlackListFileAddingValidatorTest.should_invalidate" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.BlackListFileAddingValidatorTest.should_validate" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer" success="True" time="1.781" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest" success="True" time="0.297" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest.LoadRemoteAttachments_test" executed="True" success="True" time="0.281" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest.should_AddAttachment_and_raise_event" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest.should_Download" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest.should_remove_LocalAttachment_and_raise_event" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest.should_send_delete_attachment_command_and_raise_event_when_delete_RemoteAttachment" executed="True" success="True" time="0.000" asserts="3" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.AttachmentModelTest.should_upload" executed="True" success="True" time="0.016" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.CompositeFileAddingValidatorTest" success="True" time="0.234" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.CompositeFileAddingValidatorTest.invalid_test" executed="True" success="True" time="0.234" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.CompositeFileAddingValidatorTest.valid_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.EasyRemoteFileControlPresenterTest" success="True" time="0.984" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.EasyRemoteFileControlPresenterTest.shoud_download_file_from_server_when_open_file" executed="True" success="True" time="0.984" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.EasyRemoteFileControlPresenterTest.should_delete_file_when_client_confirmed" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.EasyRemoteFileControlPresenterTest.should_do_nothing_when_client_canel_the_open_dialog" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.EasyRemoteFileControlPresenterTest.should_not_delete_file_when_client_cancel" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.EasyRemoteFileControlPresenterTest.should_save_as_file_from_server" executed="True" success="True" time="0.000" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileCountAddingValidatorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileCountAddingValidatorTest.invalid_test" executed="True" success="True" time="0.000" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileCountAddingValidatorTest.valid_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileSizeFileAddingValidatorTest" success="True" time="0.250" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileSizeFileAddingValidatorTest.should_invalid" executed="True" success="True" time="0.250" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileSizeFileAddingValidatorTest.should_valid" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileUploadControlPresenterTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileUploadControlPresenterTest.DeleteFile_test" executed="False">
                                            <reason>
                                              <message><![CDATA[will replace by individual attachment presenter test]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileUploadControlPresenterTest.LoadAttachmentNames_test" executed="False">
                                            <reason>
                                              <message><![CDATA[we havn't find way to test mock events.]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileUploadControlPresenterTest.should_increase_files_amount_if_add_another" executed="False">
                                            <reason>
                                              <message><![CDATA[we havn't find way to test mock events.]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileUploadControlPresenterTest.should_not_upload_files" executed="False">
                                            <reason>
                                              <message><![CDATA[we havn't find way to test mock events.]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.FileUploadControlPresenterTest.should_upload_files" executed="False">
                                            <reason>
                                              <message><![CDATA[we havn't find way to test mock events.]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.NameFileAddingValidatorTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.NameFileAddingValidatorTest.invalid_test" executed="True" success="True" time="0.016" asserts="2" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.NameFileAddingValidatorTest.should_be_invalid_if_two_files_have_same_name_even_in_different_folder" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.NameFileAddingValidatorTest.valid_path_with_space_test" executed="True" success="True" time="0.000" asserts="1" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.FileTransfer.NameFileAddingValidatorTest.valid_test" executed="True" success="True" time="0.000" asserts="1" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors" success="True" time="0.531" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors.CountryDropDownBoxPresenterTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors.CountryDropDownBoxPresenterTest.Initialize_should_load_all_country_from_model" executed="True" success="True" time="0.266" asserts="0" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors.CountryDropDownBoxTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors.CountryDropDownBoxTest.should_handler_selectionChange_event" executed="False">
                                            <reason>
                                              <message><![CDATA[for country and province test]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors.ProvinceDropDownBoxPresenterTest" success="True" time="0.266" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.LocationSelectors.ProvinceDropDownBoxPresenterTest.Initialize_should_load_all_country_from_model" executed="True" success="True" time="0.266" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.CandidateItemTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.CandidateItemTest.two_candidate_item_should_be_equal_if_name_and_item_is_same" executed="True" success="True" time="0.000" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.EmailInputValidatorTest" success="True" time="0.000" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.EmailInputValidatorTest.should_validate_email_addresses" executed="True" success="True" time="0.000" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.StoppableDelayedEventHandlerTest" success="True" time="0.031" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.StoppableDelayedEventHandlerTest.should_not_invoke_when_stopped" executed="True" success="True" time="0.000" asserts="0" />
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.Searchable.StoppableDelayedEventHandlerTest.should_trigger_view_keyIn_when_duration_elapsed" executed="True" success="True" time="0.031" asserts="0" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest" success="True" time="0.016" asserts="0">
                                        <results>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_be_invaild_when_no_match" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_close_candidate_list_when_presses_escape_key_in_selector" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_close_candidate_list_when_user_press_escape_key" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_close_candidate_list_when_user_presses_escape_key" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_move_focus_to_selector_when_user_press_key_down" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_select_candidate_if_only_one_candidate_found" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_select_item_from_selector_when_user_click_left_mouse_button" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_select_item_from_selector_when_user_presses_enter_key" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                          <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.SearchAsType.SearchAsTypeSelectorTest.should_show_candidate_list_if_candidate_source_contains_multi_items" executed="False">
                                            <reason>
                                              <message><![CDATA[Added search delay interval, tests will fail]]></message>
                                            </reason>
                                          </test-case>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest" success="True" time="0.344" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_do_nothing_when_input_changed_but_no_error" executed="True" success="True" time="0.328" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_hide_error_message_when_input_changed_and_hasError" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_return_false_and_show_error_message_when_countryCode_invalidate" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_return_false_and_show_error_message_when_Telephone_and_countryCode_both_invalidate" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_return_false_and_show_error_message_when_Telephone_invalidate" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_return_true_when_countryCode_and_Telephone_validated" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.TelephoneFieldPresenterTest.should_return_true_when_input_nothing" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.UserControls.ValidateAwareTextBoxTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.ValidateAwareTextBoxTest.should_validate_email_address_format" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.UserControls.ValidateAwareTextBoxTest.should_validate_empty" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util" success="True" time="0.609" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_reduce_multiple_continuous_white_spaces_into_one_space" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_replace_extention_mark_with_space" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_strip_out_blank_area_code" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_strip_out_invalid_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_strip_out_leading_zero_within_area_code" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_strip_out_non_leading_plus" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_trim_area_code" executed="True" success="True" time="0.000" asserts="11" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_trim_number" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.BTTelephoneNumberTransformerTest.should_work_with_complex_transformation" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.ConnectionStatusCheckerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.ConnectionStatusCheckerTest.is_online_should_be_false_when_connection_status_is_offline" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.ConnectionStatusCheckerTest.is_online_should_be_true_when_connection_status_is_online" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.ConverterTest" success="True" time="0.250" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.ConverterTest.should_get_contact_from_basic_contact_info" executed="True" success="True" time="0.250" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_a_month_later_if_start_date_is_after_the_next_month" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_a_month_later_if_start_date_is_after_the_next_month_and_diff_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_next_month_if_start_date_in_next_month_and_after_the_same_day_in_next_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_next_month_if_start_date_in_next_month_and_before_the_same_day_in_next_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_next_month_if_start_date_in_next_month_and_in_next_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_next_week_if_start_date_is_after_this_week_and_before_two_weeks_later" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_next_week_if_start_date_is_after_this_week_and_before_two_weeks_later_and_diff_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_next_week_if_start_date_is_after_this_week_and_before_two_weeks_later_and_diff_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_this_month_if_start_date_is_after_two_weeks_later_and_in_the_same_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_this_week_if_start_date_is_in_this_week_but_not_today_nor_tomorrow" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_this_week_if_start_date_is_in_this_week_but_not_today_nor_tomorrow_and_diff_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_this_week_if_start_date_is_in_this_week_but_not_today_nor_tomorrow_and_diff_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_today_if_start_date_is_today" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_tomorrow_if_start_date_is_tomorrow" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_tomorrow_if_start_date_is_tomorrow_and_diff_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_tomorrow_if_start_date_is_tomorrow_and_diff_week" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperFutureGrouperTest.display_group_should_be_tomorrow_if_start_date_is_tomorrow_and_diff_year" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_last_month_if_in_last_month_but_not_in_this_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_last_month_if_older_than_last_week_but_not_in_this_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_last_week_if_start_time_is_neither_today_nors_yestoday_nor_this_week_but_before_two_weeks" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_one_year_ago_if_older_than_this_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_this_month_if_older_than_last_week_but_in_this_month" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_this_week_if_start_time_is_in_this_week_and_neither_today_nor_yestoday" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_this_week_if_start_time_is_in_this_week_and_neither_today_nor_yestoday_and_diff_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_this_year_if_older_than_last_month_but_in_this_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_today_if_start_time_is_today" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_yesterday_if_start_time_is_yesterday" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_yesterday_if_start_time_is_yesterday_and_diff_year" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DateTimeGroupingHelperPastGrouperTest.display_group_should_be_yesterday_if_yesterday_is_the_last_day_of_the_last_week" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.DefaultInstanceContainerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DefaultInstanceContainerTest.should_get_the_instance_just_put_in" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.DependencyInjectorTest" success="True" time="0.281" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DependencyInjectorTest.should_inject_dependency_on_base_class" executed="True" success="True" time="0.266" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DependencyInjectorTest.should_inject_more_than_one_fileds" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DependencyInjectorTest.should_not_allow_empty_argument" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.DependencyInjectorTest.should_not_initialize_again_if_alreay_setup" executed="True" success="True" time="0.016" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest.should_parse_a_email_with_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest.should_parse_a_normal_email" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest.should_recognize_a_list_of_mixed_format_emails" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest.should_return_empty_array_if_entering_null_or_empty" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest.should_split_email_address_string_to_array" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.EmailUtilTest.should_split_emails_with_name" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.FileOpenerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.FileOpenerTest.should_process_exception_if_file_not_exist" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.FileOpenerTest.should_process_exception_if_file_type_is_unknown" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.FileUtilTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.FileUtilTest.GetFileFilter_test" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.FileUtilTest.should_get_file_name_if_not_a_full_path" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.FileUtilTest.should_get_file_suffix" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.KeyboardStateTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.KeyboardStateTest.should_find_Select_all" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.KeyboardStateTest.should_find_Undo" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_multiple_names" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_name_which_has_brankets" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_name_which_has_quote" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_name_with_organisation_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_name_with_single_char" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_normal_names" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_organisation_name_which_has_comma_inside" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.Should_be_able_to_parse_organisation_name_which_has_nested_brankets" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.should_ignore_org_name_if_org_name_contains_unbalance_bracket" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.NameParserTest.should_ignore_org_name_if_org_name_contains_unbalance_bracket_" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Client.Util.ValidateUtilTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Client.Util.ValidateUtilTest.should_validate_email" executed="True" success="True" time="0.000" asserts="8" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Macquarie.Evolve.Test.Unit.Outlook" success="True" time="7.469" asserts="0">
                            <results>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.AddContactNoteButtonPresenterTest" success="True" time="0.297" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.AddContactNoteButtonPresenterTest.clicked_should_do_nothing_when_cancelled" executed="True" success="True" time="0.297" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.AddContactNoteButtonPresenterTest.clicked_should_hide_itself_and_show_discard_contact_note_button_when_proceed" executed="True" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.AddinControlSettingsTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.AddinControlSettingsTest.control_tags_and_update_counters_should_be_different_among_all_constants" executed="True" success="True" time="0.016" asserts="4" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.CloseorDeletemailItem_should_close_mail_item_if_it_did_not_save" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.CloseOrDeleteMailItem_should_delete_mail_item_if_it_saved" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.contacts_equality_should_not_care_order" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_get_reduced_contacts_by_comparing_emails" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_remove_all_emails_already_found_in_contacts" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_return_abridged_contacts_and_empty_emails_if_some_contacts_can_not_match_emails" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_return_merged_contacts_and_empty_emails_if_not_matched_emails_can_be_found" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_return_merged_contacts_and_non_evolve_emails_if_not_all_matched_emails_can_be_found" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_return_merged_contacts_if_some_contacts_not_match_emails_and_some_emails_not_found_from_server" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.should_return_original_contacts_and_empty_emails_if_all_original_contacts_match_email_addresses" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.BaseContactNoteOutlookFormPresenterTest.test_contacts_equality" executed="False">
                                    <reason>
                                      <message><![CDATA[working on refactoring this]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.EmailContactNoteDecoratorTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.EmailContactNoteDecoratorTest.should_decorate_email_body" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.EmailContactNoteDecoratorTest.should_stip_email_body_for_max_chars" executed="True" success="True" time="0.000" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.EvolveOutlookItemEventTest" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.EvolveOutlookItemEventTest.should_include_underlying_outlook_exception_in_exception_message" executed="True" success="True" time="0.078" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.EvolveOutlookItemEventTest.should_not_send_email_if_exception_is_thrown" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.ExchangeUserRecipientTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ExchangeUserRecipientTest.should_extract_user_id_from_ldap_address" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest" success="True" time="0.734" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.after_save_contact_note_successfully_should_close_inspector" executed="True" success="True" time="0.734" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.click_add_contact_note_button_should_set_view_visible" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.click_discard_contact_note_should_set_view_invisible" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.click_forward_contact_note_button_should_save_contact_note" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.initialize_should_hide_command_bar_when_is_not_received_mail" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.initialize_should_show_command_bar_when_is_received_mail" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.should_not_forward_same_contact_note_more_than_once" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ForwardContactNoteOutlookFormPresenterTest.should_notify_error_when_no_contact_with_email_matching_from_my_contacts" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_apply_name_template" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_escape_to_html_tag_if_htmlbody" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_insert_template_after_body_tag_in_font_tag" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_insert_template_between_font_tags" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_not_change_message_if_it_does_not_contain_personalisation_markers" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_not_match_any_p_tags_before_template" executed="False">
                                    <reason>
                                      <message><![CDATA[Not working yet -- currently regex will include any <div> tags before the template]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_remove_template_from_message" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.HtmlMailTemplateTest.should_replace_existing_template_with_new_template" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest" success="True" time="1.594" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.AddContactNote_should_be_cancelled_if_some_recipients_are_invalid" executed="True" success="True" time="1.094" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.AddContactNote_should_return_false_when_failed_to_add_contact_note" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.AddContactNote_should_return_true_when_succeed_adding_contact_note" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.click_add_contact_note_button_should_search_contact_and_set_view_invisible_and_notify_error_and_cancel_event_if_search_failed" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.click_add_contact_note_button_should_search_contact_and_set_view_visible_if_search_succeed" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.click_discard_contact_note_should_set_view_invisible" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.Initialize_test" executed="True" success="True" time="0.500" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.should_error_message_if_no_recipients_entered" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.ToggleUIBasedOnContactsCount_should_HideContactNoteSubPanel_when_no_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.NewContactNoteOutlookFormPresenterTest.ToggleUIBasedOnContactsCount_should_ShowContactNoteSubPanel_when_contacts_is_not_empty" executed="True" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest" success="True" time="0.969" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest.ConvertStatusStringToPeriods_should_merge_sequenced_busy_periods_together" executed="True" success="True" time="0.109" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest.ConvertStatusStringToPeriods_should_return_all_busy_periods" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest.ConvertStatusStringToPeriods_should_return_empty_list_when_all_zero" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest.ConvertStatusStringToPeriods_should_return_one_period_when_all_one" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest.Create_test" executed="True" success="True" time="0.594" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookApplicationTest.GetOneDaySchedule_should_return_null_when_failed_to_get_from_exchange" executed="True" success="True" time="0.266" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormContainerTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormContainerTest.should_add_all_control_on_element_host" executed="False">
                                    <reason>
                                      <message><![CDATA[michael - will change the implementation.]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormContainerTest.should_add_control_on_element_host" executed="False">
                                    <reason>
                                      <message><![CDATA[michael - will change the implementation.]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormFactoryTest" success="True" time="1.250" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormFactoryTest.should_create_ForwardContactNoteOutlookForm_when_MailItemType_is_FORWARD" executed="True" success="True" time="0.656" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormFactoryTest.should_create_NewEmailContactNoteOutlookForm_when_MailItemType_is_NEW" executed="True" success="True" time="0.297" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookFormFactoryTest.should_create_ReplyContactNoteOutlookForm_when_MailItemType_is_REPLY" executed="True" success="True" time="0.297" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.ReadContactNoteMailItem_should_ReadContactNoteMailItemCreatedFromConnect" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.ReadContactNoteMailItem_should_ReadContactNoteMailItemCreatedFromOutlook" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.ReadContactNoteMailItemCreatedFromConnect_should_load_saved_state" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.ReadContactNoteMailItemCreatedFromOutlook_should_return_ForwardContactNoteMailItem_when_is_received_mail" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.ReadContactNoteMailItemCreatedFromOutlook_should_return_NewContactNoteMailItem_when_is_received_mail" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.SaveState_LoadState_test" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.WriteNewContactNoteMailItem_test" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookItemFactoryTest.WriteReplyContactNoteMailItem_test" executed="False">
                                    <reason>
                                      <message><![CDATA[Needs to be fixed for extracted IOutlookApplication]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest" success="True" time="0.703" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_add_attachments_to_MailItem" executed="True" success="True" time="0.609" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_insert_template_if_recipientsCount_is_more_than_one" executed="True" success="True" time="0.094" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_not_insert_template_if_email_is_not_created_by_connect" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_not_insert_template_if_recipientsCount_is_not_more_than_one" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_return_Body_if_richtext_email" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_return_htmlBody_if_html_email" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_return_textBody_if_text_email" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_set_htmlBody_if_html_email" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_set_textBody_if_rtf_email" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMailItemTest.should_set_textBody_if_text_email" executed="True" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMeetingTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.OutlookMeetingTest.Recipients_set_test" executed="True" success="True" time="0.016" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.PersonalizeButtonPresenterTest" success="True" time="0.250" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.PersonalizeButtonPresenterTest.should_insert_template_when" executed="True" success="True" time="0.250" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.ReplyContactNoteOutlookFormPresenterTest" success="True" time="1.344" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ReplyContactNoteOutlookFormPresenterTest.add_contact_note_should_save_contact_note_and_send_non_personalized_email" executed="True" success="True" time="1.344" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ReplyContactNoteOutlookFormPresenterTest.Initialize_test" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.ReplyContactNoteOutlookFormPresenterTest.should_show_attach_research_report_window" executed="True" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Outlook.SenderTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Outlook.SenderTest.should_extract_userId_from_ldap_address" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Macquarie.Evolve.Test.Unit.Server" success="True" time="27.625" asserts="0">
                            <results>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Config" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Config.ServerConfigTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Config.ServerConfigTest.test_should_have_some_properties_settable" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Config.ServerConfigTest.test_should_process_server_config_section_correctly" executed="True" success="True" time="0.000" asserts="11" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Config.ServerConfigTest.test_should_use_defauls_if_not_set" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess" success="True" time="3.516" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.ContactListRepositoryTest" success="True" time="1.125" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.ContactListRepositoryTest.CopyContacts_should_leave_a_copy_of_the_contact_on_the_source_list" executed="True" success="True" time="1.125" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.ContactRepositoryTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.ContactRepositoryTest.should_extract_organisation_name_from_brackets" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.ContactRepositoryTest.should_get_organisation_name_from_full_name_with_org" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.ContactRepositoryTest.should_return_empty_string_if_organisation_name_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.DataRecordAdapterTest" success="True" time="0.156" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.DataRecordAdapterTest.should_parse_enum_of_different_case" executed="True" success="True" time="0.156" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.EvolveInterceptorTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.EvolveInterceptorTest.should_update_on_create_timestamp" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.EvolveInterceptorTest.should_update_only_evolve_entities_timestamp" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.EvolveInterceptorTest.should_update_only_evolve_entities_timestamp_on_create" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.EvolveInterceptorTest.should_update_timestamp" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.MeetingRepositoryTest" success="True" time="0.250" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.MeetingRepositoryTest.ConvertMeetingDTO_should_convert_DTO_to_Meeting_object" executed="True" success="True" time="0.250" asserts="16" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.MeetingRepositoryTest.SaveMeeting_test" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryFactoryTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryFactoryTest.create_interest_repository" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryFactoryTest.should_throw_exception_if_instance_type_cannot_be_found" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryFactoryTest.string_remove_should_remove_first_character" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryProviderTest" success="True" time="1.188" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryProviderTest.should_provide_repo" executed="True" success="True" time="1.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryProviderTest.should_provide_transactional_repo" executed="True" success="True" time="0.188" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.RepositoryTest.should_convert_to_utc_time_if_type_is_date_time" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.DataAccess.UserRepositoryTest" success="True" time="0.750" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.UserRepositoryTest.should_remove_duplicated_contact_note" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.DataAccess.UserRepositoryTest.should_use_server_config_to_get_normal_alert_age" executed="True" success="True" time="0.750" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain" success="True" time="0.422" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.hasChildren_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.IsRegion_test" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_be_able_to_get_priority_of_account" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_be_able_to_get_rank_of_account_in_priority_list" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_create_root_with_proper_name" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_get_account_directory_path" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_get_account_priority" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_get_middle_decimal_between_previousRankNo_and_nextRankNo_when_both_of_them_are_available" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_get_parent_business_unit" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_ignore_removal_if_account_not_found" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_remove_priority_of_account" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_return_null_when_can_not_find_priority_of_account" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_use_nextRankNo_plus_one_as_reoderedRankNo_when_nextRankNo_is_DecimalMaxValue" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.AccountDirectoryTest.should_use_previousRankNo_subtract_one_as_reoderedRankNo_when_previousRankNo_is_DecimalMinValue" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListsTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListsTest.ContactListsWithPreference_should_set_alertPreference_info" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest" success="True" time="0.031" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.insert_contact_should_generate_proper_priority_if_added_to_middle" executed="True" success="True" time="0.016" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.IsSameNameAs_test" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_be_able_clone_contact_list_to_user" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_be_able_to_add_contact_detail_as_highest_priority" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_enumerate_by_contact_details" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_get_contact_ids_ordered_by_displayorder" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_insert_at_first_if_first_contact" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_insert_at_first_if_more_contacts_exist" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_insert_multiple_contacts" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.should_update_display_order_when_contact_already_in_my_contact_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.sorted_set_test_int" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListTest.sorted_set_test_with_object" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListWithNumberTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactListWithNumberTest.should_get_contact_details" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteRepositoryUnitTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteRepositoryUnitTest.IsOnlyContactNoteInThread_should_return_false_when_thread_have_contact_notes" executed="True" success="True" time="0.281" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteRepositoryUnitTest.IsOnlyContactNoteInThread_should_return_true_when_thread_only_have_one_contact_note" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteRepositoryUnitTest.should_get_contact_list_with_number_through_named_query_with_proper_parameters" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteRepositoryUnitTest.should_get_contact_note_count_of_thread" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest.should_add_additional_recipient_based_on_existing_recipients" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest.should_get_action_reply_statistics" executed="True" success="True" time="0.016" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest.should_get_correct_concrete_contact_note_based_on_type" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest.should_ignore_additionalRecipient_when_he_is_already_in_actionBy_recipients_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest.should_not_create_tag_alert_if_already_contains_any_alert_for_the_user" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactNoteTest.should_remove_tag_alert_after_adding_alert_when_adding_recipient" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.general_fax_number_should_be_inherited_from_organisation_when_available" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.general_fax_number_should_be_inherited_from_organisation_when_not_available" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.general_telephone_number_should_be_inherited_from_organisation_when_available" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.general_telephone_number_should_be_inherited_from_organisation_when_not_available" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.GetCallTargetFor_returns_zero_if_user_not_found" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.GetCallTargetFor_should_return_CallTarget_for_given_user" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.office_address_should_be_inherited_from_organisation_when_not_available" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.office_address_should_not_be_inherited_from_organisation_when_available" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.should_be_able_to_add_postal_address" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.should_create_client_note_for_contact" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.should_find_private_client_notes_by_author" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ContactTest.should_get_all_shared_client_notes" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.DateTimeUserTypeTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.DateTimeUserTypeTest.should_be_able_to_convert_to_local_time" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.DateTimeUserTypeTest.should_be_able_to_convert_to_local_time_even_if_kind_is_unspecified" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.DateTimeUserTypeTest.should_be_able_to_convert_to_utc_time" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.CanBeMyChild_should_return_false_when_child_organisation_is_already_the_parent" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.CanBeMyChild_should_return_false_when_they_are_same_organisation" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.CanBeMyChild_should_return_true_when_child_organisation_not_the_parent" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.general_fax_should_be_null_when_not_available_in_all_levels" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.general_fax_telephone_number_should_be_inherited_from_parent_organisation_when_not_available" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.general_fax_telephone_number_should_not_be_inherited_from_parent_organisation_when_available" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.general_telephone_number_should_be_inherited_from_parent_organisation_when_not_available" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.general_telephone_number_should_be_null_when_not_available_in_all_levels" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.general_telephone_number_should_not_be_inherited_from_parent_organisation_when_available" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.office_address_should_be_inherited_from_parent_organisation_when_not_availalbe" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.office_address_should_be_null_when_not_available_in_all_levels" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.OrganisationTest.office_address_should_not_be_inherited_from_parent_organisation_when_available" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.RegionSectorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.RegionSectorTest.should_get_all_possible_regionsector_covering_this" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_add_an_item_for_each_contact" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_add_call_target_as_no_longer_serviced_if_not_in_contact_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_add_item_for_each_contact_user_pair" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_have_actual_calls_from_contact_note_details" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_have_an_item_for_each_monthly_target" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_have_not_serviced_entries_when_not_serviced_and_target_is_zero" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_have_not_serviced_entries_when_not_serviced_but_sent_contact_note" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_not_add_duplicate_entries" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_not_be_no_longer_serviced_if_in_contact_list" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.ServiceCoverageBuilderTest.should_not_remove_one_after_add_another_call_target" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.TelephoneNumbersTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.TelephoneNumbersTest.Contains_type_should_return_false_if_does_not_contain_type" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.TelephoneNumbersTest.Contains_type_should_return_true_if_contains_type" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.HasAlertPreference_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.HasContactInSameOrganisation_test_when_return_false" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.HasContactInSameOrganisation_test_when_return_true" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.should_add_and_return_default_contact_list" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.should_find_group_by_name" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.should_return_null_when_not_found" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.should_return_true_when_user_has_same_name_contactList" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.should_send_alerts_on_tag_group_for_a_specific_tag" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.should_set_display_order_when_adding_new_contact_list" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Domain.UserTest.ShouldOnlySeeAlertsThatHaveNotBeenRead" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.EvolveClientExceptionTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.EvolveClientExceptionTest.should_generate_fault_exception_based_on_exception_data_if_exists" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.EvolveClientExceptionTest.should_generate_fault_exception_based_on_this_exception_if_exception_data_not_exists" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.EvolveServiceServerTest" success="True" time="0.859" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.EvolveServiceServerTest.should_Create_transactional_repository_for_handlers_needing_transaction" executed="True" success="True" time="0.859" asserts="0" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.EvolveServiceServerTest.should_handle_stale_exceptions_correctly" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler" success="True" time="18.719" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddAccountDirectoryHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddAccountDirectoryHandlerTest.should_add_new_sub_directory" executed="True" success="True" time="0.016" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddAccountToPriorityListHandlerTest" success="True" time="0.453" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddAccountToPriorityListHandlerTest.should_set_response_to_failure_when_add_failed" executed="True" success="True" time="0.453" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddAccountToPriorityListHandlerTest.should_set_response_to_success_when_add_succeed" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddCallDetailsHandlerTest" success="True" time="0.500" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddCallDetailsHandlerTest.should_add_CallDetail" executed="True" success="True" time="0.500" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddClientNoteHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddClientNoteHandlerTest.should_add_personal_client_notes" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddClientNoteHandlerTest.should_add_shared_client_notes" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactHandlerTest" success="True" time="0.406" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactHandlerTest.should_create_contact_by_using_contact_repository" executed="True" success="True" time="0.406" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactHandlerWithAuditingTest" success="True" time="0.281" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactHandlerWithAuditingTest.should_do_audit_when_execute_handler" executed="True" success="True" time="0.281" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactListHandlerTest" success="True" time="1.844" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactListHandlerTest.should_add_contact_list_for_user" executed="True" success="True" time="1.844" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactNoteCommandExecutorTest" success="True" time="1.063" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactNoteCommandExecutorTest.execute_test" executed="True" success="True" time="1.047" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactNoteCommandExecutorTest.NeedIncreateContactedTimes_should_return_false_if_meeting_start_time_fit_not_in_frequency" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactNoteCommandExecutorTest.NeedIncreateContactedTimes_should_return_ture_if_meeting_start_time_fit_in_frequency" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactsToMyContactsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactsToMyContactsHandlerTest.should_add_to_correct_contact_list" executed="True" success="True" time="0.016" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactsToMyContactsHandlerWithAuditingTest" success="True" time="0.281" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddContactsToMyContactsHandlerWithAuditingTest.should_audit_adding_of_contact_after_call_internal_handler" executed="True" success="True" time="0.281" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForContactHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForContactHandlerTest.should_save_inerest_and_delete_covered_interetes" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForContactHandlerTest.should_save_inerest_and_delete_covered_interetes_when_convered_interests_is_not_empty" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForContactHandlerWithAuditingTest" success="True" time="0.594" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForContactHandlerWithAuditingTest.should_audit_add_and_remove_operations_after_call_internal_handler_with_covered_interest" executed="True" success="True" time="0.594" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForContactHandlerWithAuditingTest.should_audit_add_operation_after_call_internal_handler_without_covered_interests" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForUserHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddInterestForUserHandlerTest.should_save_interest_and_delete_covered_interests" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddMeetingHandlerTest" success="True" time="0.250" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddMeetingHandlerTest.should_save_meeting" executed="True" success="True" time="0.250" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddMyInterestHandlerWithAuditingTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddMyInterestHandlerWithAuditingTest.should_audit_add_and_remove_operations_after_call_internal_handler_with_covered_interests" executed="True" success="True" time="0.297" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddMyInterestHandlerWithAuditingTest.should_audit_adding_operation_after_call_internal_handler_without_covered_interests" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.AddStockInterestForUserHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.AddStockInterestForUserHandlerTest.should_load_stock_update_user_with_new_stock_interest" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.BatchedHandlerTest" success="True" time="0.281" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.BatchedHandlerTest.should_execute_all_commands" executed="True" success="True" time="0.281" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.BatchedHandlerTest.should_execute_no_commands_when_none_passed" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.BatchedHandlerTest.should_handle_two_batched_commands_of_the_same_type" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.BatchedHandlerTest.should_sequence_all_responses" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CancelMeetingHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CancelMeetingHandlerTest.should_cancel_meeting" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CheckForwardableHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CheckForwardableHandlerTest.should_forwardable_if_has_no_contact_note" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CheckForwardableHandlerTest.should_not_forwardable_if_contact_not_found" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CheckForwardableHandlerTest.should_not_forwardable_if_has_contact_note" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CloseAlertHandlerTest" success="True" time="0.313" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CloseAlertHandlerTest.Close_test" executed="True" success="True" time="0.313" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CopyContactListsToUsersHandlerTest" success="True" time="0.406" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CopyContactListsToUsersHandlerTest.should_convert_command_to_arrays" executed="True" success="True" time="0.406" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CopyContactsHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CopyContactsHandlerTest.should_delegate_moving_to_contact_list_repository" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CreateOrganisationHandlerTest" success="True" time="0.422" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CreateOrganisationHandlerTest.should_create_organisation_by_dto" executed="True" success="True" time="0.422" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.CreateOrganisationHandlerWithAuditingTest" success="True" time="0.563" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.CreateOrganisationHandlerWithAuditingTest.Execute_test" executed="True" success="True" time="0.563" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.DeleteRemoteFileHandlerTest" success="True" time="0.375" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.DeleteRemoteFileHandlerTest.execute_test" executed="True" success="True" time="0.375" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAccountDirectoryHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAccountDirectoryHandlerTest.should_load_account_directory" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAllCountriesHandlerTest" success="True" time="0.344" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAllCountriesHandlerTest.execute_test" executed="True" success="True" time="0.344" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAllRecipientsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAllRecipientsHandlerTest.execute_test" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAllStocksHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAllStocksHandlerTest.should_get_all_stock_and_convert_to_DTO" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAuditLogHandlerTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetAuditLogHandlerTest.execute_should_return_all_detail_audit_log_dtos" executed="True" success="True" time="0.297" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetClientMeetingsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetClientMeetingsHandlerTest.Should_get_client_future_meetings_and_convert_to_meeting_dtos_when_isFuture" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetClientMeetingsHandlerTest.Should_get_client_past_meetings_and_convert_to_meeting_dtos_when_not_isFuture" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetClientNotesHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetClientNotesHandlerTest.should_get_personal_and_shared_client_notes" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactHistoryHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactHistoryHandlerTest.should_get_contact_note_history" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactInterestsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactInterestsHandlerTest.should_load_contact_interest" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactNoteHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactNoteHandlerTest.should_get_contact_note_with_limited_contacts" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactNoteSubtypesHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactNoteSubtypesHandlerTest.test_should_delegate_to_contact_note_repository_and_add_extra_one_with_empty_id_description" executed="True" success="True" time="0.016" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactNoteThreadHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactNoteThreadHandlerTest.should_get_contact_notes_of_thread" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactScheduleHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactScheduleHandlerTest.should_get_client_meetings_and_return_to_schedule" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactsHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactsHandlerTest.should_find_contacts_by_contact_ids_and_convert_to_contact_dto" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactWithoutInheritanceHandlerTest" success="True" time="1.578" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetContactWithoutInheritanceHandlerTest.should_load_and_convert" executed="True" success="True" time="1.563" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetCurrentUserHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetCurrentUserHandlerTest.should_get_current_user" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetCurrentUserOutlookMeetingEntryIdsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetCurrentUserOutlookMeetingEntryIdsHandlerTest.execute_test" executed="True" success="True" time="0.016" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetFeatureSetHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetFeatureSetHandlerTest.should_execute_command" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetFileNamesHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetFileNamesHandlerTest.execute_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMeetingByOutlookEntryIdHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMeetingByOutlookEntryIdHandlerTest.Execute_return_response_with_null_when_not_found_meeting" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMeetingByOutlookEntryIdHandlerTest.Execute_should_convert_to_dto_when_found_meeting" executed="True" success="True" time="0.016" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyAccountsHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyAccountsHandlerTest.should_return_distinct_accounts_for_current_user" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyAlertsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyAlertsHandlerTest.should_convert_all_kinds_of_alerts_properly" executed="True" success="True" time="0.016" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyContactInterestsHandlerTest" success="True" time="0.578" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyContactInterestsHandlerTest.should_get_no_interests_when_no_contacts" executed="True" success="True" time="0.578" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyContactsHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetMyContactsHandlerTest.should_load_my_contact_lists" executed="False">
                                        <reason>
                                          <message><![CDATA[Not a good test - we need to rewrite this properly]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetNotRepliedContactNotesHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetNotRepliedContactNotesHandlerTest.should_get_not_replied_action_alerts" executed="True" success="True" time="0.016" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetOrganisationDetailHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetOrganisationDetailHandlerTest.Execute_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetOrgnisationByFullNameHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetOrgnisationByFullNameHandlerTest.should_get_organisation_and_convert_to_dto_by_full_name" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetPanelReviewDetailHandlerTest" success="True" time="0.344" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetPanelReviewDetailHandlerTest.Execute_test" executed="True" success="True" time="0.344" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetPanelReviewsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetPanelReviewsHandlerTest.Execute_test" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetProvincesByCountryIdHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetProvincesByCountryIdHandlerTest.execute_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetRegionAccountsOfAccountDirectoryHandlerTest" success="True" time="0.719" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetRegionAccountsOfAccountDirectoryHandlerTest.should_load_account_directory_with_account_priority_list_for_given_directory" executed="True" success="True" time="0.719" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetServiceCoverageUsersHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetServiceCoverageUsersHandlerTest.should_return_service_coveraged_users" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetServiceCoverageUsersHandlerTest.should_return_service_coveraged_users_ignoring_current_user" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUpdatedClientContactHistoryHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUpdatedClientContactHistoryHandlerTest.should_load_delta_changes_by_last_updated_time" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUpdatedUserContactHistoryHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUpdatedUserContactHistoryHandlerTest.should_load_delta_changes_by_last_updated_time" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserContactHistoryHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserContactHistoryHandlerTest.should_get_contact_note_history" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserHandlerTest.should_get_current_user" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserMeetingsHandlerTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserMeetingsHandlerTest.GetMeetings_should_GetUserFutureMeetings_when_IsFuture" executed="True" success="True" time="0.297" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserMeetingsHandlerTest.GetMeetings_should_GetUserPastMeetings_when_not_IsFuture" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.GetUserMeetingsHandlerTest.Should_get_user_future_meetings_and_convert_to_meeting_dtos" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.HasAddedMeetingContactNoteHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.HasAddedMeetingContactNoteHandlerTest.should_delegate_to_contact_note_repository" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.IsMeetingDeletedHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.IsMeetingDeletedHandlerTest.Execute_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveAccountDirectoryHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveAccountDirectoryHandlerTest.should_remove_account_directory" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveAccountsFromAccountDirectoryHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveAccountsFromAccountDirectoryHandlerTest.should_return_latest_account_directory_version" executed="True" success="True" time="0.016" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactFromMyContactsHandlerWithAuditingTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactFromMyContactsHandlerWithAuditingTest.should_audit_each_contact_removement_after_invoke_handler" executed="True" success="True" time="0.297" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactListHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactListHandlerTest.should_remove_alert_preference_of_last_contact_in_target_list" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactListHandlerTest.should_remove_contact_list_with_specified_id" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactListHandlerWithAuditingTest" success="True" time="0.328" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveContactListHandlerWithAuditingTest.should_audit_all_contacts_within_removed_contact_list" executed="True" success="True" time="0.313" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveInterestsForContactHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveInterestsForContactHandlerTest.should_be_able_to_remove_interests_for_contact" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveInterestsForContactHandlerWithAuditingTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveInterestsForContactHandlerWithAuditingTest.should_audit_remove_operations_after_handler_removed_interests" executed="True" success="True" time="0.297" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveMyInterestsHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveMyInterestsHandlerTest.should_be_able_to_delete_my_interests" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveMyInterestsHandlerWithAuditingTest" success="True" time="0.297" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveMyInterestsHandlerWithAuditingTest.should_audit_remove_operation_after_call_internal_handler" executed="True" success="True" time="0.297" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveMyStockInterestsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RemoveMyStockInterestsHandlerTest.Execute_should_load_user_remove_interest_from_users_interest_list_save_user" executed="True" success="True" time="0.016" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RenameAccountDirectoryHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RenameAccountDirectoryHandlerTest.should_rename_account_directory" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RenameMyContactListHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RenameMyContactListHandlerTest.should_rename_my_contact_list" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.ReorderRegionAccountHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.ReorderRegionAccountHandlerTest.should_return_latest_version" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.RequestLockHandlerTest" success="True" time="0.359" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RequestLockHandlerTest.should_return_request_lock_result" executed="True" success="True" time="0.359" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.RequestLockHandlerTest.should_support_release_lock_command" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SaveContactListOrderHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SaveContactListOrderHandlerTest.handler_test" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SaveMonthlyCallTargetsHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SaveMonthlyCallTargetsHandlerTest.should_1save_montyly_call_targets" executed="True" success="True" time="0.016" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SavePanelReviewHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SavePanelReviewHandlerTest.SavePanelReview_test" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactByFullNameHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactByFullNameHandlerTest.should_handle_command_and_return_contact_dto" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactByFullNameHandlerTest.should_handle_command_and_return_emtpy_response_when_loaded_contact_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactsByEmailAddressesHandlerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactsByEmailAddressesHandlerTest.should_return_empty_result_array_directly_when_email_address_array_is_empty" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactsByEmailAddressesHandlerTest.should_return_found_contacts_by_email_addresses" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactsInOrganisationHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchContactsInOrganisationHandlerTest.handler_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchOrgnisationByNameHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SearchOrgnisationByNameHandlerTest.should_using_orgnisation_repository_get_orgnisations_and_converter_to_dto" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SendPersonalisedEmailsHandlerTest" success="True" time="3.547" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SendPersonalisedEmailsHandlerTest.Execute_test" executed="True" success="True" time="3.547" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.SetAccountLeadsHandlerTest" success="True" time="0.406" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SetAccountLeadsHandlerTest.should_not_update_leads_if_cannot_get_lock" executed="True" success="True" time="0.375" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.SetAccountLeadsHandlerTest.should_request_lock_before_set_account_leads" executed="True" success="True" time="0.031" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.TagGroupBuilderTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.TagGroupBuilderTest.should_be_able_to_build_tag_group" executed="True" success="True" time="0.016" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.TagGroupBuilderTest.should_build_nothing_for_no_meaning_tag_group" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateContactHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateContactHandlerTest.should_delegate_to_contact_repository" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateContactHandlerWithAuditingTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateContactHandlerWithAuditingTest.execute_test" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateMeetingHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateMeetingHandlerTest.Execute_test" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateOrganisationHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateOrganisationHandlerTest.should_update_organisation_by_dto" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateOrganisationHandlerWithAuditingTest" success="True" time="0.328" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateOrganisationHandlerWithAuditingTest.should_audit_if_successful" executed="True" success="True" time="0.328" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateOrganisationHandlerWithAuditingTest.should_not_audit_if_invalid_parent_org" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdateOrganisationHandlerWithAuditingTest.should_not_audit_if_version_conflicted" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdatePanelReviewHandlerTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Handler.UpdatePanelReviewHandlerTest.execute_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Install" success="True" time="0.344" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Install.EvolveServerInstallerTest" success="True" time="0.344" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Install.EvolveServerInstallerTest.should_handle_port_command_line_parameter" executed="True" success="True" time="0.344" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Install.EvolveServerInstallerTest.should_set_ldap_command_line_parameter" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Logging" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Logging.CounterLogAppenderTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Logging.CounterLogAppenderTest.should_increment_counter_with_each_call" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Logging.CounterLogAppenderTest.should_initialize_counter_to_zero_if_it_has_not_already_been_initialized" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail" success="True" time="0.844" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.EmailRecipientsTest" success="True" time="0.328" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.EmailRecipientsTest.resolve_test" executed="True" success="True" time="0.328" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.ExchangeRecipientStrategyTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.ExchangeRecipientStrategyTest.should_resolve_email_address_from_ldap" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.HtmlMailBodyTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.HtmlMailBodyTest.should_apply_personalisation" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.HtmlMailBodyTest.should_remove_personalisation_marker" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.MailBuilderTest" success="True" time="0.047" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.MailBuilderTest.should_build_embedded_image_as_linked_resource" executed="True" success="True" time="0.031" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.MailBuilderTest.should_build_mail_with_multiple_to_recipients" executed="True" success="True" time="0.016" asserts="10" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.MailBuilderTest.should_build_mail_with_one_to_recipient" executed="True" success="True" time="0.000" asserts="9" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest" success="True" time="0.422" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest.should_add_contact_note_if_contact_note_dto_is_not_null" executed="True" success="True" time="0.406" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest.should_exclude_contact_from_contact_note_if_failed_to_send_email_to_him" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest.should_not_add_contact_note_if_no_contacts_have_been_sent_email" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest.should_send_personalised_email_for_emails_with_exact_one_contact" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest.should_send_unpersonalised_email_for_emails_shared_by_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.PersonalisedEmailTest.should_send_unpersonalised_email_for_emails_with_no_contacts" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.RecipientContactsTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.RecipientContactsTest.GetToRecipients_should_recognize_email_shared_by_multiple_contacts" executed="True" success="True" time="0.016" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.RecipientContactsTest.GetToRecipients_should_recognize_email_with_one_matching_contact" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.RecipientContactsTest.GetToRecipients_should_recognize_email_without_contact" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.RecipientContactsTest.GetToRecipients_test_with_all_scenarios" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.RecipientContactsTest.should_return_all_emails" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest.should_send_email" executed="False">
                                        <reason>
                                          <message><![CDATA[hits the real exchange server]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest.should_send_embedded_image" executed="False">
                                        <reason>
                                          <message><![CDATA[hits the real exchange server]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest.should_send_html_email_correctly" executed="False">
                                        <reason>
                                          <message><![CDATA[hits the real exchange server]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest.should_send_multiple_attachments" executed="False">
                                        <reason>
                                          <message><![CDATA[hits the real exchange server]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest.should_send_single_attachment" executed="False">
                                        <reason>
                                          <message><![CDATA[hits the real exchange server]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPEmailTest.should_set_attachment_name_correctly" executed="False">
                                        <reason>
                                          <message><![CDATA[hits the real exchange server]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPRecipientStrategyTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SMTPRecipientStrategyTest.resolve_should_simply_return_its_address" executed="True" success="True" time="0.016" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest.body_should_contain_summary_for_email_failure" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest.body_should_contain_summary_for_emails_with_multiple_contacts_matched" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest.body_should_contain_summary_for_emails_with_one_contact_matched" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest.body_should_contain_summary_for_emails_without_contacts_matched" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest.test_body_with_all_scenarios" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Mail.SummaryMailBodyTest.test_body_with_all_scenarios_in_html_format" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.PicoBasedCommandManagerTest" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.PicoBasedCommandManagerTest.should_create_batch_command_handler" executed="True" success="True" time="0.063" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.PicoBasedCommandManagerTest.should_get_handler_with_auditing_if_exists" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.PicoBasedCommandManagerTest.should_get_plain_handler_if_no_handlerWithAuditing_exists" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.PicoBasedCommandManagerTest.should_have_handlers_for_all_commands" executed="True" success="True" time="0.016" asserts="119" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.ContactOperationAuditorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.ContactOperationAuditorTest.AduitAddContactOperation_test" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.FileTransferPurgeTaskTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.FileTransferPurgeTaskTest.should_purge_personalisation_files_when_run" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.InterestOperationAuditorTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.InterestOperationAuditorTest.should_save_deleted_interests_history" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.InterestOperationAuditorTest.should_save_party_interest_history" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_give_lock_if_old_lock_is_expired" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_give_lock_if_old_lock_is_released" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_give_me_a_lock" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_give_me_a_lock_if_i_already_have_one" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_not_give_someone_else_a_lock_when_i_have_one" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_only_allow_the_locks_owner_to_release_the_lock" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_tell_me_no_lock_is_there_if_the_lock_is_expired" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_tell_me_when_noone_has_a_lock" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.LockingServiceTest.should_tell_me_who_has_a_lock" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.NotRepliedActionAlertsCheckerTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.NotRepliedActionAlertsCheckerTest.should_send_one_syetem_alert_for_two_not_replied_alerts" executed="True" success="True" time="0.016" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.NotRepliedActionAlertsCheckerTest.should_set_HasSystemAlertSent_on_alerts" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.UpdateOperationAuditorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.UpdateOperationAuditorTest.Audit_test" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Service.UserContactListMemberOperationAuditorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.UserContactListMemberOperationAuditorTest.should_save_contact_list_change_operation" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Service.UserContactListMemberOperationAuditorTest.should_save_contact_list_change_operation_with_list_owner" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.SetContactFrequencyHandlerTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Server.SetContactFrequencyHandlerTest.should_update_current_user_by_specified_frequency" executed="True" success="True" time="0.016" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util" success="True" time="2.750" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.CompositeContactNoteInfoExtractorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.CompositeContactNoteInfoExtractorTest.should_be_aware_of_execution_sequence" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.CompositeContactNoteInfoExtractorTest.should_contains_only_5_extractors" executed="True" success="True" time="0.000" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.ContacctNoteTagGroupInfoExtractorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContacctNoteTagGroupInfoExtractorTest.should_build_null_tag_group_info_when_no_tag_info_exists_in_DTO" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContacctNoteTagGroupInfoExtractorTest.should_build_null_tag_group_info_when_tag_info_exists_in_DTO" executed="True" success="True" time="0.000" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteBasicInfoExtractorTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteBasicInfoExtractorTest.Extract_test_when_this_contact_note_in_the_thread" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteBasicInfoExtractorTest.Extract_test_when_this_contact_note_is_the_first_one_in_the_thread" executed="True" success="True" time="0.016" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteContactsInfoExtractorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteContactsInfoExtractorTest.should_copy_all_contacts_from_dto_onto_note" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteContactsInfoExtractorTest.should_copy_contacts_from_parent_when_it_is_a_reply" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteInputRecipientsInfoExtractorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteInputRecipientsInfoExtractorTest.should_add_an_alert_for_parent_contact_note_sender" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteInputRecipientsInfoExtractorTest.should_get_action_and_additional_recipients_info" executed="True" success="True" time="0.000" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteServiceCoverageRecipientsInfoExtractorTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ContactNoteServiceCoverageRecipientsInfoExtractorTest.Extract_test_when_selected_stock_interests" executed="True" success="True" time="0.016" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest" success="True" time="2.531" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.CreateDetailedContactInfo_test" executed="True" success="True" time="0.859" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_be_able_to_convert_tag_alert_to_alert_dto" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_be_invalid_to_access_first_contact_full_name_or_org_name_on_client_contact_history_item_dto" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_action_sent_out_item_dto_from_contact_note" executed="True" success="True" time="0.016" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_additional_recipients_properly" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_contact_list_with_number_to_dto" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_contact_note_subtype_when_not_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_contact_note_with_stocks" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_ContactNote_to_LastContactInfoDTO" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_email_reveived_time" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_last_contact_time_when_exists" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_only_first_line_of_note_for_action_sent_out_item_dto" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_organisation_array_to_organisation_dtos" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_tags_to_tag_details_when_tag_has_no_currency_or_amount_info" executed="True" success="True" time="0.016" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_to_account_priority_DTOs" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_to_contact_history_item" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_to_contact_list_name_dto" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_to_region_account_dto" executed="True" success="True" time="0.000" asserts="14" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_to_region_account_DTOs" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_to_user_contact_history_item" executed="True" success="True" time="0.000" asserts="10" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_user_to_user_dto_when_that_user_belongs_to_some_group" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_user_to_user_dto_when_that_user_doesnot_belong_to_some_group" executed="True" success="True" time="0.016" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_convert_users_to_recipient_dtos" executed="True" success="True" time="0.000" asserts="11" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_copy_postal_addresses_with_inherited_when_converting_detail_contact_info" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_get_detail_contact_info_from_contact" executed="True" success="True" time="0.000" asserts="13" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_get_first_line_of_striped_note_if_the_first_line_of_the_note_is_no_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_get_first_line_of_striped_note_with_no_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_get_striped_note_with_no_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_get_subject_plus_contact_note_if_its_email_contact_note" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_not_convert_contact_note_subtype_when_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_not_convert_disabled_contact_while_converting_to_my_contacts" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_parse_IsOnlyOneInTheThread_property_correctly" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_parse_replied_and_not_replied_action_by_users_for_contact_note_dto" executed="True" success="True" time="1.516" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_return_unmodified_note_if_length_less_than_25" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_use_stripped_subject_if_its_email_contact_note_more_than_25_characters" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_use_subject_as_note_if_its_email_contact_note_when_converting_contact_history_item" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_use_subject_plus_contact_note_as_note_if_its_email_contact_note_when_converting_user_contact_history_item" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.should_use_subject_plus_note_if_its_email_contact_note" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.StripedNote_should_return_empty_string_if_contactnote_doesnot_contain_note_or_subject" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.test_convert_tags_to_tag_details" executed="True" success="True" time="0.000" asserts="21" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToAccountDirectoryDTO_test" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToAlertDTO_test_when_alert_type_is_not_System" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToAlertDTO_test_when_alert_type_is_System" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicContactInfo_test" executed="True" success="True" time="0.016" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicContactInfos_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicUserInfo_should_convert_User_into_BasicUserInfo" executed="True" success="True" time="0.000" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicUserInfo_should_convert_User_list_into_BasicUserInfo_list" executed="True" success="True" time="0.000" asserts="10" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicUserInfo_test" executed="True" success="True" time="0.000" asserts="14" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicUserInfo_test_when_user_doesnot_have_primary_email" executed="True" success="True" time="0.000" asserts="8" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToBasicUserInfos_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToContactDTO_test" executed="True" success="True" time="0.016" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToContactDTOs_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToContactHistoryItem_convert_subtype_to_description_string_if_available" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToContactHistoryItem_convert_subtype_to_null_if_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToContactNoteDTOWithContacts_test" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToContactNoteDTOWithoutContacts_test_when_it_is_the_only_one_in_thread" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToCountryDTOs_test" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToDetailedAuditLogDTO_test" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToDetailedAuditLogDTOs_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToDetailedContactInfo_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToDetailedContactInfoWithoutInheritance_test" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToEmailAddressesDTO_Test" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToEmailRecipients_test" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToMeetingItemDTOS_should_convert_meetings_to_meeting_item_dtos" executed="True" success="True" time="0.000" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToMyContacts_should_ignore_disabled_contact" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToMyContacts_test" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToOrganisationDetailDTO_should_return_organisation_detail_when_organisation_is_not_null" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToOrganizationDTO_should_return_null_if_organization_is_null" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToOrganizationDTO_test_when_organization_is_not_null" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToOutlookMeetingEntryIds_test" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToPanelReviewListItemDTO_test" executed="True" success="True" time="0.016" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToPanelReviewListItemDTOs_test" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToPeriods_test" executed="True" success="True" time="0.000" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToPersonalisedEmail_test" executed="True" success="True" time="0.000" asserts="9" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToPostalAddressDTO_test" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToPostalAddressesDTO_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToProvinceDTOs_test" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToRetrievedMeetingDTO_should_convert_meeting_to_retrieved_meeting_dto" executed="True" success="True" time="0.016" asserts="21" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToRetrievedPanelReviewDTO_test" executed="True" success="True" time="0.000" asserts="17" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToServiceCoverageItems_test" executed="True" success="True" time="0.000" asserts="15" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToStockDTO_should_return_null_when_stock_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToStockDTOs_test" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToStockInterest" executed="True" success="True" time="0.016" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToTagGroupDTO_test" executed="True" success="True" time="0.000" asserts="13" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToTagGroupDTO_test_when_parameter_is_null" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToTagGroupDTO_test_when_tag_currency_is_null" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToTelephoneNumbersDTO_test" executed="True" success="True" time="0.000" asserts="13" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToUserMeetingItemDTOS_should_convert_to_DTO" executed="True" success="True" time="0.016" asserts="14" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.ConverterTest.ToUserMeetingItemDTOS_should_convert_to_DTO_when_empty_contact_attendees" executed="True" success="True" time="0.000" asserts="13" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.FileTransferUtilTest" success="True" time="0.172" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FileTransferUtilTest.should_calculate_file_path" executed="True" success="True" time="0.047" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FileTransferUtilTest.should_create_directory_and_return_fileName" executed="True" success="True" time="0.031" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FileTransferUtilTest.should_delete_file" executed="True" success="True" time="0.031" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FileTransferUtilTest.should_list_files_under_speciefied_directory" executed="True" success="True" time="0.031" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FileTransferUtilTest.should_list_only_visible_files" executed="True" success="True" time="0.031" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.FrequencyTimeCalculatorTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FrequencyTimeCalculatorTest.should_calculate_monthly" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FrequencyTimeCalculatorTest.should_calculate_proper_time_correstponding_to_client_today" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FrequencyTimeCalculatorTest.should_calculate_time_corresponding_to_client_today" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FrequencyTimeCalculatorTest.should_calculate_weekly" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.FrequencyTimeCalculatorTest.spike_week_operation" executed="True" success="True" time="0.000" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.InterestListTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.InterestListTest.should_remove_covered_interests_from_existing_interests" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Server.Util.LdapSearchTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.LdapSearchTest.should_find_email_from_ldap" executed="False">
                                        <reason>
                                          <message><![CDATA[Environment specific test, goes to the real domain]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Server.Util.LdapSearchTest.should_throw_exception_if_user_not_found" executed="False">
                                        <reason>
                                          <message><![CDATA[Environment specific test, goes to the real domain]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Macquarie.Evolve.Test.Unit.Shared" success="True" time="1.188" asserts="0">
                            <results>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest.should_filter_by_from_time" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest.should_filter_by_from_time_and_to" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest.should_filter_by_time" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest.should_filter_by_time_empty_list" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest.should_filter_by_time_seconds" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.AlertsTest.should_filter_by_to_time" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Command" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Command.BatchedCommandTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.BatchedCommandTest.should_not_send_if_all_commands_found_in_cache" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.BatchedCommandTest.should_not_support_mixing_offline_and_online_commands" description="We do not need to implement this now. please delete it if you end up changing this requirement." executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.BatchedCommandTest.should_not_support_offline_if_inner_Commands_do_not_support_offline" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.BatchedCommandTest.should_remove_from_commands_to_send_when_found_inCache" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.BatchedCommandTest.should_support_offline_if_inner_Commands_support_offline" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.AddAlertPreferenceCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.AddContactListCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.AddContactNoteCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.AddContactsToMyContactsCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.AddInterestForUserCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.RemoveAlertPreferenceCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.RenameMyContactListCommand_should_have_CacheMutator_attribute" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandMutatorAttibuteTest.UpdateRegionSectorInterestAlertPreferenceCommand_test" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandTest.batchCommands_are_cachable" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandTest.command_should_not_piggyback_alerts_when_Dont_piggyback_attribute_is_set" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandTest.command_should_piggyback_alerts_when_Async" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Command.EvolveCommandTest.IsHeartbeatCommand_test" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Config" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Config.FileWCFServiceConfigTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.FileWCFServiceConfigTest.should_load_bindings" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.FileWCFServiceConfigTest.should_load_bindings_from_config" executed="True" success="True" time="0.016" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.FileWCFServiceConfigTest.should_use_default_value_if_no_max_connections_specified" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.FileWCFServiceConfigTest.should_use_specified_value_from_file" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Config.NantConfigTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.NantConfigTest.should_parse_property" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.NantConfigTest.should_parse_property_with_group" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.NantConfigTest.should_set_property" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Config.NantConfigTest.should_set_property_with_group" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_be_able_to_get_corresponding_phone_number" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_get_assistant_telephone_number" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_include_organisation_name_to_full_name" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_not_be_contacted_today_if_last_contact_was_not_today" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_not_get_assistant_number_if_no_such_type" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_parse_out_first_primary_email_address_if_there_are_primary_emails" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_recalculate_contacted_today_based_on_current_time" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_return_city_and_country_as_location" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_return_empty_for_primary_email_address_if_there_are_not_primary_emails" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_return_empty_if_no_alternate_email_address" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_return_empty_number_if_no_corresponding_telephone_number" executed="True" success="True" time="0.000" asserts="6" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_return_first_alternate_email_address" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ContactDTOTest.should_return_null_if_no_office_address" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.AccountPriorityDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.AccountPriorityDTOTest.should_compose_string_with_correct_format" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.AlertDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.AlertDTOTest.should_get_based_on_target_object_id" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.AlertDTOTest.should_get_TagGroupClients_info" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.BasicUserInfoTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.BasicUserInfoTest.IsDisabled_should_be_false_by_default" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.ContactAttendeeDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ContactAttendeeDTOTest.shoudl_get_full_name_with_organisation" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ContactAttendeeDTOTest.should_construct_from_contact" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.ElectronicResearchAccessesDTOTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ElectronicResearchAccessesDTOTest.should_not_ready_to_show_if_no_data_available" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ElectronicResearchAccessesDTOTest.should_not_ready_to_show_if_no_real_data_available" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ElectronicResearchAccessesDTOTest.should_ready_to_show_if_any_real_data_available" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ElectronicResearchAccessesDTOTest.should_return_false_when_dto_do_not_has_bloomberg_or_it_value_is_false" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ElectronicResearchAccessesDTOTest.should_return_true_when_dto_has_bloomberg_and_value_is_true_or_somestring" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.RecipientDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.RecipientDTOTest.FullName_should_return_givenname_and_familyname_and_groupname_if_groupname_exist" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.RecipientDTOTest.FullName_should_return_givenname_and_familyname_when_groupname_doesnot_exist" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.RecipientDTOTest.FullName_should_return_givenname_and_familyname_when_groupname_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.RecipientDTOTest.FullName_should_work_well_when_this_user_doesnot_has_givename" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.RecipientDTOTest.toString_should_return_fullname" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.RegionSectorDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.RegionSectorDTOTest.should_return_equals_if_two_interests_have_same_sector_and_region" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.ServiceCoverageItemDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ServiceCoverageItemDTOTest.IsContactServicedByUser_should_be_false_and_user_id_is_empty_for_not_serviced_item" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.ServiceCoverageItemDTOTest.IsContactServicedByUser_should_be_true_for_serviced_item" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.StockDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.StockDTOTest.should_compose_string_of_object_with_proper_format" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.TagDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TagDTOTest.has_amount_should_reflect_valid_value" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_combine_four_fields_when_get_telephone_number" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_ignore_areaCode_if_not_inputted" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_ignore_areaCode_if_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_ignore_extentionCode_and_areaCode_if_both_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_ignore_extentionCode_and_areaCode_if_both_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_ignore_extentionCode_if_not_inputted" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.should_ignore_extentionCode_if_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.Should_return_empty_string_when_all_4_fields_are_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumberDTOTest.Should_return_empty_string_when_all_4_fields_are_null" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumbersDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumbersDTOTest.should_not_ready_to_show_if_has_no_data" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumbersDTOTest.should_not_ready_to_show_if_has_no_real_data" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.TelephoneNumbersDTOTest.should_ready_to_show_if_has_real_data" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.UserAttendeeDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.UserAttendeeDTOTest.FullNameWithGroup_should_not_add_group_name_when_group_is_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.UserAttendeeDTOTest.FullNameWithGroup_should_not_add_group_name_when_group_is_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.UserAttendeeDTOTest.FullNameWithGroup_test" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Data.UserDTOTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Data.UserDTOTest.user_id_should_be_set_with_user_domain_credential" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.EmailAddressesTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EmailAddressesTest.should_find_if_contains_email_by_string" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EmailAddressesTest.should_find_if_contains_email_by_string_and_ignore_case" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EmailAddressesTest.should_find_primary_email_address" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EmailAddressesTest.should_find_return_primary_email_address_as_null_when_none_available" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EmailAddressesTest.should_not_find_if_list_does_not_email_by_string" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.EntityTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EntityTest.entities_of_same_heirarchy_and_same_id_are_equal_even_if_contents_differ" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EntityTest.entities_of_same_type_and_same_id_are_equal" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EntityTest.entities_of_same_type_and_same_id_are_equal_even_if_contents_differ" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EntityTest.entities_should_be_equal_to_itself" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.EntityTest.entities_should_not_be_equal_to_null" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Mail" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.all_information_after_should_be_preserved" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_apply_template_on_plain_text_email" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_handle_null_body" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_insert_default_template" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_not_change_message_if_it_does_not_contain_personalisation_markers" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_not_remove_unsupported_markers" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_remove_all_personalisation_markers" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_replace_existing_template_when_inserting_a_new_template" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_templatize_even_if_blanks_are_removed" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_templatize_even_with_wrong_case" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Mail.PlainTextMailTemplateTest.should_templatize_preferredName" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.NameTest" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_display_name_when_no_title_available" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_display_name_with_title" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_family_name_and_given_name_without_removing_dash" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_full_name_from_first_and_last_name" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_full_name_from_first_name_when_last_name_is_not_available" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_given_name_without_removing_dash" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_name_from_full_name_string" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_build_name_when_only_one_part_exists" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.NameTest.should_parse_name_with_space_in_family_name" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_Find_if_there_Is_Next_page" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_Find_if_there_Is_Previous_page" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_Find_next_page_start" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_Find_previous_page_start" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_show_correct_string" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_show_correct_string_in_first_page_and_work_out_correct_page_number_when_results_are_larger_than_page_size" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_show_correct_string_when_results_are_smaller_than_page_size" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.PageInfoTest.should_show_correct_string_when_results_are_smaller_than_page_size_in_last_page" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.different_type_objecs_should_not_be_equal" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_inherited__objects_with_non_primitives" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_object" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_objects_with_arrays" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_objects_with_lists" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_objects_with_primitives_in_base_class" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_objects_with_recursive_objects" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_primitives" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_simple_objects_with_non_primitives" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_simple_objects_with_primitives" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_check_equals_on_third_level" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_ignore_attributed_fields" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.ReflectionEqualsTest.should_work_for_variables_that_is_null" executed="True" success="True" time="0.000" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Responses" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Responses.BatchedResponseTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.BatchedResponseTest.should_throw_Exception_when_expected_response_is_not_available" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Responses.EvolveResponseTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.EvolveResponseTest.nothing_should_not_be_static" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetCurrentUserResponseTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetCurrentUserResponseTest.update_should_add_new_interest_to_cache_for_AddInterestForUserCommand_without_covered_interest" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetCurrentUserResponseTest.update_should_remove_covered_interests_from_cache_for_AddInterestForUserCommand_with_covered_interests" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetCurrentUserResponseTest.update_should_remove_deleted_interest_from_cache_for_RemoveMyInterestsCommand" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetMyContactsInterestsResponseTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetMyContactsInterestsResponseTest.should_update_my_contact_interests_when_adding_new_contacts_so_that_they_are_available_offline" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetMyContactsInterestsResponseTest.should_update_my_contact_interests_when_deleting_interests_to_be_available_offline" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetMyContactsInterestsResponseTest.update_should_add_new_added_interest_to_cache_for_AddInterestForContactCommand" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Responses.GetMyContactsInterestsResponseTest.update_should_update_cache_for_contact_not_present_in_my_contact_interests_cache" description="This means that for non contacts we may be caching the interests. We are doing this because, for mycontacts with no interests there is no entry. so it is impossible to distinguish from contacts and global contacts here." executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest" success="True" time="0.391" asserts="0">
                                <results>
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.IsConflicted_should_return_false_when_both_of_contact_and_user_are_no_conflicted" executed="True" success="True" time="0.375" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.IsConflicted_should_return_true_when_one_of_contact_and_user_conflicted" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.should_return_false_and_interate_all_periods_in_all_schedules_when_no_conflict" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.should_return_false_when_one_side_this_period_is_same_with_one_boundary_of_one_of_period_list" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.should_return_true_and_not_interate_all_periods_in_all_schedules_when_one_conflict" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.should_return_true_when_part_of_this_period_is_covered_by_one_of_period_list" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Macquarie.Evolve.Test.Unit.Shared.SchedulingDataTest.should_return_true_when_this_period_is_covered_by_one_of_period_list" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils" success="True" time="0.625" asserts="0">
                                <results>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.AttributeUtilTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.AttributeUtilTest.HasAttribute_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.AttributeUtilTest.should_get_attribute_from_type" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_assign_arguments_to_properties" executed="True" success="True" time="0.016" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_check_if_argument_set" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_get_available_parameters" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_handle_range_correctly" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_set_get_enumeration_types" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_set_get_int_types" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_set_property" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_throw_on_missing_mandatory" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.BaseArgumentsTest.should_use_default_value" executed="True" success="True" time="0.000" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.DateTimeUtilTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.DateTimeUtilTest.IsInSameDay_test" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.DateTimeUtilTest.IsInSameMonth_test" executed="True" success="True" time="0.000" asserts="4" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.DateTimeUtilTest.IsInSameWeek_test" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.DateTimeUtilTest.should_get_date_of_the_first_day_of_given_month" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.EListTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EListTest.should_able_to_return_different_type" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EListTest.should_detect" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EListTest.should_do_each" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EListTest.should_return_new_list_by_select" executed="True" success="True" time="0.000" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveActionContextTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveActionContextTest.current_context_should_be_created_with_local_setting" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveActionContextTest.should_deserialize_from_source_string" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveActionContextTest.should_serialize_to_proper_format" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveTempFolderTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveTempFolderTest.should_create_file" executed="True" success="True" time="0.016" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveTempFolderTest.should_create_folder_if_not_exist" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.EvolveTempFolderTest.should_throw_exception_if_content_is_null" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.NetFxUtilTest" success="True" time="0.000" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.NetFxUtilTest.should_list_installed_net_fx_versions" executed="True" success="True" time="0.000" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.EscapeSpecialChars_should_prepend_back_slash_to_these_special_chars_used_in_regular_expression" executed="True" success="True" time="0.000" asserts="3" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.null_should_return_empty_true" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_capitalize_first_characater_for_human_reading" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_check_equals_without_casing" executed="True" success="True" time="0.000" asserts="5" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_compose_comma_seperated_string_for_guids" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_compose_comma_seperated_string_for_strings" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_create_byte_array" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_extract_userId_from_ldap_address" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_get_comma_joint_string_without_duplication" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_get_user_name_from_full_login_name" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_match_by_start" executed="True" success="True" time="0.000" asserts="6" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_match_containing_strings" executed="True" success="True" time="0.000" asserts="12" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_return_NA_if_string_is_null_or_empty" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.should_throw_up_when_string_is_less_than_bytes_specifid" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.single_line_should_return_empty_for_empty" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.single_line_should_return_null_for_null" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.STest.single_line_should_return_the_first_line_if_multiple_exists" executed="True" success="True" time="0.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest" success="True" time="0.500" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_be_able_to_restart_timer_if_it_was_stopped" executed="True" success="True" time="0.500" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_be_able_to_restart_while_already_started" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_execute_each_time_the_timer_fires" executed="True" success="True" time="0.000" asserts="2" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_execute_task" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_only_be_able_to_set_task_once" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_reset_timer_to_default_interval" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TimerSchedulerTest.should_runOnce" executed="True" success="True" time="0.000" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest" success="True" time="0.063" asserts="0">
                                    <results>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.BindsAMethodCallToString" executed="True" success="True" time="0.047" asserts="14" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.ShouldThrowExceptionWhenTryToTraceAbstractClass" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.ThrowTraceExceptionWhenChainedMethodIsNotVirtual" executed="False">
                                        <reason>
                                          <message><![CDATA[Missing Feature- Gabbar.]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.ThrowTraceExceptionWhenMethodIsNotVirtual" executed="True" success="True" time="0.000" asserts="0" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.ThrowTraceExceptionWhenTraceMemberIsNotCalled" executed="True" success="True" time="0.000" asserts="1" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.ValidationKeyMember" executed="True" success="True" time="0.000" asserts="7" />
                                      <test-case name="Macquarie.Evolve.Test.Unit.Shared.Utils.TraceTest.VirtualMethodCallInConstructor" executed="False">
                                        <reason>
                                          <message><![CDATA[Missing Feature]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>
