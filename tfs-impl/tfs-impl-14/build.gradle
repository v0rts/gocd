/*
 * Copyright 2023 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.thoughtworks.go.build.DownloadFile
import com.thoughtworks.go.build.VerifyJarTask
import org.apache.commons.codec.digest.DigestUtils

description = 'GoCD TFS SDK wrapper v14'

dependencies {
  implementation project(':common')
  implementation files("${project.buildDir}/tfssdk/lib/com.microsoft.tfs.sdk-${project.versions.tfsSdk}.jar")

  testImplementation project.deps.junit5Api
  testRuntimeOnly project.deps.junit5Engine
  testImplementation project.deps.hamcrest
  testImplementation project.deps.mockitoCore
  testImplementation project.deps.assertJ
}

jar {
  archiveClassifier = 'classes'
}

private File destFile(String url) {
  new File(gradle.gradleUserHomeDir, "download-cache/${DigestUtils.md5Hex(url)}/${new File(new URL(url).path).name}")
}

task downloadTfsSdk(type: DownloadFile) {
  def srcUrl = "https://github.com/microsoft/team-explorer-everywhere/releases/download/${project.versions.tfsSdk}/TFS-SDK-${project.versions.tfsSdk}.zip"
  src srcUrl
  dest destFile(srcUrl)
  checksum project.versions.tfsSdkSha256sum
}

task extractTfsSdk(type: Copy) {
  doFirst {
    delete "${project.buildDir}/tfssdk"
  }
  dependsOn downloadTfsSdk
  from(project.zipTree(downloadTfsSdk.outputs.files.singleFile)) {
    include "*/redist/**"
    eachFile { fcd ->
      fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(2))
    }
    includeEmptyDirs = false
  }
  into "${project.buildDir}/tfssdk"
}

compileJava.dependsOn extractTfsSdk
generateLicenseReport.dependsOn extractTfsSdk
rootProject.generateLicenseReport.dependsOn extractTfsSdk

task fatJar(type: Jar) {
  finalizedBy 'verifyJar'
  dependsOn extractTfsSdk, jar
  from(jar.archiveFile) { into('lib/') }
  from("${extractTfsSdk.outputs.files.singleFile}/lib") {
    include "*.jar"
    into 'lib/'
  }
  from("${extractTfsSdk.outputs.files.singleFile}/native") {
    into 'tfssdk/native'
  }
}

task verifyJar(type: VerifyJarTask) {
  jarTask = fatJar
  expectedJars = [
    "lib": [
      "tfs-impl-14-${project.version}-classes.jar",
      "com.microsoft.tfs.sdk-${project.versions.tfsSdk}.jar",
    ]
  ]
}

artifacts {
  fatJarConfig fatJar
}
