import com.thoughtworks.go.build.DownloadFile
import com.thoughtworks.go.build.GithubArtifact
import com.thoughtworks.go.build.VerifyJarTask
import org.apache.commons.codec.digest.DigestUtils

/*
 * Copyright 2023 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configurations {
  pluginsZipConfig
}

def dependencies = [
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-ldap-authentication-plugin',
    tagName: 'v2.2.1-231',
    asset: 'gocd-ldap-authentication-plugin-2.2.1-231.jar',
    checksum: '3e3dbcbd6b20e63672d80f3aa9951558dadf6d90204ec2d8702ea15d733dae53'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-filebased-authentication-plugin',
    tagName: 'v2.1.2-191',
    asset: 'gocd-filebased-authentication-plugin-2.1.2-191.jar',
    checksum: 'b71cb26ea31b820a9b37edb870f1bbacdc8ea999983613105fa4333a9f86bf62'
  ),
  new GithubArtifact(
    user: 'tomzo',
    repo: 'gocd-yaml-config-plugin',
    tagName: 'v0.14.2-305',
    asset: 'yaml-config-plugin-0.14.2-305.jar',
    checksum: 'b48951ac8044fa86736cfe3d3e26e0b87940b68bbbb8d6da310fb3ec76c19136'
  ),
  new GithubArtifact(
    user: 'tomzo',
    repo: 'gocd-json-config-plugin',
    tagName: 'v0.6.1-165',
    asset: 'json-config-plugin-0.6.1-165.jar',
    checksum: '0ac7ad48a617520012022e01424457f6bf1ba50b36ec3040c863027f05d6403d'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-file-based-secrets-plugin',
    tagName: 'v1.1.2-170',
    asset: 'gocd-file-based-secrets-plugin-1.1.2-170.jar',
    checksum: '7aa5af90c565c1cd5076611851f28182f640404b5b6a8fe1d11d4bd3e2b91b5d'
  )
]

task createVersionFile {
  def file = file("${project.buildDir}/version.txt")
  inputs.property('version', rootProject.version)
  inputs.property('gitRevision', rootProject.gitRevision)

  outputs.file file

  doLast {
    file.getParentFile().mkdirs()
    file.withWriter { out ->
      out.write("${rootProject.version} (${rootProject.gitRevision})")
    }
  }
}

task downloadPlugins {
}

task pluginsZip(type: Zip) {
  finalizedBy 'verifyPluginZip'

  archiveBaseName = 'plugins'
  dependsOn createVersionFile
  from(createVersionFile)

  from(dependencies.collect { dep -> destFile(dep) })
}

task verifyPluginZip(type: VerifyJarTask) {
  jarTask = pluginsZip

  expectedJars = [
    '/': dependencies.collect { dep -> "${dep.repo}.jar".toString() }
  ]
}

artifacts {
  pluginsZipConfig pluginsZip
}

dependencies.each { dep ->
  task "download-${dep.repo}"(type: DownloadFile) { downloadTask ->
    pluginsZip.dependsOn downloadTask
    downloadPlugins.dependsOn downloadTask
    downloadTask.src dep.downloadUrl
    downloadTask.dest destFile(dep)
    downloadTask.checksum dep.checksum
  }

  pluginsZip.from(destFile(dep))
}

private File destFile(GithubArtifact dep) {
  new File(gradle.gradleUserHomeDir, "download-cache/${DigestUtils.md5Hex(dep.downloadUrl)}/${dep.repo}.jar")
}

task prepare(dependsOn: pluginsZip)
