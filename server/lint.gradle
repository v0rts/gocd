import com.thoughtworks.go.build.YarnRunTask

/*
 * Copyright 2022 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task scssLint {
  description "Run scss-lint"
  dependsOn ':server:initializeRailsGems'

  def inputDir = project.file("${project.railsRoot}/app/assets/new_stylesheets")
  inputs.dir(inputDir)

  doFirst {
    project.jrubyexec {
      workingDir = project.railsRoot

      args = ['-S', 'scss-lint', "--config", 'scss-lint.yml', inputDir]
      maxHeapSize = '1g'
    }

  }
}

task eslintold(type: YarnRunTask) {
  description "Run ESLint for old javascript code"
  dependsOn 'yarnInstall'

  workingDir = project.railsRoot

  yarnCommand = ['eslintold']
  source(project.file("${project.railsRoot}/app/assets/javascripts"))
  source(project.file("${project.railsRoot}/.eslintrc-old.json"))
  source(project.file("${project.railsRoot}/spec/javascripts"))
}

task eslint(type: YarnRunTask) {
  description "Run ESLint"
  dependsOn 'yarnInstall'

  workingDir = project.railsRoot

  yarnCommand = ['eslint']
  source(project.file("${project.railsRoot}/webpack"))
  source(project.file("${project.railsRoot}/spec/webpack"))
}

task tslint(type: YarnRunTask) {
  description "Run TSLint"
  dependsOn 'yarnInstall'

  workingDir = project.railsRoot

  yarnCommand = ['tslint']
  source(project.file("${project.railsRoot}/webpack"))
  source(project.file("${project.railsRoot}/spec/webpack"))
  source(project.file("${project.railsRoot}/tslint.json"))
}

task lint {
  description 'Run all lint tools'
  dependsOn eslintold, scssLint, eslint, tslint
}
